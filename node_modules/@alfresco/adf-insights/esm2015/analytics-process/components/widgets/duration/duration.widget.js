/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector no-access-missing-member no-input-rename   */
import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { ParameterValueModel } from '../../../../diagram/models/report/parameterValue.model';
import { ReportParameterDetailsModel } from '../../../../diagram/models/report/reportParameterDetails.model';
import { NumberWidgetAnalyticsComponent } from './../number/number.widget';
export class DurationWidgetComponent extends NumberWidgetAnalyticsComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        super(elementRef);
        this.elementRef = elementRef;
        this.required = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        let timeType = new FormControl();
        this.formGroup.addControl('timeType', timeType);
        if (this.required) {
            this.formGroup.get(this.controllerName).setValidators(Validators.required);
        }
        if (this.field.value === null) {
            this.field.value = 0;
        }
        /** @type {?} */
        let paramOptions = [];
        paramOptions.push(new ParameterValueModel({ id: '1', name: 'Seconds' }));
        paramOptions.push(new ParameterValueModel({ id: '60', name: 'Minutes' }));
        paramOptions.push(new ParameterValueModel({ id: '3600', name: 'Hours' }));
        paramOptions.push(new ParameterValueModel({ id: '86400', name: 'Days', selected: true }));
        this.duration = new ReportParameterDetailsModel({ id: 'duration', name: 'duration', options: paramOptions });
        this.duration.value = paramOptions[0].id;
    }
    /**
     * @return {?}
     */
    calculateDuration() {
        if (this.field && this.duration.value) {
            this.currentValue = parseInt(this.field.value, 10) * parseInt(this.duration.value, 10);
            this.formGroup.get(this.controllerName).setValue(this.currentValue);
            this.fieldChanged.emit({ value: this.currentValue });
        }
    }
}
DurationWidgetComponent.decorators = [
    { type: Component, args: [{
                selector: 'duration-widget',
                template: "<div class=\"adf-duration-widget-grid\">\n    <div class=\"adf-duration-widget-cell\">\n        <div class=\"adf-number-widget\">\n            <mat-form-field class=\"example-full-width\" floatPlaceholder=\"always\">\n                <input matInput\n                    placeholder=\"{{field.nameKey | translate}}\"\n                    type=\"text\"\n                    pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                    [id]=\"field.id\"\n                    [value]=\"field.value\"\n                    [(ngModel)]=\"field.value\"\n                    (ngModelChange)=\"calculateDuration()\">\n             </mat-form-field>\n        </div>\n    </div>\n    <div class=\"adf-duration-widget-cell\">\n        <div class=\"adf-dropdown-container\">\n            <analytics-dropdown-widget  [field]=\"duration\" [group]=\"formGroup\" [controllerName]=\"'timeType'\"\n                             [showDefaultOption]=\"false\"\n                             (fieldChanged)=\"calculateDuration()\"></analytics-dropdown-widget>\n        </div>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-duration-widget-grid{display:flex;justify-content:space-between}.adf-duration-widget-cell{width:49%}.adf-number-widget,.adf-number-widget .mat-form-field{width:100%}.adf-dropdown-container{margin-top:30px}"]
            }] }
];
/** @nocollapse */
DurationWidgetComponent.ctorParameters = () => [
    { type: ElementRef }
];
DurationWidgetComponent.propDecorators = {
    field: [{ type: Input }],
    formGroup: [{ type: Input, args: ['group',] }],
    controllerName: [{ type: Input, args: ['controllerName',] }],
    required: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DurationWidgetComponent.prototype.field;
    /** @type {?} */
    DurationWidgetComponent.prototype.formGroup;
    /** @type {?} */
    DurationWidgetComponent.prototype.controllerName;
    /** @type {?} */
    DurationWidgetComponent.prototype.required;
    /** @type {?} */
    DurationWidgetComponent.prototype.duration;
    /** @type {?} */
    DurationWidgetComponent.prototype.currentValue;
    /** @type {?} */
    DurationWidgetComponent.prototype.selectionGroup;
    /** @type {?} */
    DurationWidgetComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb24ud2lkZ2V0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImFuYWx5dGljcy1wcm9jZXNzL2NvbXBvbmVudHMvd2lkZ2V0cy9kdXJhdGlvbi9kdXJhdGlvbi53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBVSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RixPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUM3RixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxnRUFBZ0UsQ0FBQztBQUM3RyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQVEzRSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsOEJBQThCOzs7O0lBbUJ2RSxZQUFtQixVQUFzQjtRQUNyQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFESCxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBUHpDLGFBQVEsR0FBWSxLQUFLLENBQUM7SUFTMUIsQ0FBQzs7OztJQUVELFFBQVE7O1lBQ0EsUUFBUSxHQUFHLElBQUksV0FBVyxFQUFFO1FBQ2hDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUVoRCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUM5RTtRQUNELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQzNCLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUN4Qjs7WUFFRyxZQUFZLEdBQTBCLEVBQUU7UUFDNUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLG1CQUFtQixDQUFDLEVBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxDQUFDLENBQUMsQ0FBQztRQUN4RSxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksbUJBQW1CLENBQUMsRUFBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEUsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLG1CQUFtQixDQUFDLEVBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFFeEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLDJCQUEyQixDQUFDLEVBQUMsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUMsQ0FBQyxDQUFDO1FBQzNHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDN0MsQ0FBQzs7OztJQUVNLGlCQUFpQjtRQUNwQixJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUc7WUFDcEMsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3ZGLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3BFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUMsQ0FBQyxDQUFDO1NBQ3REO0lBQ0wsQ0FBQzs7O1lBeERKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixzakNBQXFDO2dCQUVyQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDeEM7Ozs7WUFYbUIsVUFBVTs7O29CQWN6QixLQUFLO3dCQUdMLEtBQUssU0FBQyxPQUFPOzZCQUdiLEtBQUssU0FBQyxnQkFBZ0I7dUJBR3RCLEtBQUs7Ozs7SUFUTix3Q0FDVzs7SUFFWCw0Q0FDNEI7O0lBRTVCLGlEQUM4Qjs7SUFFOUIsMkNBQzBCOztJQUUxQiwyQ0FBc0M7O0lBQ3RDLCtDQUFxQjs7SUFFckIsaURBQWlDOztJQUVyQiw2Q0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4gLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yIG5vLWFjY2Vzcy1taXNzaW5nLW1lbWJlciBuby1pbnB1dC1yZW5hbWUgICAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgUGFyYW1ldGVyVmFsdWVNb2RlbCB9IGZyb20gJy4uLy4uLy4uLy4uL2RpYWdyYW0vbW9kZWxzL3JlcG9ydC9wYXJhbWV0ZXJWYWx1ZS5tb2RlbCc7XG5pbXBvcnQgeyBSZXBvcnRQYXJhbWV0ZXJEZXRhaWxzTW9kZWwgfSBmcm9tICcuLi8uLi8uLi8uLi9kaWFncmFtL21vZGVscy9yZXBvcnQvcmVwb3J0UGFyYW1ldGVyRGV0YWlscy5tb2RlbCc7XG5pbXBvcnQgeyBOdW1iZXJXaWRnZXRBbmFseXRpY3NDb21wb25lbnQgfSBmcm9tICcuLy4uL251bWJlci9udW1iZXIud2lkZ2V0JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdkdXJhdGlvbi13aWRnZXQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9kdXJhdGlvbi53aWRnZXQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZHVyYXRpb24ud2lkZ2V0LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIER1cmF0aW9uV2lkZ2V0Q29tcG9uZW50IGV4dGVuZHMgTnVtYmVyV2lkZ2V0QW5hbHl0aWNzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpXG4gICAgZmllbGQ6IGFueTtcblxuICAgIEBJbnB1dCgnZ3JvdXAnKVxuICAgIHB1YmxpYyBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcblxuICAgIEBJbnB1dCgnY29udHJvbGxlck5hbWUnKVxuICAgIHB1YmxpYyBjb250cm9sbGVyTmFtZTogc3RyaW5nO1xuXG4gICAgQElucHV0KClcbiAgICByZXF1aXJlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgZHVyYXRpb246IFJlcG9ydFBhcmFtZXRlckRldGFpbHNNb2RlbDtcbiAgICBjdXJyZW50VmFsdWU6IG51bWJlcjtcblxuICAgIHB1YmxpYyBzZWxlY3Rpb25Hcm91cDogRm9ybUdyb3VwO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZik7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGxldCB0aW1lVHlwZSA9IG5ldyBGb3JtQ29udHJvbCgpO1xuICAgICAgICB0aGlzLmZvcm1Hcm91cC5hZGRDb250cm9sKCd0aW1lVHlwZScsIHRpbWVUeXBlKTtcblxuICAgICAgICBpZiAodGhpcy5yZXF1aXJlZCkge1xuICAgICAgICAgICAgdGhpcy5mb3JtR3JvdXAuZ2V0KHRoaXMuY29udHJvbGxlck5hbWUpLnNldFZhbGlkYXRvcnMoVmFsaWRhdG9ycy5yZXF1aXJlZCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZmllbGQudmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuZmllbGQudmFsdWUgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHBhcmFtT3B0aW9uczogUGFyYW1ldGVyVmFsdWVNb2RlbFtdID0gW107XG4gICAgICAgIHBhcmFtT3B0aW9ucy5wdXNoKG5ldyBQYXJhbWV0ZXJWYWx1ZU1vZGVsKHtpZDogJzEnLCBuYW1lOiAnU2Vjb25kcyd9KSk7XG4gICAgICAgIHBhcmFtT3B0aW9ucy5wdXNoKG5ldyBQYXJhbWV0ZXJWYWx1ZU1vZGVsKHtpZDogJzYwJywgbmFtZTogJ01pbnV0ZXMnfSkpO1xuICAgICAgICBwYXJhbU9wdGlvbnMucHVzaChuZXcgUGFyYW1ldGVyVmFsdWVNb2RlbCh7aWQ6ICczNjAwJywgbmFtZTogJ0hvdXJzJ30pKTtcbiAgICAgICAgcGFyYW1PcHRpb25zLnB1c2gobmV3IFBhcmFtZXRlclZhbHVlTW9kZWwoe2lkOiAnODY0MDAnLCBuYW1lOiAnRGF5cycsIHNlbGVjdGVkOiB0cnVlfSkpO1xuXG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBuZXcgUmVwb3J0UGFyYW1ldGVyRGV0YWlsc01vZGVsKHtpZDogJ2R1cmF0aW9uJywgbmFtZTogJ2R1cmF0aW9uJywgb3B0aW9uczogcGFyYW1PcHRpb25zfSk7XG4gICAgICAgIHRoaXMuZHVyYXRpb24udmFsdWUgPSBwYXJhbU9wdGlvbnNbMF0uaWQ7XG4gICAgfVxuXG4gICAgcHVibGljIGNhbGN1bGF0ZUR1cmF0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5maWVsZCAmJiB0aGlzLmR1cmF0aW9uLnZhbHVlICkge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50VmFsdWUgPSBwYXJzZUludCh0aGlzLmZpZWxkLnZhbHVlLCAxMCkgKiBwYXJzZUludCh0aGlzLmR1cmF0aW9uLnZhbHVlLCAxMCk7XG4gICAgICAgICAgICB0aGlzLmZvcm1Hcm91cC5nZXQodGhpcy5jb250cm9sbGVyTmFtZSkuc2V0VmFsdWUodGhpcy5jdXJyZW50VmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5maWVsZENoYW5nZWQuZW1pdCh7dmFsdWU6IHRoaXMuY3VycmVudFZhbHVlfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==