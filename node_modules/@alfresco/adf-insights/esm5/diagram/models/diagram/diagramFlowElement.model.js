/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DiagramWayPointModel } from './diagramWayPoint.model';
var DiagramFlowElementModel = /** @class */ (function () {
    function DiagramFlowElementModel(obj) {
        var _this = this;
        this.properties = [];
        this.waypoints = [];
        if (obj) {
            this.completed = !!obj.completed;
            this.current = !!obj.current;
            this.id = obj.id;
            this.properties = obj.properties;
            this.sourceRef = obj.sourceRef;
            this.targetRef = obj.targetRef;
            this.type = obj.type;
            if (obj.waypoints) {
                obj.waypoints.forEach(function (waypoint) {
                    _this.waypoints.push(new DiagramWayPointModel(waypoint));
                });
            }
        }
    }
    return DiagramFlowElementModel;
}());
export { DiagramFlowElementModel };
if (false) {
    /** @type {?} */
    DiagramFlowElementModel.prototype.completed;
    /** @type {?} */
    DiagramFlowElementModel.prototype.current;
    /** @type {?} */
    DiagramFlowElementModel.prototype.id;
    /** @type {?} */
    DiagramFlowElementModel.prototype.properties;
    /** @type {?} */
    DiagramFlowElementModel.prototype.sourceRef;
    /** @type {?} */
    DiagramFlowElementModel.prototype.targetRef;
    /** @type {?} */
    DiagramFlowElementModel.prototype.type;
    /** @type {?} */
    DiagramFlowElementModel.prototype.waypoints;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ3JhbUZsb3dFbGVtZW50Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImRpYWdyYW0vbW9kZWxzL2RpYWdyYW0vZGlhZ3JhbUZsb3dFbGVtZW50Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRS9EO0lBVUksaUNBQVksR0FBUztRQUFyQixpQkFlQztRQXJCRCxlQUFVLEdBQVUsRUFBRSxDQUFDO1FBSXZCLGNBQVMsR0FBMkIsRUFBRSxDQUFDO1FBR25DLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUNqQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDO1lBQzdCLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO1lBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxHQUFHLENBQUMsU0FBUyxFQUFFO2dCQUNmLEdBQUcsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUMsUUFBOEI7b0JBQ2pELEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksb0JBQW9CLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDNUQsQ0FBQyxDQUFDLENBQUM7YUFDTjtTQUNKO0lBQ0wsQ0FBQztJQUNMLDhCQUFDO0FBQUQsQ0FBQyxBQTFCRCxJQTBCQzs7OztJQXpCRyw0Q0FBbUI7O0lBQ25CLDBDQUFpQjs7SUFDakIscUNBQVc7O0lBQ1gsNkNBQXVCOztJQUN2Qiw0Q0FBa0I7O0lBQ2xCLDRDQUFrQjs7SUFDbEIsdUNBQWE7O0lBQ2IsNENBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRGlhZ3JhbVdheVBvaW50TW9kZWwgfSBmcm9tICcuL2RpYWdyYW1XYXlQb2ludC5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBEaWFncmFtRmxvd0VsZW1lbnRNb2RlbCB7XG4gICAgY29tcGxldGVkOiBib29sZWFuO1xuICAgIGN1cnJlbnQ6IGJvb2xlYW47XG4gICAgaWQ6IHN0cmluZztcbiAgICBwcm9wZXJ0aWVzOiBhbnlbXSA9IFtdO1xuICAgIHNvdXJjZVJlZjogc3RyaW5nO1xuICAgIHRhcmdldFJlZjogc3RyaW5nO1xuICAgIHR5cGU6IHN0cmluZztcbiAgICB3YXlwb2ludHM6IERpYWdyYW1XYXlQb2ludE1vZGVsW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZCA9ICEhb2JqLmNvbXBsZXRlZDtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudCA9ICEhb2JqLmN1cnJlbnQ7XG4gICAgICAgICAgICB0aGlzLmlkID0gb2JqLmlkO1xuICAgICAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0gb2JqLnByb3BlcnRpZXM7XG4gICAgICAgICAgICB0aGlzLnNvdXJjZVJlZiA9IG9iai5zb3VyY2VSZWY7XG4gICAgICAgICAgICB0aGlzLnRhcmdldFJlZiA9IG9iai50YXJnZXRSZWY7XG4gICAgICAgICAgICB0aGlzLnR5cGUgPSBvYmoudHlwZTtcbiAgICAgICAgICAgIGlmIChvYmoud2F5cG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgb2JqLndheXBvaW50cy5mb3JFYWNoKCh3YXlwb2ludDogRGlhZ3JhbVdheVBvaW50TW9kZWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53YXlwb2ludHMucHVzaChuZXcgRGlhZ3JhbVdheVBvaW50TW9kZWwod2F5cG9pbnQpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==