/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { getProperty } from './property-group-reader';
var LayoutOrientedConfigService = /** @class */ (function () {
    function LayoutOrientedConfigService(config) {
        this.config = config;
    }
    /**
     * @param {?} groupName
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.isGroupAllowed = /**
     * @param {?} groupName
     * @return {?}
     */
    function (groupName) {
        return this.getMatchingGroups(groupName).length > 0;
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.reorganiseByConfig = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        var _this = this;
        /** @type {?} */
        var layoutBlocks = this.config;
        return layoutBlocks.map(function (layoutBlock) {
            /** @type {?} */
            var flattenedItems = _this.flattenItems(layoutBlock.items);
            /** @type {?} */
            var properties = flattenedItems.reduce(function (props, explodedItem) {
                /** @type {?} */
                var property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];
                return props.concat(property);
            }, []);
            return {
                title: layoutBlock.title,
                properties: properties
            };
        });
    };
    /**
     * @private
     * @param {?} items
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.flattenItems = /**
     * @private
     * @param {?} items
     * @return {?}
     */
    function (items) {
        return items.reduce(function (accumulator, item) {
            /** @type {?} */
            var properties = Array.isArray(item.properties) ? item.properties : [item.properties];
            /** @type {?} */
            var flattenedProperties = properties.map(function (propertyName) {
                return {
                    groupName: item.aspect || item.type,
                    propertyName: propertyName
                };
            });
            return accumulator.concat(flattenedProperties);
        }, []);
    };
    /**
     * @private
     * @param {?} groupName
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.getMatchingGroups = /**
     * @private
     * @param {?} groupName
     * @return {?}
     */
    function (groupName) {
        return this.config
            .map(function (layoutBlock) { return layoutBlock.items; })
            .reduce(function (accumulator, items) { return accumulator.concat(items); }, [])
            .filter(function (item) { return item.aspect === groupName || item.type === groupName; });
    };
    return LayoutOrientedConfigService;
}());
export { LayoutOrientedConfigService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LayoutOrientedConfigService.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LW9yaWVudGVkLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb250ZW50LXNlcnZpY2VzLyIsInNvdXJjZXMiOlsiY29udGVudC1tZXRhZGF0YS9zZXJ2aWNlcy9jb25maWcvbGF5b3V0LW9yaWVudGVkLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUV0RDtJQUVJLHFDQUFvQixNQUFXO1FBQVgsV0FBTSxHQUFOLE1BQU0sQ0FBSztJQUFHLENBQUM7Ozs7O0lBRTVCLG9EQUFjOzs7O0lBQXJCLFVBQXNCLFNBQWlCO1FBQ25DLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7Ozs7SUFFTSx3REFBa0I7Ozs7SUFBekIsVUFBMEIsY0FBc0M7UUFBaEUsaUJBZUM7O1lBZFMsWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNO1FBRWhDLE9BQU8sWUFBWSxDQUFDLEdBQUcsQ0FBQyxVQUFDLFdBQVc7O2dCQUMxQixjQUFjLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDOztnQkFDdkQsVUFBVSxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUFLLEVBQUUsWUFBWTs7b0JBQzdDLFFBQVEsR0FBRyxXQUFXLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUU7Z0JBQ3JHLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNsQyxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBRVYsT0FBTztnQkFDSCxLQUFLLEVBQUUsV0FBVyxDQUFDLEtBQUs7Z0JBQ3hCLFVBQVUsWUFBQTthQUNiLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Ozs7OztJQUVPLGtEQUFZOzs7OztJQUFwQixVQUFxQixLQUFLO1FBQ3RCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFDLFdBQVcsRUFBRSxJQUFJOztnQkFDNUIsVUFBVSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7O2dCQUNqRixtQkFBbUIsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLFVBQUMsWUFBWTtnQkFDcEQsT0FBTztvQkFDSCxTQUFTLEVBQUUsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSTtvQkFDbkMsWUFBWSxjQUFBO2lCQUNmLENBQUM7WUFDTixDQUFDLENBQUM7WUFFRixPQUFPLFdBQVcsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNuRCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDWCxDQUFDOzs7Ozs7SUFFTyx1REFBaUI7Ozs7O0lBQXpCLFVBQTBCLFNBQWlCO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLE1BQU07YUFDYixHQUFHLENBQUMsVUFBQyxXQUFXLElBQUssT0FBQSxXQUFXLENBQUMsS0FBSyxFQUFqQixDQUFpQixDQUFDO2FBQ3ZDLE1BQU0sQ0FBQyxVQUFDLFdBQVcsRUFBRSxLQUFLLElBQUssT0FBQSxXQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUF6QixDQUF5QixFQUFFLEVBQUUsQ0FBQzthQUM3RCxNQUFNLENBQUMsVUFBQyxJQUFJLElBQUssT0FBQSxJQUFJLENBQUMsTUFBTSxLQUFLLFNBQVMsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBcEQsQ0FBb0QsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFDTCxrQ0FBQztBQUFELENBQUMsQUE3Q0QsSUE2Q0M7Ozs7Ozs7SUEzQ2UsNkNBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtcbiAgICBDb250ZW50TWV0YWRhdGFDb25maWcsXG4gICAgTGF5b3V0T3JpZW50ZWRDb25maWdJdGVtLFxuICAgIE9yZ2FuaXNlZFByb3BlcnR5R3JvdXAsXG4gICAgUHJvcGVydHlHcm91cENvbnRhaW5lclxufSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2NvbnRlbnQtbWV0YWRhdGEuaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBnZXRQcm9wZXJ0eSB9IGZyb20gJy4vcHJvcGVydHktZ3JvdXAtcmVhZGVyJztcblxuZXhwb3J0IGNsYXNzIExheW91dE9yaWVudGVkQ29uZmlnU2VydmljZSBpbXBsZW1lbnRzIENvbnRlbnRNZXRhZGF0YUNvbmZpZyB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbmZpZzogYW55KSB7fVxuXG4gICAgcHVibGljIGlzR3JvdXBBbGxvd2VkKGdyb3VwTmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldE1hdGNoaW5nR3JvdXBzKGdyb3VwTmFtZSkubGVuZ3RoID4gMDtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVvcmdhbmlzZUJ5Q29uZmlnKHByb3BlcnR5R3JvdXBzOiBQcm9wZXJ0eUdyb3VwQ29udGFpbmVyKTogT3JnYW5pc2VkUHJvcGVydHlHcm91cFtdIHtcbiAgICAgICAgY29uc3QgbGF5b3V0QmxvY2tzID0gdGhpcy5jb25maWc7XG5cbiAgICAgICAgcmV0dXJuIGxheW91dEJsb2Nrcy5tYXAoKGxheW91dEJsb2NrKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmbGF0dGVuZWRJdGVtcyA9IHRoaXMuZmxhdHRlbkl0ZW1zKGxheW91dEJsb2NrLml0ZW1zKSxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzID0gZmxhdHRlbmVkSXRlbXMucmVkdWNlKChwcm9wcywgZXhwbG9kZWRJdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5ID0gZ2V0UHJvcGVydHkocHJvcGVydHlHcm91cHMsIGV4cGxvZGVkSXRlbS5ncm91cE5hbWUsIGV4cGxvZGVkSXRlbS5wcm9wZXJ0eU5hbWUpIHx8IFtdO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuY29uY2F0KHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgICB9LCBbXSk7XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6IGxheW91dEJsb2NrLnRpdGxlLFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXNcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgZmxhdHRlbkl0ZW1zKGl0ZW1zKSB7XG4gICAgICAgIHJldHVybiBpdGVtcy5yZWR1Y2UoKGFjY3VtdWxhdG9yLCBpdGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0aWVzID0gQXJyYXkuaXNBcnJheShpdGVtLnByb3BlcnRpZXMpID8gaXRlbS5wcm9wZXJ0aWVzIDogW2l0ZW0ucHJvcGVydGllc107XG4gICAgICAgICAgICBjb25zdCBmbGF0dGVuZWRQcm9wZXJ0aWVzID0gcHJvcGVydGllcy5tYXAoKHByb3BlcnR5TmFtZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwTmFtZTogaXRlbS5hc3BlY3QgfHwgaXRlbS50eXBlLFxuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eU5hbWVcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBhY2N1bXVsYXRvci5jb25jYXQoZmxhdHRlbmVkUHJvcGVydGllcyk7XG4gICAgICAgIH0sIFtdKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldE1hdGNoaW5nR3JvdXBzKGdyb3VwTmFtZTogc3RyaW5nKTogTGF5b3V0T3JpZW50ZWRDb25maWdJdGVtW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWdcbiAgICAgICAgICAgIC5tYXAoKGxheW91dEJsb2NrKSA9PiBsYXlvdXRCbG9jay5pdGVtcylcbiAgICAgICAgICAgIC5yZWR1Y2UoKGFjY3VtdWxhdG9yLCBpdGVtcykgPT4gYWNjdW11bGF0b3IuY29uY2F0KGl0ZW1zKSwgW10pXG4gICAgICAgICAgICAuZmlsdGVyKChpdGVtKSA9PiBpdGVtLmFzcGVjdCA9PT0gZ3JvdXBOYW1lIHx8IGl0ZW0udHlwZSA9PT0gZ3JvdXBOYW1lKTtcbiAgICB9XG59XG4iXX0=