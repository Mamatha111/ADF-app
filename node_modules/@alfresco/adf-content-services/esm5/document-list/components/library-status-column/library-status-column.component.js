/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
var LibraryStatusColumnComponent = /** @class */ (function () {
    function LibraryStatusColumnComponent() {
    }
    /**
     * @return {?}
     */
    LibraryStatusColumnComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var node = this.context.row.node;
        if (node && node.entry) {
            /** @type {?} */
            var visibility = node.entry.visibility;
            switch (visibility.toUpperCase()) {
                case 'PUBLIC':
                    this.displayText = 'LIBRARY.VISIBILITY.PUBLIC';
                    break;
                case 'PRIVATE':
                    this.displayText = 'LIBRARY.VISIBILITY.PRIVATE';
                    break;
                case 'MODERATED':
                    this.displayText = 'LIBRARY.VISIBILITY.MODERATED';
                    break;
                default:
                    this.displayText = 'UNKNOWN';
                    break;
            }
        }
    };
    LibraryStatusColumnComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-library-status-column',
                    template: "\n    <span title=\"{{ displayText | translate }}\">\n      {{ displayText | translate }}\n    </span>\n  ",
                    host: { class: 'adf-library-status-column' }
                }] }
    ];
    LibraryStatusColumnComponent.propDecorators = {
        context: [{ type: Input }]
    };
    return LibraryStatusColumnComponent;
}());
export { LibraryStatusColumnComponent };
if (false) {
    /** @type {?} */
    LibraryStatusColumnComponent.prototype.context;
    /** @type {?} */
    LibraryStatusColumnComponent.prototype.displayText;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS1zdGF0dXMtY29sdW1uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImRvY3VtZW50LWxpc3QvY29tcG9uZW50cy9saWJyYXJ5LXN0YXR1cy1jb2x1bW4vbGlicmFyeS1zdGF0dXMtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUV6RDtJQUFBO0lBb0NBLENBQUM7Ozs7SUFyQkMsK0NBQVE7OztJQUFSOztZQUNRLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJO1FBQ2xDLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7O2dCQUNoQixVQUFVLEdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVO1lBRWhELFFBQVEsVUFBVSxDQUFDLFdBQVcsRUFBRSxFQUFFO2dCQUNoQyxLQUFLLFFBQVE7b0JBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRywyQkFBMkIsQ0FBQztvQkFDL0MsTUFBTTtnQkFDUixLQUFLLFNBQVM7b0JBQ1osSUFBSSxDQUFDLFdBQVcsR0FBRyw0QkFBNEIsQ0FBQztvQkFDaEQsTUFBTTtnQkFDUixLQUFLLFdBQVc7b0JBQ2QsSUFBSSxDQUFDLFdBQVcsR0FBRyw4QkFBOEIsQ0FBQztvQkFDbEQsTUFBTTtnQkFDUjtvQkFDRSxJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQztvQkFDN0IsTUFBTTthQUNUO1NBQ0Y7SUFDSCxDQUFDOztnQkFuQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFFBQVEsRUFBRSw0R0FJVDtvQkFDRCxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsMkJBQTJCLEVBQUU7aUJBQzdDOzs7MEJBRUUsS0FBSzs7SUEwQlIsbUNBQUM7Q0FBQSxBQXBDRCxJQW9DQztTQTNCWSw0QkFBNEI7OztJQUN2QywrQ0FDYTs7SUFFYixtREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWRmLWxpYnJhcnktc3RhdHVzLWNvbHVtbicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHNwYW4gdGl0bGU9XCJ7eyBkaXNwbGF5VGV4dCB8IHRyYW5zbGF0ZSB9fVwiPlxuICAgICAge3sgZGlzcGxheVRleHQgfCB0cmFuc2xhdGUgfX1cbiAgICA8L3NwYW4+XG4gIGAsXG4gIGhvc3Q6IHsgY2xhc3M6ICdhZGYtbGlicmFyeS1zdGF0dXMtY29sdW1uJyB9XG59KVxuZXhwb3J0IGNsYXNzIExpYnJhcnlTdGF0dXNDb2x1bW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKVxuICBjb250ZXh0OiBhbnk7XG5cbiAgZGlzcGxheVRleHQ6IHN0cmluZztcblxuICBuZ09uSW5pdCgpIHtcbiAgICBjb25zdCBub2RlID0gdGhpcy5jb250ZXh0LnJvdy5ub2RlO1xuICAgIGlmIChub2RlICYmIG5vZGUuZW50cnkpIHtcbiAgICAgIGNvbnN0IHZpc2liaWxpdHk6IHN0cmluZyA9IG5vZGUuZW50cnkudmlzaWJpbGl0eTtcblxuICAgICAgc3dpdGNoICh2aXNpYmlsaXR5LnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgICAgY2FzZSAnUFVCTElDJzpcbiAgICAgICAgICB0aGlzLmRpc3BsYXlUZXh0ID0gJ0xJQlJBUlkuVklTSUJJTElUWS5QVUJMSUMnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdQUklWQVRFJzpcbiAgICAgICAgICB0aGlzLmRpc3BsYXlUZXh0ID0gJ0xJQlJBUlkuVklTSUJJTElUWS5QUklWQVRFJztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTU9ERVJBVEVEJzpcbiAgICAgICAgICB0aGlzLmRpc3BsYXlUZXh0ID0gJ0xJQlJBUlkuVklTSUJJTElUWS5NT0RFUkFURUQnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAnVU5LTk9XTic7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=