/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
export class LibraryRoleColumnComponent {
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const node = this.context.row.node;
        if (node && node.entry) {
            /** @type {?} */
            const role = node.entry.role;
            switch (role) {
                case 'SiteManager':
                    this.displayText = 'LIBRARY.ROLE.MANAGER';
                    break;
                case 'SiteCollaborator':
                    this.displayText = 'LIBRARY.ROLE.COLLABORATOR';
                    break;
                case 'SiteContributor':
                    this.displayText = 'LIBRARY.ROLE.CONTRIBUTOR';
                    break;
                case 'SiteConsumer':
                    this.displayText = 'LIBRARY.ROLE.CONSUMER';
                    break;
                default:
                    this.displayText = '';
                    break;
            }
        }
    }
}
LibraryRoleColumnComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-library-role-column',
                template: `
    <span title="{{ displayText | translate }}">
      {{ displayText | translate }}
    </span>
  `,
                host: { class: 'adf-library-role-column' }
            }] }
];
LibraryRoleColumnComponent.propDecorators = {
    context: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    LibraryRoleColumnComponent.prototype.context;
    /** @type {?} */
    LibraryRoleColumnComponent.prototype.displayText;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS1yb2xlLWNvbHVtbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJkb2N1bWVudC1saXN0L2NvbXBvbmVudHMvbGlicmFyeS1yb2xlLWNvbHVtbi9saWJyYXJ5LXJvbGUtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVd6RCxNQUFNLE9BQU8sMEJBQTBCOzs7O0lBTXJDLFFBQVE7O2NBQ0EsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7UUFDbEMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTs7a0JBQ2hCLElBQUksR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDcEMsUUFBUSxJQUFJLEVBQUU7Z0JBQ1osS0FBSyxhQUFhO29CQUNoQixJQUFJLENBQUMsV0FBVyxHQUFHLHNCQUFzQixDQUFDO29CQUMxQyxNQUFNO2dCQUNSLEtBQUssa0JBQWtCO29CQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLDJCQUEyQixDQUFDO29CQUMvQyxNQUFNO2dCQUNSLEtBQUssaUJBQWlCO29CQUNwQixJQUFJLENBQUMsV0FBVyxHQUFHLDBCQUEwQixDQUFDO29CQUM5QyxNQUFNO2dCQUNSLEtBQUssY0FBYztvQkFDakIsSUFBSSxDQUFDLFdBQVcsR0FBRyx1QkFBdUIsQ0FBQztvQkFDM0MsTUFBTTtnQkFDUjtvQkFDRSxJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztvQkFDdEIsTUFBTTthQUNUO1NBQ0Y7SUFDSCxDQUFDOzs7WUFyQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRTs7OztHQUlUO2dCQUNELElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSx5QkFBeUIsRUFBRTthQUMzQzs7O3NCQUVFLEtBQUs7Ozs7SUFBTiw2Q0FDYTs7SUFFYixpREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWRmLWxpYnJhcnktcm9sZS1jb2x1bW4nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIHRpdGxlPVwie3sgZGlzcGxheVRleHQgfCB0cmFuc2xhdGUgfX1cIj5cbiAgICAgIHt7IGRpc3BsYXlUZXh0IHwgdHJhbnNsYXRlIH19XG4gICAgPC9zcGFuPlxuICBgLFxuICBob3N0OiB7IGNsYXNzOiAnYWRmLWxpYnJhcnktcm9sZS1jb2x1bW4nIH1cbn0pXG5leHBvcnQgY2xhc3MgTGlicmFyeVJvbGVDb2x1bW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKVxuICBjb250ZXh0OiBhbnk7XG5cbiAgZGlzcGxheVRleHQ6IHN0cmluZztcblxuICBuZ09uSW5pdCgpIHtcbiAgICBjb25zdCBub2RlID0gdGhpcy5jb250ZXh0LnJvdy5ub2RlO1xuICAgIGlmIChub2RlICYmIG5vZGUuZW50cnkpIHtcbiAgICAgIGNvbnN0IHJvbGU6IHN0cmluZyA9IG5vZGUuZW50cnkucm9sZTtcbiAgICAgIHN3aXRjaCAocm9sZSkge1xuICAgICAgICBjYXNlICdTaXRlTWFuYWdlcic6XG4gICAgICAgICAgdGhpcy5kaXNwbGF5VGV4dCA9ICdMSUJSQVJZLlJPTEUuTUFOQUdFUic7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1NpdGVDb2xsYWJvcmF0b3InOlxuICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAnTElCUkFSWS5ST0xFLkNPTExBQk9SQVRPUic7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1NpdGVDb250cmlidXRvcic6XG4gICAgICAgICAgdGhpcy5kaXNwbGF5VGV4dCA9ICdMSUJSQVJZLlJPTEUuQ09OVFJJQlVUT1InO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdTaXRlQ29uc3VtZXInOlxuICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAnTElCUkFSWS5ST0xFLkNPTlNVTUVSJztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aGlzLmRpc3BsYXlUZXh0ID0gJyc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=