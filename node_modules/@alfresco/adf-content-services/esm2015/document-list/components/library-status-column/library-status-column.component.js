/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
export class LibraryStatusColumnComponent {
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const node = this.context.row.node;
        if (node && node.entry) {
            /** @type {?} */
            const visibility = node.entry.visibility;
            switch (visibility.toUpperCase()) {
                case 'PUBLIC':
                    this.displayText = 'LIBRARY.VISIBILITY.PUBLIC';
                    break;
                case 'PRIVATE':
                    this.displayText = 'LIBRARY.VISIBILITY.PRIVATE';
                    break;
                case 'MODERATED':
                    this.displayText = 'LIBRARY.VISIBILITY.MODERATED';
                    break;
                default:
                    this.displayText = 'UNKNOWN';
                    break;
            }
        }
    }
}
LibraryStatusColumnComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-library-status-column',
                template: `
    <span title="{{ displayText | translate }}">
      {{ displayText | translate }}
    </span>
  `,
                host: { class: 'adf-library-status-column' }
            }] }
];
LibraryStatusColumnComponent.propDecorators = {
    context: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    LibraryStatusColumnComponent.prototype.context;
    /** @type {?} */
    LibraryStatusColumnComponent.prototype.displayText;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS1zdGF0dXMtY29sdW1uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImRvY3VtZW50LWxpc3QvY29tcG9uZW50cy9saWJyYXJ5LXN0YXR1cy1jb2x1bW4vbGlicmFyeS1zdGF0dXMtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQVd6RCxNQUFNLE9BQU8sNEJBQTRCOzs7O0lBTXZDLFFBQVE7O2NBQ0EsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7UUFDbEMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTs7a0JBQ2hCLFVBQVUsR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVU7WUFFaEQsUUFBUSxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUU7Z0JBQ2hDLEtBQUssUUFBUTtvQkFDWCxJQUFJLENBQUMsV0FBVyxHQUFHLDJCQUEyQixDQUFDO29CQUMvQyxNQUFNO2dCQUNSLEtBQUssU0FBUztvQkFDWixJQUFJLENBQUMsV0FBVyxHQUFHLDRCQUE0QixDQUFDO29CQUNoRCxNQUFNO2dCQUNSLEtBQUssV0FBVztvQkFDZCxJQUFJLENBQUMsV0FBVyxHQUFHLDhCQUE4QixDQUFDO29CQUNsRCxNQUFNO2dCQUNSO29CQUNFLElBQUksQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDO29CQUM3QixNQUFNO2FBQ1Q7U0FDRjtJQUNILENBQUM7OztZQW5DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFOzs7O0dBSVQ7Z0JBQ0QsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLDJCQUEyQixFQUFFO2FBQzdDOzs7c0JBRUUsS0FBSzs7OztJQUFOLCtDQUNhOztJQUViLG1EQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhZGYtbGlicmFyeS1zdGF0dXMtY29sdW1uJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3BhbiB0aXRsZT1cInt7IGRpc3BsYXlUZXh0IHwgdHJhbnNsYXRlIH19XCI+XG4gICAgICB7eyBkaXNwbGF5VGV4dCB8IHRyYW5zbGF0ZSB9fVxuICAgIDwvc3Bhbj5cbiAgYCxcbiAgaG9zdDogeyBjbGFzczogJ2FkZi1saWJyYXJ5LXN0YXR1cy1jb2x1bW4nIH1cbn0pXG5leHBvcnQgY2xhc3MgTGlicmFyeVN0YXR1c0NvbHVtbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIGNvbnRleHQ6IGFueTtcblxuICBkaXNwbGF5VGV4dDogc3RyaW5nO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLmNvbnRleHQucm93Lm5vZGU7XG4gICAgaWYgKG5vZGUgJiYgbm9kZS5lbnRyeSkge1xuICAgICAgY29uc3QgdmlzaWJpbGl0eTogc3RyaW5nID0gbm9kZS5lbnRyeS52aXNpYmlsaXR5O1xuXG4gICAgICBzd2l0Y2ggKHZpc2liaWxpdHkudG9VcHBlckNhc2UoKSkge1xuICAgICAgICBjYXNlICdQVUJMSUMnOlxuICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAnTElCUkFSWS5WSVNJQklMSVRZLlBVQkxJQyc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1BSSVZBVEUnOlxuICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAnTElCUkFSWS5WSVNJQklMSVRZLlBSSVZBVEUnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdNT0RFUkFURUQnOlxuICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAnTElCUkFSWS5WSVNJQklMSVRZLk1PREVSQVRFRCc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhpcy5kaXNwbGF5VGV4dCA9ICdVTktOT1dOJztcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==