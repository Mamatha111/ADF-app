/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class IndifferentConfigService {
    /**
     * @param {?} config
     */
    constructor(config) { }
    /**
     * @param {?} groupName
     * @return {?}
     */
    isGroupAllowed(groupName) {
        return true;
    }
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    reorganiseByConfig(propertyGroups) {
        return Object.keys(propertyGroups)
            .map((groupName) => {
            /** @type {?} */
            const propertyGroup = propertyGroups[groupName];
            /** @type {?} */
            const properties = propertyGroup.properties;
            return Object.assign({}, propertyGroup, {
                properties: Object.keys(properties).map((propertyName) => properties[propertyName])
            });
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kaWZmZXJlbnQtY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJjb250ZW50LW1ldGFkYXRhL3NlcnZpY2VzL2NvbmZpZy9pbmRpZmZlcmVudC1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQSxNQUFNLE9BQU8sd0JBQXdCOzs7O0lBRWpDLFlBQVksTUFBVyxJQUFHLENBQUM7Ozs7O0lBRXBCLGNBQWMsQ0FBQyxTQUFpQjtRQUNuQyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLGNBQXNDO1FBQzVELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7YUFDN0IsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUU7O2tCQUNULGFBQWEsR0FBRyxjQUFjLENBQUMsU0FBUyxDQUFDOztrQkFDM0MsVUFBVSxHQUFHLGFBQWEsQ0FBQyxVQUFVO1lBRXpDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsYUFBYSxFQUFFO2dCQUNwQyxVQUFVLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUN0RixDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbnRlbnRNZXRhZGF0YUNvbmZpZywgT3JnYW5pc2VkUHJvcGVydHlHcm91cCxcbiAgICBQcm9wZXJ0eUdyb3VwQ29udGFpbmVyXG59IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvY29udGVudC1tZXRhZGF0YS5pbnRlcmZhY2VzJztcblxuZXhwb3J0IGNsYXNzIEluZGlmZmVyZW50Q29uZmlnU2VydmljZSBpbXBsZW1lbnRzIENvbnRlbnRNZXRhZGF0YUNvbmZpZyB7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IGFueSkge31cblxuICAgIHB1YmxpYyBpc0dyb3VwQWxsb3dlZChncm91cE5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVvcmdhbmlzZUJ5Q29uZmlnKHByb3BlcnR5R3JvdXBzOiBQcm9wZXJ0eUdyb3VwQ29udGFpbmVyKTogT3JnYW5pc2VkUHJvcGVydHlHcm91cFtdIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BlcnR5R3JvdXBzKVxuICAgICAgICAgICAgLm1hcCgoZ3JvdXBOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvcGVydHlHcm91cCA9IHByb3BlcnR5R3JvdXBzW2dyb3VwTmFtZV0sXG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXMgPSBwcm9wZXJ0eUdyb3VwLnByb3BlcnRpZXM7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcHJvcGVydHlHcm91cCwge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKHByb3BlcnR5TmFtZSkgPT4gcHJvcGVydGllc1twcm9wZXJ0eU5hbWVdKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxufVxuIl19