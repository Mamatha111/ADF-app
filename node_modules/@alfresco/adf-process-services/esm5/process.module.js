/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';
import { MaterialModule } from './material.module';
import { ProcessListModule } from './process-list/process-list.module';
import { TaskListModule } from './task-list/task-list.module';
import { AppsListModule } from './app-list/apps-list.module';
import { ProcessCommentsModule } from './process-comments/process-comments.module';
import { AttachmentModule } from './attachment/attachment.module';
import { PeopleModule } from './people/people.module';
var ɵ0 = {
    name: 'adf-process-services',
    source: 'assets/adf-process-services'
};
var ProcessModule = /** @class */ (function () {
    function ProcessModule() {
    }
    /**
     * @return {?}
     */
    ProcessModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: ProcessModule,
            providers: [
                {
                    provide: TRANSLATION_PROVIDER,
                    multi: true,
                    useValue: {
                        name: 'adf-process-services',
                        source: 'assets/adf-process-services'
                    }
                }
            ]
        };
    };
    /**
     * @return {?}
     */
    ProcessModule.forChild = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: ProcessModuleLazy
        };
    };
    ProcessModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CoreModule.forChild(),
                        CommonModule,
                        ProcessCommentsModule,
                        FormsModule,
                        ReactiveFormsModule,
                        MaterialModule,
                        ProcessListModule,
                        TaskListModule,
                        AppsListModule,
                        AttachmentModule,
                        PeopleModule
                    ],
                    providers: [
                        {
                            provide: TRANSLATION_PROVIDER,
                            multi: true,
                            useValue: ɵ0
                        }
                    ],
                    exports: [
                        CommonModule,
                        ProcessCommentsModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ProcessListModule,
                        TaskListModule,
                        AppsListModule,
                        AttachmentModule,
                        PeopleModule
                    ]
                },] }
    ];
    return ProcessModule;
}());
export { ProcessModule };
var ProcessModuleLazy = /** @class */ (function () {
    function ProcessModuleLazy() {
    }
    ProcessModuleLazy.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CoreModule.forChild(),
                        CommonModule,
                        ProcessCommentsModule,
                        FormsModule,
                        ReactiveFormsModule,
                        MaterialModule,
                        ProcessListModule,
                        TaskListModule,
                        AppsListModule,
                        AttachmentModule,
                        PeopleModule
                    ],
                    exports: [
                        CommonModule,
                        ProcessCommentsModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ProcessListModule,
                        TaskListModule,
                        AppsListModule,
                        AttachmentModule,
                        PeopleModule
                    ]
                },] }
    ];
    return ProcessModuleLazy;
}());
export { ProcessModuleLazy };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLXByb2Nlc3Mtc2VydmljZXMvIiwic291cmNlcyI6WyJwcm9jZXNzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUV0RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNuRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7U0FvQmhDO0lBQ04sSUFBSSxFQUFFLHNCQUFzQjtJQUM1QixNQUFNLEVBQUUsNkJBQTZCO0NBQ3hDO0FBckJiO0lBQUE7SUEwREEsQ0FBQzs7OztJQXJCVSxxQkFBTzs7O0lBQWQ7UUFDSSxPQUFPO1lBQ0gsUUFBUSxFQUFFLGFBQWE7WUFDdkIsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSxvQkFBb0I7b0JBQzdCLEtBQUssRUFBRSxJQUFJO29CQUNYLFFBQVEsRUFBRTt3QkFDTixJQUFJLEVBQUUsc0JBQXNCO3dCQUM1QixNQUFNLEVBQUUsNkJBQTZCO3FCQUN4QztpQkFDSjthQUNKO1NBQ0osQ0FBQztJQUNOLENBQUM7Ozs7SUFFTSxzQkFBUTs7O0lBQWY7UUFDSSxPQUFPO1lBQ0gsUUFBUSxFQUFFLGlCQUFpQjtTQUM5QixDQUFDO0lBQ04sQ0FBQzs7Z0JBekRKLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsVUFBVSxDQUFDLFFBQVEsRUFBRTt3QkFDckIsWUFBWTt3QkFDWixxQkFBcUI7d0JBQ3JCLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixjQUFjO3dCQUNkLGlCQUFpQjt3QkFDakIsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGdCQUFnQjt3QkFDaEIsWUFBWTtxQkFDZjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1A7NEJBQ0ksT0FBTyxFQUFFLG9CQUFvQjs0QkFDN0IsS0FBSyxFQUFFLElBQUk7NEJBQ1gsUUFBUSxJQUdQO3lCQUNKO3FCQUNKO29CQUNELE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLHFCQUFxQjt3QkFDckIsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGlCQUFpQjt3QkFDakIsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGdCQUFnQjt3QkFDaEIsWUFBWTtxQkFDZjtpQkFDSjs7SUF1QkQsb0JBQUM7Q0FBQSxBQTFERCxJQTBEQztTQXRCWSxhQUFhO0FBd0IxQjtJQUFBO0lBMEJnQyxDQUFDOztnQkExQmhDLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsVUFBVSxDQUFDLFFBQVEsRUFBRTt3QkFDckIsWUFBWTt3QkFDWixxQkFBcUI7d0JBQ3JCLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixjQUFjO3dCQUNkLGlCQUFpQjt3QkFDakIsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGdCQUFnQjt3QkFDaEIsWUFBWTtxQkFDZjtvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixxQkFBcUI7d0JBQ3JCLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixpQkFBaUI7d0JBQ2pCLGNBQWM7d0JBQ2QsY0FBYzt3QkFDZCxnQkFBZ0I7d0JBQ2hCLFlBQVk7cUJBQ2Y7aUJBQ0o7O0lBQytCLHdCQUFDO0NBQUEsQUExQmpDLElBMEJpQztTQUFwQixpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgVFJBTlNMQVRJT05fUFJPVklERVIgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuXG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJy4vbWF0ZXJpYWwubW9kdWxlJztcblxuaW1wb3J0IHsgUHJvY2Vzc0xpc3RNb2R1bGUgfSBmcm9tICcuL3Byb2Nlc3MtbGlzdC9wcm9jZXNzLWxpc3QubW9kdWxlJztcbmltcG9ydCB7IFRhc2tMaXN0TW9kdWxlIH0gZnJvbSAnLi90YXNrLWxpc3QvdGFzay1saXN0Lm1vZHVsZSc7XG5pbXBvcnQgeyBBcHBzTGlzdE1vZHVsZSB9IGZyb20gJy4vYXBwLWxpc3QvYXBwcy1saXN0Lm1vZHVsZSc7XG5pbXBvcnQgeyBQcm9jZXNzQ29tbWVudHNNb2R1bGUgfSBmcm9tICcuL3Byb2Nlc3MtY29tbWVudHMvcHJvY2Vzcy1jb21tZW50cy5tb2R1bGUnO1xuaW1wb3J0IHsgQXR0YWNobWVudE1vZHVsZSB9IGZyb20gJy4vYXR0YWNobWVudC9hdHRhY2htZW50Lm1vZHVsZSc7XG5pbXBvcnQgeyBQZW9wbGVNb2R1bGUgfSBmcm9tICcuL3Blb3BsZS9wZW9wbGUubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvcmVNb2R1bGUuZm9yQ2hpbGQoKSxcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBQcm9jZXNzQ29tbWVudHNNb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBNYXRlcmlhbE1vZHVsZSxcbiAgICAgICAgUHJvY2Vzc0xpc3RNb2R1bGUsXG4gICAgICAgIFRhc2tMaXN0TW9kdWxlLFxuICAgICAgICBBcHBzTGlzdE1vZHVsZSxcbiAgICAgICAgQXR0YWNobWVudE1vZHVsZSxcbiAgICAgICAgUGVvcGxlTW9kdWxlXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFJBTlNMQVRJT05fUFJPVklERVIsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgICAgIHVzZVZhbHVlOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2FkZi1wcm9jZXNzLXNlcnZpY2VzJyxcbiAgICAgICAgICAgICAgICBzb3VyY2U6ICdhc3NldHMvYWRmLXByb2Nlc3Mtc2VydmljZXMnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBQcm9jZXNzQ29tbWVudHNNb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBQcm9jZXNzTGlzdE1vZHVsZSxcbiAgICAgICAgVGFza0xpc3RNb2R1bGUsXG4gICAgICAgIEFwcHNMaXN0TW9kdWxlLFxuICAgICAgICBBdHRhY2htZW50TW9kdWxlLFxuICAgICAgICBQZW9wbGVNb2R1bGVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFByb2Nlc3NNb2R1bGUge1xuICAgIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFByb2Nlc3NNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFRSQU5TTEFUSU9OX1BST1ZJREVSLFxuICAgICAgICAgICAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhZGYtcHJvY2Vzcy1zZXJ2aWNlcycsXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6ICdhc3NldHMvYWRmLXByb2Nlc3Mtc2VydmljZXMnXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGZvckNoaWxkKCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFByb2Nlc3NNb2R1bGVMYXp5XG4gICAgICAgIH07XG4gICAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29yZU1vZHVsZS5mb3JDaGlsZCgpLFxuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIFByb2Nlc3NDb21tZW50c01vZHVsZSxcbiAgICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgICAgIE1hdGVyaWFsTW9kdWxlLFxuICAgICAgICBQcm9jZXNzTGlzdE1vZHVsZSxcbiAgICAgICAgVGFza0xpc3RNb2R1bGUsXG4gICAgICAgIEFwcHNMaXN0TW9kdWxlLFxuICAgICAgICBBdHRhY2htZW50TW9kdWxlLFxuICAgICAgICBQZW9wbGVNb2R1bGVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBQcm9jZXNzQ29tbWVudHNNb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBQcm9jZXNzTGlzdE1vZHVsZSxcbiAgICAgICAgVGFza0xpc3RNb2R1bGUsXG4gICAgICAgIEFwcHNMaXN0TW9kdWxlLFxuICAgICAgICBBdHRhY2htZW50TW9kdWxlLFxuICAgICAgICBQZW9wbGVNb2R1bGVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFByb2Nlc3NNb2R1bGVMYXp5IHt9XG4iXX0=