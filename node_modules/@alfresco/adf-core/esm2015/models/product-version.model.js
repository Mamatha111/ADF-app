/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class BpmProductVersionModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.edition = obj.edition || null;
            this.majorVersion = obj.majorVersion || null;
            this.revisionVersion = obj.revisionVersion || null;
            this.minorVersion = obj.minorVersion || null;
            this.type = obj.type || null;
        }
    }
}
if (false) {
    /** @type {?} */
    BpmProductVersionModel.prototype.edition;
    /** @type {?} */
    BpmProductVersionModel.prototype.majorVersion;
    /** @type {?} */
    BpmProductVersionModel.prototype.revisionVersion;
    /** @type {?} */
    BpmProductVersionModel.prototype.minorVersion;
    /** @type {?} */
    BpmProductVersionModel.prototype.type;
}
export class VersionModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.major = obj.major || null;
            this.minor = obj.minor || null;
            this.patch = obj.patch || null;
            this.hotfix = obj.hotfix || null;
            this.schema = obj.schema || null;
            this.label = obj.label || null;
            this.display = obj.display || null;
        }
    }
}
if (false) {
    /** @type {?} */
    VersionModel.prototype.major;
    /** @type {?} */
    VersionModel.prototype.minor;
    /** @type {?} */
    VersionModel.prototype.patch;
    /** @type {?} */
    VersionModel.prototype.hotfix;
    /** @type {?} */
    VersionModel.prototype.schema;
    /** @type {?} */
    VersionModel.prototype.label;
    /** @type {?} */
    VersionModel.prototype.display;
}
export class LicenseModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.issuedAt = obj.issuedAt || null;
            this.expiresAt = obj.expiresAt || null;
            this.remainingDays = obj.remainingDays || null;
            this.holder = obj.holder || null;
            this.mode = obj.mode || null;
            this.isClusterEnabled = obj.isClusterEnabled ? true : false;
            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;
        }
    }
}
if (false) {
    /** @type {?} */
    LicenseModel.prototype.issuedAt;
    /** @type {?} */
    LicenseModel.prototype.expiresAt;
    /** @type {?} */
    LicenseModel.prototype.remainingDays;
    /** @type {?} */
    LicenseModel.prototype.holder;
    /** @type {?} */
    LicenseModel.prototype.mode;
    /** @type {?} */
    LicenseModel.prototype.isClusterEnabled;
    /** @type {?} */
    LicenseModel.prototype.isCryptodocEnabled;
}
export class VersionStatusModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.isReadOnly = obj.isReadOnly ? true : false;
            this.isAuditEnabled = obj.isAuditEnabled ? true : false;
            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;
            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;
        }
    }
}
if (false) {
    /** @type {?} */
    VersionStatusModel.prototype.isReadOnly;
    /** @type {?} */
    VersionStatusModel.prototype.isAuditEnabled;
    /** @type {?} */
    VersionStatusModel.prototype.isQuickShareEnabled;
    /** @type {?} */
    VersionStatusModel.prototype.isThumbnailGenerationEnabled;
}
export class VersionModuleModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.id = obj.id || null;
            this.title = obj.title || null;
            this.description = obj.description || null;
            this.version = obj.version || null;
            this.installDate = obj.installDate || null;
            this.installState = obj.installState || null;
            this.versionMin = obj.versionMin || null;
            this.versionMax = obj.versionMax || null;
        }
    }
}
if (false) {
    /** @type {?} */
    VersionModuleModel.prototype.id;
    /** @type {?} */
    VersionModuleModel.prototype.title;
    /** @type {?} */
    VersionModuleModel.prototype.description;
    /** @type {?} */
    VersionModuleModel.prototype.version;
    /** @type {?} */
    VersionModuleModel.prototype.installDate;
    /** @type {?} */
    VersionModuleModel.prototype.installState;
    /** @type {?} */
    VersionModuleModel.prototype.versionMin;
    /** @type {?} */
    VersionModuleModel.prototype.versionMax;
}
export class EcmProductVersionModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        this.modules = [];
        if (obj && obj.entry && obj.entry.repository) {
            this.edition = obj.entry.repository.edition || null;
            this.version = new VersionModel(obj.entry.repository.version);
            this.license = new LicenseModel(obj.entry.repository.license);
            this.status = new VersionStatusModel(obj.entry.repository.status);
            if (obj.entry.repository.modules) {
                obj.entry.repository.modules.forEach((module) => {
                    this.modules.push(new VersionModuleModel(module));
                });
            }
        }
    }
}
if (false) {
    /** @type {?} */
    EcmProductVersionModel.prototype.edition;
    /** @type {?} */
    EcmProductVersionModel.prototype.version;
    /** @type {?} */
    EcmProductVersionModel.prototype.license;
    /** @type {?} */
    EcmProductVersionModel.prototype.status;
    /** @type {?} */
    EcmProductVersionModel.prototype.modules;
}
//# sourceMappingURL=data:application/json;base64,