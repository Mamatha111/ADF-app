/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { AuthenticationService } from '../../services/authentication.service';
import { BpmUserService } from './../services/bpm-user.service';
import { EcmUserService } from './../services/ecm-user.service';
import { IdentityUserService } from '../services/identity-user.service';
import { of } from 'rxjs';
export class UserInfoComponent {
    /**
     * @param {?} ecmUserService
     * @param {?} bpmUserService
     * @param {?} identityUserService
     * @param {?} authService
     */
    constructor(ecmUserService, bpmUserService, identityUserService, authService) {
        this.ecmUserService = ecmUserService;
        this.bpmUserService = bpmUserService;
        this.identityUserService = identityUserService;
        this.authService = authService;
        /**
         * Custom path for the background banner image for ACS users.
         */
        this.ecmBackgroundImage = './assets/images/ecm-background.png';
        /**
         * Custom path for the background banner image for APS users.
         */
        this.bpmBackgroundImage = './assets/images/bpm-background.png';
        /**
         * Custom choice for opening the menu at the bottom. Can be `before` or `after`.
         */
        this.menuPositionX = 'after';
        /**
         * Custom choice for opening the menu at the bottom. Can be `above` or `below`.
         */
        this.menuPositionY = 'below';
        /**
         * Shows/hides the username next to the user info button.
         */
        this.showName = true;
        /**
         * When the username is shown, this defines its position relative to the user info button.
         * Can be `right` or `left`.
         */
        this.namePosition = 'right';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getUserInfo();
    }
    /**
     * @return {?}
     */
    getUserInfo() {
        if (this.authService.isOauth()) {
            this.loadIdentityUserInfo();
        }
        else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {
            this.loadEcmUserInfo();
            this.loadBpmUserInfo();
        }
        else if (this.authService.isEcmLoggedIn()) {
            this.loadEcmUserInfo();
        }
        else if (this.authService.isBpmLoggedIn()) {
            this.loadBpmUserInfo();
        }
    }
    /**
     * @return {?}
     */
    isLoggedIn() {
        return this.authService.isLoggedIn();
    }
    /**
     * @return {?}
     */
    loadEcmUserInfo() {
        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();
    }
    /**
     * @return {?}
     */
    loadBpmUserInfo() {
        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();
    }
    /**
     * @return {?}
     */
    loadIdentityUserInfo() {
        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());
    }
    /**
     * @param {?} event
     * @return {?}
     */
    stopClosing(event) {
        event.stopPropagation();
    }
    /**
     * @param {?} avatarId
     * @return {?}
     */
    getEcmAvatar(avatarId) {
        return this.ecmUserService.getUserProfileImage(avatarId);
    }
    /**
     * @return {?}
     */
    getBpmUserImage() {
        return this.bpmUserService.getCurrentUserProfileImage();
    }
    /**
     * @return {?}
     */
    showOnRight() {
        return this.namePosition === 'right';
    }
}
UserInfoComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-userinfo',
                template: "<div id=\"userinfo_container\" [class.adf-userinfo-name-right]=\"showOnRight()\"\n    class=\"adf-userinfo-container\" *ngIf=\"isLoggedIn()\">\n\n    <ng-container *ngIf=\"showName\">\n        <span *ngIf=\"identityUser$ | async as identityUser; else showBpmAndEcmUserFullNames\" id=\"adf-userinfo-identity-name-display\"\n            class=\"adf-userinfo-name\">{{identityUser | fullName}}</span>\n        <ng-template #showBpmAndEcmUserFullNames>\n            <span *ngIf=\"ecmUser$ | async as ecmUser; else showBpmUserFullName\" id=\"adf-userinfo-ecm-name-display\"\n                class=\"adf-userinfo-name\">{{ecmUser | fullName}}</span>\n            <ng-template #showBpmUserFullName>\n                <span *ngIf=\"bpmUser$ | async as bpmUser\" id=\"adf-userinfo-bpm-name-display\"\n                    class=\"adf-userinfo-name\">{{bpmUser | fullName}}</span>\n            </ng-template>\n        </ng-template>\n    </ng-container>\n\n    <button mat-button [matMenuTriggerFor]=\"menu\" class=\"adf-userinfo-menu_button\" data-automation-id=\"adf-user-profile\">\n        <div class=\"adf-userinfo-button-profile\" id=\"user-profile\">\n            <div *ngIf=\"identityUser$ | async as identityUser; else showBpmAndEcmUserImage\" id=\"identity-user-image\">\n                <div [outerHTML]=\"identityUser | usernameInitials:'adf-userinfo-pic'\"></div>\n            </div>\n            <ng-template #showBpmAndEcmUserImage>\n                <div *ngIf=\"ecmUser$ | async as ecmUser; else showBpmUserImage\" id=\"ecm-user-image\">\n                    <div *ngIf=\"ecmUser.avatarId; else initialTemplate\" class=\"adf-userinfo-profile-container\">\n                        <img id=\"logged-user-img\" [src]=\"getEcmAvatar(ecmUser.avatarId)\" alt=\"user-info-profile-button\"\n                            class=\"adf-userinfo-profile-image\"/>\n                    </div>\n                    <ng-template #initialTemplate>\n                        <div [outerHTML]=\"ecmUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                    </ng-template>\n                </div>\n                <ng-template #showBpmUserImage>\n                    <div *ngIf=\"bpmUser$ | async as bpmUser\" id=\"bpm-user-image\">\n                            <div *ngIf=\"bpmUser.pictureId; else initialTemplate\" class=\"adf-userinfo-profile-container\">\n                                <img id=\"logged-user-img\" [src]=\"getBpmUserImage()\" alt=\"user-info-profile-button\"\n                                    class=\"adf-userinfo-profile-image\"/>\n                            </div>\n                            <ng-template #initialTemplate>\n                                <div [outerHTML]=\"bpmUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                            </ng-template>\n                    </div>\n                </ng-template>\n            </ng-template>\n        </div>\n    </button>\n    <mat-menu #menu=\"matMenu\" id=\"user-profile-lists\" [xPosition]=\"menuPositionX\" [yPosition]=\"menuPositionY\" [overlapTrigger]=\"false\" class=\"adf-userinfo-menu\">\n        <mat-tab-group id=\"tab-group-env\" (click)=\"stopClosing($event)\"\n            class=\"adf-userinfo-tab\" [class.adf-hide-tab]=\"!(bpmUser$ | async) || !(ecmUser$ | async)\">\n            <mat-tab id=\"ecm-panel\" label=\"{{ 'USER_PROFILE.TAB.CS' | translate }}\" *ngIf=\"ecmUser$ | async as ecmUser\">\n                <mat-card class=\"adf-userinfo-card\">\n                    <mat-card-header class=\"adf-userinfo-card-header\" [style.background-image]=\"'url(' + ecmBackgroundImage + ')'\">\n                        <div *ngIf=\"ecmUser.avatarId; else initialTemplate\" class=\"adf-userinfo-profile-container adf-hide-small\">\n                            <img class=\"adf-userinfo-profile-picture\" id=\"ecm-user-detail-image\"\n                                alt=\"ecm-profile-image\" [src]=\"getEcmAvatar(ecmUser.avatarId)\" />\n                        </div>\n                        <ng-template #initialTemplate>\n                            <div [outerHTML]=\"ecmUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\"></div>\n                        </ng-template>\n\n                       <div class=\"adf-userinfo-title\" id=\"ecm-username\">{{ecmUser | fullName}}</div>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"adf-userinfo-supporting-text\">\n                                <div class=\"adf-userinfo-detail\">\n                                    <span id=\"ecm-full-name\" class=\"adf-userinfo__detail-title\">{{ecmUser | fullName}}</span>\n                                    <span class=\"adf-userinfo__detail-profile\" id=\"ecm-email\"> {{ecmUser.email}} </span>\n                                </div>\n                                <div class=\"adf-userinfo-detail\">\n                                    <span class=\"adf-userinfo__secondary-info\" id=\"ecm-job-title-label\">\n                                        {{ 'USER_PROFILE.LABELS.ECM.JOB_TITLE' | translate }}\n                                        <span id=\"ecm-job-title\" class=\"adf-userinfo__detail-profile\"> {{ ecmUser.jobTitle ? ecmUser.jobTitle : 'N/A' }} </span>\n                                    </span>\n                                </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-tab>\n            <mat-tab id=\"bpm-panel\" label=\"{{ 'USER_PROFILE.TAB.PS' | translate }}\" *ngIf=\"bpmUser$ | async as bpmUser\">\n            <mat-card class=\"adf-userinfo-card\">\n                <mat-card-header class=\"adf-userinfo-card-header\" [style.background-image]=\"'url(' + bpmBackgroundImage + ')'\">\n                    <img *ngIf=\"bpmUser.pictureId; else initialTemplate\" class=\"adf-userinfo-profile-picture adf-hide-small\" id=\"bpm-user-detail-image\"\n                            alt=\"bpm-profile-image\" [src]=\"getBpmUserImage()\"/>\n                    <ng-template #initialTemplate>\n                        <div [outerHTML]=\"bpmUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\"></div>\n                    </ng-template>\n                   <div class=\"adf-userinfo-title\" id=\"bpm-username\">{{bpmUser | fullName}}</div>\n                </mat-card-header>\n                <mat-card-content>\n                    <div class=\"adf-userinfo-supporting-text\">\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"bpm-full-name\" class=\"adf-userinfo__detail-title\">{{ bpmUser | fullName }}</span>\n                                <span class=\"adf-userinfo__detail-profile\" id=\"bpm-email\"> {{bpmUser.email}} </span>\n                            </div>\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"bpm-tenant\" class=\"adf-userinfo__secondary-info\">\n                                    {{ 'USER_PROFILE.LABELS.BPM.TENANT' | translate }}\n                                    <span class=\"adf-userinfo__detail-profile\">{{ bpmUser.tenantName ? bpmUser.tenantName : '' }}</span>\n                                </span>\n                            </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n            </mat-tab>\n            <mat-tab id=\"identity-panel\" *ngIf=\"identityUser$ | async as identityUser\">\n                <mat-card class=\"adf-userinfo-card\">\n                    <mat-card-header class=\"adf-userinfo-card-header\" [style.background-image]=\"'url(' + bpmBackgroundImage + ')'\">\n                        <div\n                            [outerHTML]=\"identityUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\">\n                        </div>\n                       <div class=\"adf-userinfo-title\" id=\"identity-username\">{{identityUser | fullName}}</div>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"adf-userinfo-supporting-text\">\n                                <div class=\"adf-userinfo-detail\">\n                                    <span id=\"identity-full-name\" class=\"adf-userinfo__detail-title\">{{identityUser | fullName}}</span>\n                                    <span class=\"adf-userinfo__detail-profile\" id=\"identity-email\"> {{identityUser.email}} </span>\n                                </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-menu>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [""]
            }] }
];
/** @nocollapse */
UserInfoComponent.ctorParameters = () => [
    { type: EcmUserService },
    { type: BpmUserService },
    { type: IdentityUserService },
    { type: AuthenticationService }
];
UserInfoComponent.propDecorators = {
    ecmBackgroundImage: [{ type: Input }],
    bpmBackgroundImage: [{ type: Input }],
    menuPositionX: [{ type: Input }],
    menuPositionY: [{ type: Input }],
    showName: [{ type: Input }],
    namePosition: [{ type: Input }]
};
if (false) {
    /**
     * Custom path for the background banner image for ACS users.
     * @type {?}
     */
    UserInfoComponent.prototype.ecmBackgroundImage;
    /**
     * Custom path for the background banner image for APS users.
     * @type {?}
     */
    UserInfoComponent.prototype.bpmBackgroundImage;
    /**
     * Custom choice for opening the menu at the bottom. Can be `before` or `after`.
     * @type {?}
     */
    UserInfoComponent.prototype.menuPositionX;
    /**
     * Custom choice for opening the menu at the bottom. Can be `above` or `below`.
     * @type {?}
     */
    UserInfoComponent.prototype.menuPositionY;
    /**
     * Shows/hides the username next to the user info button.
     * @type {?}
     */
    UserInfoComponent.prototype.showName;
    /**
     * When the username is shown, this defines its position relative to the user info button.
     * Can be `right` or `left`.
     * @type {?}
     */
    UserInfoComponent.prototype.namePosition;
    /** @type {?} */
    UserInfoComponent.prototype.ecmUser$;
    /** @type {?} */
    UserInfoComponent.prototype.bpmUser$;
    /** @type {?} */
    UserInfoComponent.prototype.identityUser$;
    /** @type {?} */
    UserInfoComponent.prototype.selectedIndex;
    /**
     * @type {?}
     * @private
     */
    UserInfoComponent.prototype.ecmUserService;
    /**
     * @type {?}
     * @private
     */
    UserInfoComponent.prototype.bpmUserService;
    /**
     * @type {?}
     * @private
     */
    UserInfoComponent.prototype.identityUserService;
    /**
     * @type {?}
     * @private
     */
    UserInfoComponent.prototype.authService;
}
//# sourceMappingURL=data:application/json;base64,