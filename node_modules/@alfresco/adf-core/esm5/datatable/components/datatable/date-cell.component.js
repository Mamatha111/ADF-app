/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { DataTableCellComponent } from './datatable-cell.component';
import { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';
var DateCellComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DateCellComponent, _super);
    function DateCellComponent(userPreferenceService) {
        var _this = _super.call(this) || this;
        if (userPreferenceService) {
            userPreferenceService
                .select(UserPreferenceValues.Locale)
                .subscribe(function (locale) {
                _this.currentLocale = locale;
            });
        }
        return _this;
    }
    Object.defineProperty(DateCellComponent.prototype, "format", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.column) {
                return this.column.format || 'medium';
            }
            return 'medium';
        },
        enumerable: true,
        configurable: true
    });
    DateCellComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-date-cell',
                    template: "\n        <ng-container>\n            <span title=\"{{ tooltip | date:'medium' }}\" *ngIf=\"format === 'timeAgo' else standard_date\">\n                {{ value | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span title=\"{{ tooltip | date:format }}\">\n                {{ value | date:format }}\n            </span>\n        </ng-template>\n    ",
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-date-cell' }
                }] }
    ];
    /** @nocollapse */
    DateCellComponent.ctorParameters = function () { return [
        { type: UserPreferencesService }
    ]; };
    return DateCellComponent;
}(DataTableCellComponent));
export { DateCellComponent };
if (false) {
    /** @type {?} */
    DateCellComponent.prototype.currentLocale;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1jZWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImRhdGF0YWJsZS9jb21wb25lbnRzL2RhdGF0YWJsZS9kYXRlLWNlbGwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFDSCxzQkFBc0IsRUFDdEIsb0JBQW9CLEVBQ3ZCLE1BQU0sNENBQTRDLENBQUM7QUFFcEQ7SUFrQnVDLDZDQUFzQjtJQVV6RCwyQkFBWSxxQkFBNkM7UUFBekQsWUFDSSxpQkFBTyxTQVNWO1FBUEcsSUFBSSxxQkFBcUIsRUFBRTtZQUN2QixxQkFBcUI7aUJBQ2hCLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUM7aUJBQ25DLFNBQVMsQ0FBQyxVQUFDLE1BQU07Z0JBQ2QsS0FBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUM7WUFDaEMsQ0FBQyxDQUFDLENBQUM7U0FDVjs7SUFDTCxDQUFDO0lBakJELHNCQUFJLHFDQUFNOzs7O1FBQVY7WUFDSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ2IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxRQUFRLENBQUM7YUFDekM7WUFDRCxPQUFPLFFBQVEsQ0FBQztRQUNwQixDQUFDOzs7T0FBQTs7Z0JBMUJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZUFBZTtvQkFFekIsUUFBUSxFQUFFLDZhQVdUO29CQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFO2lCQUNuQzs7OztnQkFyQkcsc0JBQXNCOztJQTJDMUIsd0JBQUM7Q0FBQSxBQXZDRCxDQWtCdUMsc0JBQXNCLEdBcUI1RDtTQXJCWSxpQkFBaUI7OztJQUMxQiwwQ0FBYyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGFUYWJsZUNlbGxDb21wb25lbnQgfSBmcm9tICcuL2RhdGF0YWJsZS1jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIFVzZXJQcmVmZXJlbmNlc1NlcnZpY2UsXG4gICAgVXNlclByZWZlcmVuY2VWYWx1ZXNcbn0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvdXNlci1wcmVmZXJlbmNlcy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZGF0ZS1jZWxsJyxcblxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250YWluZXI+XG4gICAgICAgICAgICA8c3BhbiB0aXRsZT1cInt7IHRvb2x0aXAgfCBkYXRlOidtZWRpdW0nIH19XCIgKm5nSWY9XCJmb3JtYXQgPT09ICd0aW1lQWdvJyBlbHNlIHN0YW5kYXJkX2RhdGVcIj5cbiAgICAgICAgICAgICAgICB7eyB2YWx1ZSB8IGFkZlRpbWVBZ286IGN1cnJlbnRMb2NhbGUgfX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjc3RhbmRhcmRfZGF0ZT5cbiAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwie3sgdG9vbHRpcCB8IGRhdGU6Zm9ybWF0IH19XCI+XG4gICAgICAgICAgICAgICAge3sgdmFsdWUgfCBkYXRlOmZvcm1hdCB9fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGAsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7IGNsYXNzOiAnYWRmLWRhdGUtY2VsbCcgfVxufSlcbmV4cG9ydCBjbGFzcyBEYXRlQ2VsbENvbXBvbmVudCBleHRlbmRzIERhdGFUYWJsZUNlbGxDb21wb25lbnQge1xuICAgIGN1cnJlbnRMb2NhbGU7XG5cbiAgICBnZXQgZm9ybWF0KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICh0aGlzLmNvbHVtbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uLmZvcm1hdCB8fCAnbWVkaXVtJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ21lZGl1bSc7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IodXNlclByZWZlcmVuY2VTZXJ2aWNlOiBVc2VyUHJlZmVyZW5jZXNTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKCk7XG5cbiAgICAgICAgaWYgKHVzZXJQcmVmZXJlbmNlU2VydmljZSkge1xuICAgICAgICAgICAgdXNlclByZWZlcmVuY2VTZXJ2aWNlXG4gICAgICAgICAgICAgICAgLnNlbGVjdChVc2VyUHJlZmVyZW5jZVZhbHVlcy5Mb2NhbGUpXG4gICAgICAgICAgICAgICAgLnN1YnNjcmliZSgobG9jYWxlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudExvY2FsZSA9IGxvY2FsZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==