/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { AppConfigService } from '../app-config/app-config.service';
import { TranslationService } from './translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "../app-config/app-config.service";
import * as i3 from "./translation.service";
var PageTitleService = /** @class */ (function () {
    function PageTitleService(titleService, appConfig, translationService) {
        var _this = this;
        this.titleService = titleService;
        this.appConfig = appConfig;
        this.translationService = translationService;
        this.originalTitle = '';
        this.translatedTitle = '';
        translationService.translate.onLangChange.subscribe(function () { return _this.onLanguageChanged(); });
        translationService.translate.onTranslationChange.subscribe(function () { return _this.onLanguageChanged(); });
    }
    /**
     * Sets the page title.
     * @param value The new title
     */
    /**
     * Sets the page title.
     * @param {?=} value The new title
     * @return {?}
     */
    PageTitleService.prototype.setTitle = /**
     * Sets the page title.
     * @param {?=} value The new title
     * @return {?}
     */
    function (value) {
        if (value === void 0) { value = ''; }
        this.originalTitle = value;
        this.translatedTitle = this.translationService.instant(value);
        this.updateTitle();
    };
    /**
     * @private
     * @return {?}
     */
    PageTitleService.prototype.onLanguageChanged = /**
     * @private
     * @return {?}
     */
    function () {
        this.translatedTitle = this.translationService.instant(this.originalTitle);
        this.updateTitle();
    };
    /**
     * @private
     * @return {?}
     */
    PageTitleService.prototype.updateTitle = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var name = this.appConfig.get('application.name') || 'Alfresco ADF Application';
        /** @type {?} */
        var title = this.translatedTitle ? this.translatedTitle + " - " + name : "" + name;
        this.titleService.setTitle(title);
    };
    PageTitleService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    PageTitleService.ctorParameters = function () { return [
        { type: Title },
        { type: AppConfigService },
        { type: TranslationService }
    ]; };
    /** @nocollapse */ PageTitleService.ngInjectableDef = i0.defineInjectable({ factory: function PageTitleService_Factory() { return new PageTitleService(i0.inject(i1.Title), i0.inject(i2.AppConfigService), i0.inject(i3.TranslationService)); }, token: PageTitleService, providedIn: "root" });
    return PageTitleService;
}());
export { PageTitleService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.originalTitle;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.translatedTitle;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.titleService;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.appConfig;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.translationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS10aXRsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsic2VydmljZXMvcGFnZS10aXRsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7OztBQUUzRDtJQVFJLDBCQUNZLFlBQW1CLEVBQ25CLFNBQTJCLEVBQzNCLGtCQUFzQztRQUhsRCxpQkFNQztRQUxXLGlCQUFZLEdBQVosWUFBWSxDQUFPO1FBQ25CLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBQzNCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFOMUMsa0JBQWEsR0FBVyxFQUFFLENBQUM7UUFDM0Isb0JBQWUsR0FBVyxFQUFFLENBQUM7UUFNakMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxFQUF4QixDQUF3QixDQUFDLENBQUM7UUFDcEYsa0JBQWtCLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLGlCQUFpQixFQUFFLEVBQXhCLENBQXdCLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7SUFDSCxtQ0FBUTs7Ozs7SUFBUixVQUFTLEtBQWtCO1FBQWxCLHNCQUFBLEVBQUEsVUFBa0I7UUFDdkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTlELElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7OztJQUVPLDRDQUFpQjs7OztJQUF6QjtRQUNJLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBRU8sc0NBQVc7Ozs7SUFBbkI7O1lBQ1UsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLElBQUksMEJBQTBCOztZQUUzRSxLQUFLLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUksSUFBSSxDQUFDLGVBQWUsV0FBTSxJQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUcsSUFBTTtRQUNwRixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxDQUFDOztnQkFyQ0osVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7OztnQkFOUSxLQUFLO2dCQUNMLGdCQUFnQjtnQkFDaEIsa0JBQWtCOzs7MkJBcEIzQjtDQTREQyxBQXRDRCxJQXNDQztTQW5DWSxnQkFBZ0I7Ozs7OztJQUV6Qix5Q0FBbUM7Ozs7O0lBQ25DLDJDQUFxQzs7Ozs7SUFHakMsd0NBQTJCOzs7OztJQUMzQixxQ0FBbUM7Ozs7O0lBQ25DLDhDQUE4QyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRpdGxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBBcHBDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vYXBwLWNvbmZpZy9hcHAtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBQYWdlVGl0bGVTZXJ2aWNlIHtcblxuICAgIHByaXZhdGUgb3JpZ2luYWxUaXRsZTogc3RyaW5nID0gJyc7XG4gICAgcHJpdmF0ZSB0cmFuc2xhdGVkVGl0bGU6IHN0cmluZyA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgdGl0bGVTZXJ2aWNlOiBUaXRsZSxcbiAgICAgICAgcHJpdmF0ZSBhcHBDb25maWc6IEFwcENvbmZpZ1NlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgdHJhbnNsYXRpb25TZXJ2aWNlOiBUcmFuc2xhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgdHJhbnNsYXRpb25TZXJ2aWNlLnRyYW5zbGF0ZS5vbkxhbmdDaGFuZ2Uuc3Vic2NyaWJlKCgpID0+IHRoaXMub25MYW5ndWFnZUNoYW5nZWQoKSk7XG4gICAgICAgIHRyYW5zbGF0aW9uU2VydmljZS50cmFuc2xhdGUub25UcmFuc2xhdGlvbkNoYW5nZS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5vbkxhbmd1YWdlQ2hhbmdlZCgpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBwYWdlIHRpdGxlLlxuICAgICAqIEBwYXJhbSB2YWx1ZSBUaGUgbmV3IHRpdGxlXG4gICAgICovXG4gICAgc2V0VGl0bGUodmFsdWU6IHN0cmluZyA9ICcnKSB7XG4gICAgICAgIHRoaXMub3JpZ2luYWxUaXRsZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZWRUaXRsZSA9IHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLmluc3RhbnQodmFsdWUpO1xuXG4gICAgICAgIHRoaXMudXBkYXRlVGl0bGUoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTGFuZ3VhZ2VDaGFuZ2VkKCkge1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZWRUaXRsZSA9IHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLmluc3RhbnQodGhpcy5vcmlnaW5hbFRpdGxlKTtcbiAgICAgICAgdGhpcy51cGRhdGVUaXRsZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlVGl0bGUoKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLmFwcENvbmZpZy5nZXQoJ2FwcGxpY2F0aW9uLm5hbWUnKSB8fCAnQWxmcmVzY28gQURGIEFwcGxpY2F0aW9uJztcblxuICAgICAgICBjb25zdCB0aXRsZSA9IHRoaXMudHJhbnNsYXRlZFRpdGxlID8gYCR7dGhpcy50cmFuc2xhdGVkVGl0bGV9IC0gJHtuYW1lfWAgOiBgJHtuYW1lfWA7XG4gICAgICAgIHRoaXMudGl0bGVTZXJ2aWNlLnNldFRpdGxlKHRpdGxlKTtcbiAgICB9XG59XG4iXX0=