{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-core/utils/object-utils.ts","ng://@alfresco/adf-core/app-config/app-config.service.ts","ng://@alfresco/adf-core/services/storage.service.ts","ng://@alfresco/adf-core/services/alfresco-api.service.ts","ng://@alfresco/adf-core/services/cookie.service.ts","ng://@alfresco/adf-core/models/log-levels.model.ts","ng://@alfresco/adf-core/services/log.service.ts","ng://@alfresco/adf-core/services/authentication.service.ts","ng://@alfresco/adf-core/models/product-version.model.ts","ng://@alfresco/adf-core/services/discovery-api.service.ts","ng://@alfresco/adf-core/utils/file-utils.ts","ng://@alfresco/adf-core/utils/moment-date-formats.model.ts","ng://@alfresco/adf-core/utils/momentDateAdapter.ts","ng://@alfresco/adf-core/datatable/data/object-datarow.model.ts","ng://@alfresco/adf-core/datatable/data/object-datacolumn.model.ts","ng://@alfresco/adf-core/datatable/data/data-sorting.model.ts","ng://@alfresco/adf-core/datatable/data/object-datatable-adapter.ts","ng://@alfresco/adf-core/about/about.component.ts","ng://@alfresco/adf-core/material.module.ts","ng://@alfresco/adf-core/context-menu/context-menu.service.ts","ng://@alfresco/adf-core/context-menu/context-menu-holder.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.ts","ng://@alfresco/adf-core/context-menu/context-menu.tokens.ts","ng://@alfresco/adf-core/context-menu/animations.ts","ng://@alfresco/adf-core/context-menu/context-menu-list.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.service.ts","ng://@alfresco/adf-core/context-menu/context-menu.directive.ts","ng://@alfresco/adf-core/context-menu/context-menu.module.ts","ng://@alfresco/adf-core/services/user-preferences.service.ts","ng://@alfresco/adf-core/services/translation.service.ts","ng://@alfresco/adf-core/pipes/file-size.pipe.ts","ng://@alfresco/adf-core/models/permissions.enum.ts","ng://@alfresco/adf-core/models/allowable-operations.enum.ts","ng://@alfresco/adf-core/services/content.service.ts","ng://@alfresco/adf-core/services/thumbnail.service.ts","ng://@alfresco/adf-core/pipes/mime-type-icon.pipe.ts","ng://@alfresco/adf-core/pipes/node-name-tooltip.pipe.ts","ng://@alfresco/adf-core/services/highlight-transform.service.ts","ng://@alfresco/adf-core/pipes/text-highlight.pipe.ts","ng://@alfresco/adf-core/pipes/time-ago.pipe.ts","ng://@alfresco/adf-core/pipes/user-initial.pipe.ts","ng://@alfresco/adf-core/pipes/full-name.pipe.ts","ng://@alfresco/adf-core/pipes/format-space.pipe.ts","ng://@alfresco/adf-core/pipes/pipe.module.ts","ng://@alfresco/adf-core/directives/highlight.directive.ts","ng://@alfresco/adf-core/directives/logout.directive.ts","ng://@alfresco/adf-core/directives/node-delete.directive.ts","ng://@alfresco/adf-core/directives/node-favorite.directive.ts","ng://@alfresco/adf-core/interface/injection.tokens.ts","ng://@alfresco/adf-core/directives/check-allowable-operation.directive.ts","ng://@alfresco/adf-core/directives/node-restore.directive.ts","ng://@alfresco/adf-core/directives/upload.directive.ts","ng://@alfresco/adf-core/services/download-zip.service.ts","ng://@alfresco/adf-core/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-core/directives/node-download.directive.ts","ng://@alfresco/adf-core/directives/directive.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable-cell.component.ts","ng://@alfresco/adf-core/data-column/data-column.component.ts","ng://@alfresco/adf-core/data-column/data-column-list.component.ts","ng://@alfresco/adf-core/events/base.event.ts","ng://@alfresco/adf-core/events/base-ui.event.ts","ng://@alfresco/adf-core/models/file.model.ts","ng://@alfresco/adf-core/events/file.event.ts","ng://@alfresco/adf-core/datatable/data/data-row-event.model.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-cell.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-row-action.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/date-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/empty-list.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/filesize-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/location-cell.component.ts","ng://@alfresco/adf-core/datatable/directives/loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-empty-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/datatable.module.ts","ng://@alfresco/adf-core/data-column/data-column.module.ts","ng://@alfresco/adf-core/about/about.module.ts","ng://@alfresco/adf-core/viewer/services/view-util.service.ts","ng://@alfresco/adf-core/viewer/components/viewer-more-actions.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-open-with.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-sidebar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer.component.ts","ng://@alfresco/adf-core/viewer/components/imgViewer.component.ts","ng://@alfresco/adf-core/viewer/components/mediaPlayer.component.ts","ng://@alfresco/adf-core/viewer/services/rendering-queue.services.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-password-dialog.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumbnails.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumb.component.ts","ng://@alfresco/adf-core/viewer/components/txtViewer.component.ts","ng://@alfresco/adf-core/viewer/components/unknown-format/unknown-format.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar-actions.component.ts","ng://@alfresco/adf-core/viewer/directives/viewer-extension.directive.ts","ng://@alfresco/adf-core/toolbar/toolbar-divider.component.ts","ng://@alfresco/adf-core/toolbar/toolbar-title.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.module.ts","ng://@alfresco/adf-core/viewer/viewer.module.ts","ng://@alfresco/adf-core/userinfo/models/bpm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/bpm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/ecm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/ecm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/identity-user.model.ts","ng://@alfresco/adf-core/services/jwt-helper.service.ts","ng://@alfresco/adf-core/userinfo/services/identity-user.service.ts","ng://@alfresco/adf-core/userinfo/components/user-info.component.ts","ng://@alfresco/adf-core/userinfo/models/identity-role.model.ts","ng://@alfresco/adf-core/userinfo/userinfo.module.ts","ng://@alfresco/adf-core/settings/host-settings.component.ts","ng://@alfresco/adf-core/settings/host-settings.module.ts","ng://@alfresco/adf-core/pagination/pagination.component.ts","ng://@alfresco/adf-core/pagination/infinite-pagination.component.ts","ng://@alfresco/adf-core/pagination/pagination.module.ts","ng://@alfresco/adf-core/login/models/login-error.event.ts","ng://@alfresco/adf-core/login/models/login-submit.event.ts","ng://@alfresco/adf-core/login/models/login-success.event.ts","ng://@alfresco/adf-core/login/components/login.component.ts","ng://@alfresco/adf-core/login/directives/login-header.directive.ts","ng://@alfresco/adf-core/login/directives/login-footer.directive.ts","ng://@alfresco/adf-core/login/components/login-dialog.component.ts","ng://@alfresco/adf-core/login/components/login-dialog-panel.component.ts","ng://@alfresco/adf-core/login/login.module.ts","ng://@alfresco/adf-core/language-menu/language-menu.component.ts","ng://@alfresco/adf-core/language-menu/language-menu.module.ts","ng://@alfresco/adf-core/info-drawer/info-drawer-layout.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.module.ts","ng://@alfresco/adf-core/datatable/data/data-table.schema.ts","ng://@alfresco/adf-core/card-view/components/card-view/card-view.component.ts","ng://@alfresco/adf-core/card-view/services/card-view-update.service.ts","ng://@alfresco/adf-core/card-view/components/card-view-boolitem/card-view-boolitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-dateitem/card-view-dateitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-mapitem/card-view-mapitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-textitem/card-view-textitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-selectitem/card-view-selectitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component.ts","ng://@alfresco/adf-core/services/get-type.ts","ng://@alfresco/adf-core/services/dynamic-component-mapper.service.ts","ng://@alfresco/adf-core/card-view/services/card-item-types.service.ts","ng://@alfresco/adf-core/card-view/directives/card-view-content-proxy.directive.ts","ng://@alfresco/adf-core/card-view/components/card-view-item-dispatcher/card-view-item-dispatcher.component.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-int.validator.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-float.validator.ts","ng://@alfresco/adf-core/card-view/models/card-view-baseitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-boolitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-dateitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-datetimeitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-textitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-floatitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-intitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-mapitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-keyvaluepairs.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-selectitem.model.ts","ng://@alfresco/adf-core/card-view/card-view.module.ts","ng://@alfresco/adf-core/app-config/debug-app-config.service.ts","ng://@alfresco/adf-core/app-config/app-config.pipe.ts","ng://@alfresco/adf-core/app-config/app-config.module.ts","ng://@alfresco/adf-core/form/events/form.event.ts","ng://@alfresco/adf-core/form/events/form-error.event.ts","ng://@alfresco/adf-core/form/events/form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form.event.ts","ng://@alfresco/adf-core/form/events/validate-dynamic-table-row.event.ts","ng://@alfresco/adf-core/form/services/ecm-model.service.ts","ng://@alfresco/adf-core/form/models/form-definition.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-types.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container-column.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/error-message.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-validator.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/tab.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome-event.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/content-link.model.ts","ng://@alfresco/adf-core/form/services/form.service.ts","ng://@alfresco/adf-core/form/models/node-metadata.model.ts","ng://@alfresco/adf-core/form/services/node.service.ts","ng://@alfresco/adf-core/form/services/widget-visibility.service.ts","ng://@alfresco/adf-core/form/components/form.component.ts","ng://@alfresco/adf-core/form/components/form-list.component.ts","ng://@alfresco/adf-core/form/services/process-content.service.ts","ng://@alfresco/adf-core/form/components/widgets/content/content.widget.ts","ng://@alfresco/adf-core/form/components/start-form.component.ts","ng://@alfresco/adf-core/form/components/widgets/widget.component.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.ts","ng://@alfresco/adf-core/form/components/widgets/tabs/tabs.widget.ts","ng://@alfresco/adf-core/form/components/widgets/unknown/unknown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/amount/amount.widget.ts","ng://@alfresco/adf-core/form/components/widgets/checkbox/checkbox.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date/date.widget.ts","ng://@alfresco/adf-core/form/components/widgets/display-text/display-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/document/document.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dropdown/dropdown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/date-cell-validator-model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-row-validation-summary.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/number-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/required-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/boolean/boolean.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/date/date.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/datetime/datetime.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/dropdown/dropdown.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/row.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/text/text.editor.ts","ng://@alfresco/adf-core/form/components/widgets/error/error.component.ts","ng://@alfresco/adf-core/form/components/widgets/functional-group/functional-group.widget.ts","ng://@alfresco/adf-core/form/components/widgets/hyperlink/hyperlink.widget.ts","ng://@alfresco/adf-core/form/components/widgets/multiline-text/multiline-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/number/number.widget.ts","ng://@alfresco/adf-core/services/people-process.service.ts","ng://@alfresco/adf-core/form/components/widgets/people/people.widget.ts","ng://@alfresco/adf-core/form/components/widgets/radio-buttons/radio-buttons.widget.ts","ng://@alfresco/adf-core/form/components/widgets/text/text-mask.component.ts","ng://@alfresco/adf-core/form/components/widgets/text/text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/typeahead/typeahead.widget.ts","ng://@alfresco/adf-core/form/components/widgets/upload/upload.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date-time/date-time.widget.ts","ng://@alfresco/adf-core/form/components/widgets/index.ts","ng://@alfresco/adf-core/form/services/form-rendering.service.ts","ng://@alfresco/adf-core/form/services/activiti-alfresco.service.ts","ng://@alfresco/adf-core/form/components/form-custom-button.directive.ts","ng://@alfresco/adf-core/form/components/form-field/form-field.component.ts","ng://@alfresco/adf-core/form/form.module.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-content.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-header.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-navigation.directive.ts","ng://@alfresco/adf-core/layout/components/sidenav-layout/sidenav-layout.component.ts","ng://@alfresco/adf-core/layout/helpers/animations.ts","ng://@alfresco/adf-core/layout/components/layout-container/layout-container.component.ts","ng://@alfresco/adf-core/layout/components/sidebar-action/sidebar-action-menu.component.ts","ng://@alfresco/adf-core/layout/components/header/header.component.ts","ng://@alfresco/adf-core/layout/layout.module.ts","ng://@alfresco/adf-core/comments/comment-list.component.ts","ng://@alfresco/adf-core/models/comment.model.ts","ng://@alfresco/adf-core/models/user-process.model.ts","ng://@alfresco/adf-core/services/comment-process.service.ts","ng://@alfresco/adf-core/services/comment-content.service.ts","ng://@alfresco/adf-core/comments/comments.component.ts","ng://@alfresco/adf-core/comments/comments.module.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.component.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.module.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.component.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.module.ts","ng://@alfresco/adf-core/templates/error-content/error-content.component.ts","ng://@alfresco/adf-core/templates/empty-content/empty-content.component.ts","ng://@alfresco/adf-core/templates/template.module.ts","ng://@alfresco/adf-core/services/auth-guard.service.ts","ng://@alfresco/adf-core/services/auth-guard-ecm.service.ts","ng://@alfresco/adf-core/services/auth-guard-bpm.service.ts","ng://@alfresco/adf-core/services/apps-process.service.ts","ng://@alfresco/adf-core/services/page-title.service.ts","ng://@alfresco/adf-core/services/renditions.service.ts","ng://@alfresco/adf-core/services/notification.service.ts","ng://@alfresco/adf-core/models/component.model.ts","ng://@alfresco/adf-core/services/translate-loader.service.ts","ng://@alfresco/adf-core/services/upload.service.ts","ng://@alfresco/adf-core/services/deleted-nodes-api.service.ts","ng://@alfresco/adf-core/services/favorites-api.service.ts","ng://@alfresco/adf-core/services/nodes-api.service.ts","ng://@alfresco/adf-core/services/people-content.service.ts","ng://@alfresco/adf-core/services/search-configuration.service.ts","ng://@alfresco/adf-core/services/search.service.ts","ng://@alfresco/adf-core/services/shared-links-api.service.ts","ng://@alfresco/adf-core/services/sites.service.ts","ng://@alfresco/adf-core/services/login-dialog.service.ts","ng://@alfresco/adf-core/services/external-alfresco-api.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.directive.ts","ng://@alfresco/adf-core/clipboard/clipboard.module.ts","ng://@alfresco/adf-core/dialogs/dialog.module.ts","ng://@alfresco/adf-core/icon/icon.component.ts","ng://@alfresco/adf-core/icon/icon.module.ts","ng://@alfresco/adf-core/models/ecm-company.model.ts","ng://@alfresco/adf-core/models/redirection.model.ts","ng://@alfresco/adf-core/models/pagination.model.ts","ng://@alfresco/adf-core/models/request-pagination.model.ts","ng://@alfresco/adf-core/mock/AlfrescoApi.mock.ts","ng://@alfresco/adf-core/mock/app-config.service.mock.ts","ng://@alfresco/adf-core/mock/authentication.service.mock.ts","ng://@alfresco/adf-core/mock/bpm-user.service.mock.ts","ng://@alfresco/adf-core/mock/comment-process-service.mock.ts","ng://@alfresco/adf-core/mock/cookie.service.mock.ts","ng://@alfresco/adf-core/mock/event.mock.ts","ng://@alfresco/adf-core/mock/search.service.mock.ts","ng://@alfresco/adf-core/mock/translation.service.mock.ts","ng://@alfresco/adf-core/mock/alfresco-api.service.mock.ts","ng://@alfresco/adf-core/mock/form/widget-visibility.service.mock.ts","ng://@alfresco/adf-core/testing/setupTestBed.ts","ng://@alfresco/adf-core/services/startup-service-factory.ts","ng://@alfresco/adf-core/core.module.ts","ng://@alfresco/adf-core/mock/apps-service.mock.ts","ng://@alfresco/adf-core/mock/ecm-user.service.mock.ts","ng://@alfresco/adf-core/mock/renditionsService.mock.ts","ng://@alfresco/adf-core/mock/form/form.component.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinition.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionReadonly.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionVisibility.mock.ts","ng://@alfresco/adf-core/mock/form/start-form.component.mock.ts","ng://@alfresco/adf-core/mock/form/form.service.mock.ts","ng://@alfresco/adf-core/mock/jwt-helper.service.spec.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","ObjectUtils","getValue","target","key","undefined","keys","split","shift","merge","objects","_i","forEach","source","prop","isArray","APP_CONFIG_LANGUAGES_KEY","PROVIDERS","OAUTHCONFIG","ECMHOST","BASESHAREURL","BPMHOST","IDENTITY_HOST","AUTHTYPE","CONTEXTROOTECM","CONTEXTROOTBPM","ALFRESCO_REPOSITORY_NAME","LOG_LEVEL","LOGIN_ROUTE","DISABLECSRF","AUTH_WITH_CREDENTIALS","INIT","LOADING","LOADED","AppConfigService","http","config","application","name","ecmHost","bpmHost","logLevel","alfrescoRepositoryName","status","Status","onLoadSubject","Subject","onLoad","asObservable","select","property","pipe","map","distinctUntilChanged","get","defaultValue","keywords","Map","set","getLocationHostname","getLocationPort","getLocationProtocol","formatString","location","protocol","hostname","prefix","port","load","_this","configUrl","Date","now","subscribe","data","_a","str","expr","RegExp","replace","Injectable","args","providedIn","HttpClient","StorageService","memoryStore","useLocalStorage","storageAvailable","getItem","localStorage","setItem","toString","clear","removeItem","hasItem","type","storage","window","AlfrescoApiService","appConfig","nodeUpdated","getInstance","alfrescoApi","defineProperty","activiti","taskApi","content","nodes","core","renditionsApi","sharedlinksApi","sitesApi","favoritesApi","peopleApi","search","searchApi","versionsApi","classesApi","groupsApi","initAlfrescoApi","reset","oauth","AppConfigValues","redirectUri","origin","redirectUriLogout","AlfrescoApiConfig","provider","hostEcm","hostBpm","authType","contextRootBpm","contextRoot","disableCsrf","withCredentials","oauth2","isDifferentConfig","lastConfig","configureJsApi","AlfrescoApiCompatibility","newConfig","JSON","stringify","CookieService","isEnabled","navigator","cookieEnabled","document","cookie","indexOf","exec","expiration","path","toUTCString","LogLevelsEnum","_super","tslib_1.__extends","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","Number","logLevels","level","LogService","onMessage","configLevel","getLogLevel","message","optionalParams","currentLogLevel","messageBus","console","debug","info","log","trace","warn","assert","test","group","groupTitle","groupEnd","referencedLevel","find","currentLevel","toLocaleLowerCase","text","REMEMBER_ME_COOKIE_KEY","AuthenticationService","logService","redirectUrl","bearerExcludedUrls","onLogin","onLogout","isLoggedIn","isOauth","isRememberMeSet","isOauthConfiguration","isECMProvider","isEcmConfiguration","isBPMProvider","isBpmConfiguration","isALLProvider","isEcmBpmConfiguration","login","username","password","rememberMe","from","response","saveRememberMeCookie","ticket","catchError","err","handleError","ssoImplicitLogin","implicitLogin","expireTime","getTime","setTime","logout","callApiLogout","tap","getTicketEcm","getTicketBpm","getTicketEcmBase64","btoa","isEcmLoggedIn","isBpmLoggedIn","getEcmUsername","getBpmUsername","setRedirect","url","getRedirect","hasValidRedirection","getBpmLoggedUser","profileApi","getProfile","hasSelectedProviderAll","throwError","getBearerExcludedUrls","getToken","addTokenToHeader","headersArg","Observable","observer","headers","HttpHeaders","token","complete","BpmProductVersionModel","obj","edition","majorVersion","revisionVersion","minorVersion","VersionModel","major","minor","patch","hotfix","schema","display","LicenseModel","issuedAt","expiresAt","remainingDays","holder","mode","isClusterEnabled","isCryptodocEnabled","VersionStatusModel","isReadOnly","isAuditEnabled","isQuickShareEnabled","isThumbnailGenerationEnabled","VersionModuleModel","id","title","description","version","installDate","installState","versionMin","versionMax","EcmProductVersionModel","modules","entry","repository","license","module","DiscoveryApiService","apiService","getEcmProductInfo","discovery","discoveryApi","getRepositoryInformation","res","getBpmProductInfo","aboutApi","getAppVersion","FileUtils","flatten","folder","reader","createReader","files","iterations","traverse","readEntries","entries","all","isFile","resolveFile","file","relativeFolder","fullPath","toFileArray","fileList","MOMENT_DATE_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateAdapter","localeData","moment","getYear","date","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","months","monthsShort","getDateNames","dateNames","String","getDayOfWeekNames","weekdays","weekdaysShort","getYearName","getFirstDayOfWeek","firstDayOfWeek","getNumDaysInMonth","daysInMonth","clone","locale","createDate","today","parseFormat","isValid","overrideDisplayFormat","currentYear","getFullYear","isAfter","format","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","getISODateString","toISOString","setLocale","compareDate","first","second","diff","sameDate","isMoment","isSame","clampDate","min","max","isBefore","isDateInstance","isValidDateInstance","_isAMomentObject","toIso8601","fromIso8601","iso8601String","ISO_8601","invalid","DateAdapter","ObjectDataRow","isSelected","Error","hasValue","imageErrorResolver","event","ObjectDataColumn","input","sortable","srTitle","cssClass","template","DataSorting","direction","ObjectDataTableAdapter","_rows","_columns","item","filter","column","sort","rowsChanged","generateSchema","rowToExaminate","getRows","setRows","rows","getColumns","setColumns","columns","row","col","getSorting","_sorting","setSorting","sorting","a","left","valueOf","right","localeCompare","AboutComponent","authService","githubUrlCommitAlpha","ecmVersion","bpmVersion","ngOnInit","ecmVers","bpmVers","regexp","alfrescoPackages","dependencies","val","alfrescoPackagesTableRepresentation","gitHubLinkCreation","corePackage","packageUp","commitIsh","Component","selector","encapsulation","ViewEncapsulation","None","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatNativeDateModule","MatOptionModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatMenuModule","MatProgressBarModule","MatSidenavModule","MatSnackBarModule","MatToolbarModule","MatTooltipModule","MatDatetimepickerModule","MatNativeDatetimeModule","MatExpansionModule","MaterialModule","NgModule","imports","exports","ContextMenuService","show","ContextMenuHolderComponent","viewport","overlayContainer","contextMenuService","renderer","links","mouseLocation","top","menuElement","subscriptions","showIcons","onShowContextMenu","preventDefault","onResize","mdMenuElement","updatePosition","mouseEvent","showMenu","menuTrigger","onMenuOpen","container","getContainerElement","contextMenuListenerFn","listen","contextmenuEvent","getContextMenuElement","onMenuClose","ngOnDestroy","subscription","unsubscribe","onMenuItemClick","menuItem","model","disabled","stopImmediatePropagation","subject","clientX","clientY","openMenu","locationCss","setTimeout","parentElement","clientWidth","getViewportRect","width","menu","xPosition","clientHeight","height","yPosition","querySelector","ViewportRuler","OverlayContainer","Renderer2","Input","ViewChild","MatMenuTrigger","HostListener","ContextMenuOverlayRef","overlayRef","close","dispose","CONTEXT_MENU_DATA","InjectionToken","contextMenuAnimation","state","opacity","transform","transition","sequence","query","animate","ContextMenuListComponent","contextMenuOverlayRef","handleKeydownEscape","handleKeydownEvent","keyCode","UP_ARROW","DOWN_ARROW","keyManager","onKeydown","ngAfterViewInit","FocusKeyManager","items","setFirstItemActive","host","role","class","animations","trigger","decorators","Inject","Optional","ViewChildren","MatMenuItem","DEFAULT_CONFIG","panelClass","backdropClass","hasBackdrop","ContextMenuOverlayService","injector","overlay","open","overlayConfig","createOverlay","attachDialogContainer","backdropClick","_backdropElement","addEventListener","_backdropClick","getOverlayConfig","createInjector","containerPortal","ComponentPortal","attach","instance","injectionTokens","WeakMap","PortalInjector","fakeElement","getBoundingClientRect","bottom","positionStrategy","position","connectedTo","ElementRef","originX","originY","overlayX","overlayY","withFallbackPosition","OverlayConfig","scrollStrategy","scrollStrategies","Injector","Overlay","ContextMenuDirective","enabled","Directive","ContextMenuModule","CommonModule","TranslateModule","forChild","declarations","entryComponents","PaginationSize","Locale","SupportedPageSizes","UserPreferencesService","translate","defaults","paginationSize","supportedPageSizes","userPreferenceStatus","initUserPreferenceStatus","bind","onChangeSubject","BehaviorSubject","onChange","UserPreferenceValues","getDefaultLocale","getPropertyKey","getStoragePrefix","setStoragePrefix","getBrowserCultureLang","TranslateService","TRANSLATION_PROVIDER","TranslationService","userPreferencesService","providers","customLoader","defaultLang","setDefaultLang","providers_1","tslib_1.__values","providers_1_1","addTranslationFolder","userLang","use","providerRegistered","registerProvider","loadTranslation","lang","fallback","getTranslation","onTranslationChanged","onTranslationChange","translations","getFullTranslationJSON","init","interpolateParams","instant","FileSizePipe","translation","bytes","decimals","dm","Math","floor","i18nSize","parseFloat","pow","toFixed","Pipe","pure","PermissionsEnum","CONTRIBUTOR","CONSUMER","COLLABORATOR","MANAGER","EDITOR","COORDINATOR","NOT_CONTRIBUTOR","NOT_CONSUMER","NOT_COLLABORATOR","NOT_MANAGER","NOT_EDITOR","NOT_COORDINATOR","AllowableOperationsEnum","DELETE","UPDATE","CREATE","COPY","LOCK","UPDATEPERMISSIONS","NOT_DELETE","NOT_UPDATE","NOT_CREATE","NOT_UPDATEPERMISSIONS","ContentService","sanitizer","folderCreated","folderCreate","folderEdit","saveData","createElement","appendChild","fileData","fileName","blob","Blob","json","msSaveOrOpenBlob","URL","createObjectURL","href","download","click","revokeObjectURL","downloadBlob","downloadData","downloadJSON","createTrustedUrl","bypassSecurityTrustUrl","getDocumentThumbnailUrl","node","attachment","contentApi","getContentUrl","getNodeContent","nodeId","nodesApi","getFileContent","getNode","opts","hasPermissions","permission","permissions","locallySet","startsWith","currentPermission","hasAllowableOperations","allowableOperation","allowableOperations","currentOperation","isLocked","DomSanitizer","ThumbnailService","contentService","matIconRegistry","DEFAULT_ICON","mimeTypeIcons","image/png","image/jpeg","image/gif","image/bmp","image/cgm","image/ief","image/jp2","image/tiff","image/vnd.adobe.photoshop","image/vnd.adobe.premiere","image/x-cmu-raster","image/x-dwt","image/x-portable-anymap","image/x-portable-bitmap","image/x-portable-graymap","image/x-portable-pixmap","image/x-raw-adobe","image/x-raw-canon","image/x-raw-fuji","image/x-raw-hasselblad","image/x-raw-kodak","image/x-raw-leica","image/x-raw-minolta","image/x-raw-nikon","image/x-raw-olympus","image/x-raw-panasonic","image/x-raw-pentax","image/x-raw-red","image/x-raw-sigma","image/x-raw-sony","image/x-xbitmap","image/x-xpixmap","image/x-xwindowdump","image/svg+xml","application/eps","application/illustrator","application/pdf","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.ms-excel.addin.macroenabled.12","application/vnd.ms-excel.sheet.binary.macroenabled.12","application/vnd.ms-excel.sheet.macroenabled.12","application/vnd.ms-excel.template.macroenabled.12","application/vnd.sun.xml.calc","application/vnd.sun.xml.calc.template","application/vnd.ms-outlook","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-word.document.macroenabled.12","application/vnd.ms-word.template.macroenabled.12","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.template","application/rtf","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.presentationml.slideshow","application/vnd.oasis.opendocument.presentation","application/vnd.oasis.opendocument.presentation-template","application/vnd.openxmlformats-officedocument.presentationml.slide","application/vnd.sun.xml.impress","application/vnd.sun.xml.impress.template","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.ms-powerpoint.addin.macroenabled.12","application/vnd.ms-powerpoint.presentation.macroenabled.12","application/vnd.ms-powerpoint.slide.macroenabled.12","application/vnd.ms-powerpoint.slideshow.macroenabled.12","application/vnd.ms-powerpoint.template.macroenabled.12","video/mp4","video/3gpp","video/3gpp2","video/mp2t","video/mpeg","video/mpeg2","video/ogg","video/quicktime","video/webm","video/x-flv","video/x-m4v","video/x-ms-asf","video/x-ms-wmv","video/x-msvideo","video/x-rad-screenplay","video/x-sgi-movie","video/x-matroska","audio/mpeg","audio/ogg","audio/wav","audio/basic","audio/mp4","audio/vnd.adobe.soundbooth","audio/vorbis","audio/x-aiff","audio/x-flac","audio/x-ms-wma","audio/x-wav","x-world/x-vrml","text/plain","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.text-template","application/x-javascript","application/json","text/csv","text/xml","text/html","application/x-compressed","application/x-zip-compressed","application/zip","application/x-tar","application/vnd.apple.keynote","application/vnd.apple.pages","application/vnd.apple.numbers","application/vnd.visio","application/wordperfect","application/x-cpio","smartFolder","ruleFolder","linkFolder","disable/folder","selected","bypassSecurityTrustResourceUrl","addSvgIcon","addSvgIconInNamespace","getMimeTypeIcon","mimeType","getDefaultMimeTypeIcon","MatIconRegistry","MimeTypeIconPipe","thumbnailService","NodeNameTooltipPipe","getNodeTooltip","containsLine","lines","line","some","toLowerCase","removeDuplicateLines","reduce","acc","properties","join","HighlightTransformService","highlight","wrapperClass","isMatching","pattern","regex","match","changed","HighlightPipe","highlightTransformService","TimeAgoPipe","defaultLocale","actualLocale","fromNow","InitialUsernamePipe","sanitized","user","className","delimiter","safeHtml","initialResult","getInitialUserName","firstName","lastName","bypassSecurityTrustHtml","FullNamePipe","fullName","FormatSpacePipe","inputValue","replaceChar","lowerCase","transformedString","trim","PipeModule","HighlightDirective","el","classToApply","ngAfterViewChecked","nativeElement","querySelectorAll","element","highlightTransformResult","innerHTML","setProperty","LogoutDirective","elementRef","router","auth","enableRedirect","evt","redirectToUri","navigate","Router","NodeDeleteDirective","alfrescoApiService","permanent","delete","EventEmitter","onClick","process","selection","ngOnChanges","setDisableAttribute","hasAttribute","disable","batch","getDeleteNodesBatch","forkJoin","processedItems","processStatus","getMessage","emit","deleteNode","promise","purgeDeletedNode","of","success","failed","someFailed","someSucceeded","oneFailed","oneSucceeded","allSucceeded","allFailed","number","Output","NodeFavoriteDirective","favorites","toggle","toggleFavorite","changes","currentValue","markFavoritesNodes","every","isFavorite","removeFavoriteSite","notFavorite_1","createFavoriteBody","addFavorite","newFavorites","getProcessBatch","hasFavorites","getFavorite","isFolder","getNodeType","guid","list","ids","includes","comparator","exportAs","EXTENDIBLE_COMPONENT","CheckAllowableOperationDirective","changeDetector","parentComponent","firstChange","updateElement","enable","detectChanges","enableElement","disableElement","removeAttribute","setAttribute","ChangeDetectorRef","Host","RestoreMessageModel","NodeRestoreDirective","restore","restoreProcessStatus","recover","nodesWithPath","getNodesWithPath","fail","notification","restoreNodesBatch","restoredNodes","_b","mergeMap","getDeletedNodes","deletedNodesList","nodeList","restoreErrorNodes","selectedNodes","remainingNodes","restoreNode","include","statusCode","fromList","getRestoreMessage","action","UploadDirective","ngZone","isDragging","cssClassName","isClickMode","inputUpload","upload","onSelectFiles","multiple","accept","directory","isDropMode","runOutsideAngular","onDragEnter","onDragOver","onDragLeave","onDrop","removeEventListener","classList","remove","stopPropagation","dataTransfer","getDataTransfer","getFilesDropped","onUploadFiles","customEvent","CustomEvent","detail","sender","bubbles","dispatchEvent","hasMode","originalEvent","webkitGetAsEntry","item_1","getAsFile","isDirectory","resolveFolder","NgZone","DownloadZipService","createDownload","payload","downloadsApi","getDownload","downloadId","cancelDownload","DownloadZipDialogComponent","dialogRef","downloadZipService","cancelled","nodeIds","downloadZip","url_1","downloadNode","waitAndDownload","downloadEntry","link","removeChild","MatDialogRef","MAT_DIALOG_DATA","NodeDownloadDirective","dialog","downloadNodes","isSelectionValid","downloadFile","disableClose","MatDialog","DirectiveModule","DataTableCellComponent","tooltip","changeDetection","ChangeDetectionStrategy","OnPush","DataColumnComponent","ContentChild","TemplateRef","DataColumnListComponent","ContentChildren","BaseEvent","isDefaultPrevented","BaseUIEvent","FileUploadOptions","Pending","Complete","Starting","Progress","Cancelled","Aborted","Deleted","FileModel","options","FileUploadStatus","size","errorCode","progress","loaded","total","percent","newVersion","slice","lastIndexOf","Infinity","FileUploadEvent","FileUploadCompleteEvent","totalComplete","totalAborted","FileUploadDeleteEvent","FileUploadErrorEvent","totalError","DataRowEvent","domEvent","DataCellEventModel","actions","DataCellEvent","DataRowActionModel","DataRowActionEvent","List","Gallery","DataTableComponent","differs","DisplayMode","selectionMode","multiselect","actionsPosition","contextMenu","allowDropFiles","rowStyleClass","showHeader","rowClick","rowDblClick","showRowContextMenu","showRowActionsMenu","executeRowAction","loading","noPermission","rowMenuCacheEnabled","isSelectAllChecked","fakeRows","rowMenuCache","differ","click$","clickObserver","share","ngAfterContentInit","columnList","setTableSchema","datatableLayoutFix","initAndSubscribeClickStream","isPropertyChanged","isTableEmpty","initTable","resetSelection","setTableRows","isFirstChange","emitRowSelectionEvent","setTableSorting","ngDoCheck","convertToRowsData","convertToDataSorting","unsubscribeClickStream","singleClickStream","buffer","debounceTime","x","singleClickStreamSub","dataRowEvents","handleRowSelection","defaultPrevented","multiClickStream","multiClickStreamSub","getSchemaFromHtml","c","onRowClick","dataRowEvent","onEnterKeyPressed","isSingleSelectionMode","selectRow","isMultiSelectionMode","modifier","metaKey","ctrlKey","newValue","domEventName","onRowDblClick","onRowKeyUp","keyboardEvent","onKeyboardNavigate","onColumnHeaderClick","current","newDirection","emitSortingChangedEvent","onSelectAllClick","matCheckboxChange","checked","onCheckboxChange","onImageLoadingError","fallbackThumbnail","src","isIconValue","asIconValue","iconAltTextKey","substring","isColumnSorted","getContextMenuActions","getRowActions","event_1","onExecuteRowAction","rowAllowsDrop","isDropTarget","hasSelectionMode","getRowStyle","getFilename","getSortingKey","idx","splice","getCellTooltip","formatTooltip","getSortableColumns","isEmpty","isHeaderVisible","dataRowsChanged","IterableDiffers","DateCellComponent","userPreferenceService","currentLocale","EmptyListComponent","EmptyListHeaderDirective","EmptyListBodyDirective","EmptyListFooterDirective","FileSizeCellComponent","LocationCellComponent","displayText","elements","parent_1","LoadingContentTemplateDirective","dataTable","loadingTemplate","NoContentTemplateDirective","noContentTemplate","NoPermissionTemplateDirective","noPermissionTemplate","CustomEmptyContentTemplateDirective","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","DataTableModule","RouterModule","DataColumnModule","AboutModule","ViewUtilService","maxRetries","mimeTypes","pdf","image","media","printFile","pwa","TARGET","ContentGroup","IMAGE","onfocus","onload","print","printFileGeneric","objectId","getViewerTypeByMimeType","getRendition","PDF","getRenditionUrl","printType","TEXT","catch","renditionExists","waitRendition","renditionId","retries","rendition","wait","editorTypes","editorTypes_1","editorTypes_1_1","ms","getRenditions","renditionPaging","renditionEntry","createRendition","err_1","MEDIA","ViewerMoreActionsComponent","ViewerOpenWithComponent","ViewerSidebarComponent","ViewerToolbarComponent","ViewerComponent","viewUtils","urlFile","urlFileViewer","sharedLinkId","overlayMode","showViewer","showToolbar","allowGoBack","allowDownload","allowPrint","allowFullScreen","allowNavigate","canNavigateBefore","canNavigateNext","allowLeftSidebar","allowRightSidebar","allowThumbnails","showRightSidebar","showLeftSidebar","sidebarRightTemplate","sidebarLeftTemplate","thumbnailsTemplate","goBack","showViewerChange","extensionChange","navigateBefore","navigateNext","invalidSharedLink","viewerType","isLoading","extensionTemplates","externalExtensions","sidebarRightTemplateContext","sidebarLeftTemplateContext","extensions","isSourceDefined","blobFile","onNodeUpdated","generateCacheBusterNumber","setUpNodeFile","setUpBlobData","setUpUrlFile","sharedLinksApi","getSharedLink","sharedLinkEntry","setUpSharedLinkFile","fileTitle","getDisplayName","scrollTop","filenameFromUrl","getFilenameFromUrl","extension","getFileExtension","urlFileContent","displayName","getViewerTypeByExtension","cacheBusterNumber","setupNode","displayNodeRendition","details","getSharedLinkContentUrl","displaySharedLinkRendition","toggleSidebar","nodeEntry","toggleLeftSidebar","scrollTo","isCustomViewerExtension","onBackButtonClick","back","onNavigateBeforeClick","onNavigateNextClick","otherMenu","hidden","anchor","end","handleKeyboardEvent","enterFullScreen","printContent","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","resolveRendition","sharedId","getSharedLinkRendition","getSharedLinkRenditionUrl","error_1","error_2","supportedRendition","err_2","currentRetry","intervalId","setInterval","clearInterval","Location","ImgViewerComponent","rotate","scaleX","scaleY","offsetX","offsetY","isDragged","drag","delta","round","onMouseDown","onMouseUp","onMouseLeave","onMouseOut","onMouseMove","pageX","pageY","zoomIn","ratio","zoomOut","rotateLeft","angle","abs","rotateRight","MediaPlayerComponent","RenderingQueueServices","renderingStates","INITIAL","RUNNING","PAUSED","FINISHED","CLEANUP_TIMEOUT","pdfViewer","pdfThumbnailViewer","onIdle","highestPriorityPage","idleTimeout","printing","isThumbnailViewEnabled","setViewer","setThumbnailViewer","isHighestPriority","view","renderingId","renderHighestPriority","currentlyVisiblePages","clearTimeout","forceRendering","getHighestPriority","visible","views","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","last","previousPageIndex","renderingState","renderView","resume","continueRendering","draw","PdfPasswordDialogComponent","passwordFormControl","FormControl","Validators","required","isError","reason","pdfjsLib","PasswordResponses","INCORRECT_PASSWORD","hasError","submit","PdfViewerComponent","renderingQueueServices","appConfigService","rendered","currentScaleMode","currentScale","MAX_AUTO_SCALE","DEFAULT_SCALE_DELTA","MIN_SCALE","MAX_SCALE","isPanelDisabled","showThumbnails","pdfThumbnailsContext","viewer","onPageChange","onPagesLoaded","onPageRendered","randomPdfId","generateUuid","reader_1","FileReader","executePdf","readAsArrayBuffer","pdfOptions","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","onPassword","callback","onPdfPassword","onProgress","progressData","loadingPercent","pdfDocument","currentPdfDocument","totalPages","numPages","page","displayPage","initPDFViewer","getPage","scalePage","getElementById","documentContainer","pdfjsViewer","PDFViewer","renderingQueue","setDocument","destroy","toggleThumbnails","scaleMode","viewerContainer","widthContainer","heightContainer","currentPage","_pages","_currentPageNumber","pageWidthScale","scale","pageHeightScale","horizontalScale","isLandscape","setScaleUpdatePages","newScale","isSameScale","update","oldScale","pageFit","ticks","ceil","previousPage","currentPageNumber","nextPage","inputPage","pageInput","parseInt","isNaN","pageNumber","afterClosed","random","PdfThumbListComponent","virtualHeight","translateY","renderItems","currentHeight","margin","itemHeight","calculateItems","eventBus","on","setHeight","getPages","scrollInto","off","trackByFn","index","pageNum","goTo","findIndex","getWidth","getHeight","calculateHeight","getViewport","pageRatio","getContainerSetup","viewPort","itemsInView","indexByScrollTop","start","elementRec","PdfThumbComponent","image$","getThumb","canvas","getCanvas","render","canvasContext","getContext","imageSource","toDataURL","TxtViewerComponent","readBlob","getUrlContent","responseType","onerror","readAsText","UnknownFormatComponent","ViewerToolbarActionsComponent","ViewerExtensionDirective","viewerComponent","templateModel","isVisible","fileExtension","supportedExtensions","supportedExtension","ToolbarDividerComponent","ToolbarTitleComponent","ToolbarComponent","ToolbarModule","ViewerModule","FormsModule","ReactiveFormsModule","FlexLayoutModule","BpmUserModel","apps","capabilities","company","created","email","externalId","fullname","groups","lastUpdate","latestSyncTimeStamp","pictureId","tenantId","tenantName","tenantPictureId","BpmUserService","getCurrentUserInfo","userRepresentation","getCurrentUserProfileImage","getProfilePictureUrl","EcmUserModel","avatarId","skypeId","googleId","instantMessageId","jobTitle","mobile","telephone","statusUpdatedAt","userStatus","emailNotificationsEnabled","EcmUserService","getUserInfo","userName","getPerson","personEntry","getUserProfileImage","nodeObj","IdentityUserModel","JwtHelperService","decodeToken","parts","decoded","urlBase64Decode","output","decodeURIComponent","escape","atob","IdentityUserService","helper","familyName","getValueFromToken","FAMILY_NAME","givenName","GIVEN_NAME","USER_EMAIL","USER_PREFERRED_USERNAME","USER_ACCESS_TOKEN","findUsersByName","buildUserUrl","queryParams","oauth2Auth","callCustomApi","getClientRoles","userId","clientId","buildUserClientRoleMapping","checkUserHasClientApp","clientRoles","checkUserHasAnyClientAppRole","roleNames","hasRole","roleName","availableRole","getClientIdByApplicationName","applicationName","buildGetClientsUrl","checkUserHasApplicationAccess","switchMap","checkUserHasAnyApplicationRole","getUsers","getUserRoles","buildRolesUrl","getUsersByRolesWithCurrentUser","filteredUsers","toPromise","users","userHasAnyRole","getUsersByRolesWithoutCurrentUser","currentUser_1","userRoles","userRole","checkUserHasRole","USER_NAME","UserInfoComponent","ecmUserService","bpmUserService","identityUserService","ecmBackgroundImage","bpmBackgroundImage","menuPositionX","menuPositionY","showName","namePosition","loadIdentityUserInfo","loadEcmUserInfo","loadBpmUserInfo","ecmUser$","bpmUser$","identityUser$","stopClosing","getEcmAvatar","getBpmUserImage","showOnRight","IdentityRoleModel","UserInfoModule","HostSettingsComponent","formBuilder","storageService","HOST_REGEX","showSelectProviders","cancel","providerSelected","form","providersControl","addFormGroups","addOAuthFormGroup","addIdentityHostFormControl","valueChanges","removeControl","removeFormGroups","addBPMFormControl","addECMFormControl","oauthFormGroup","createOAuthFormGroup","addControl","isBPM","isALL","isOAUTH","bpmFormControl","createBPMFormControl","identityHostFormControl","createIdentityFormControl","isECM","ecmFormControl","createECMFormControl","scope","secret","silentLogin","implicitFlow","onCancel","onSubmit","values","saveBPMValues","saveECMValues","saveOAuthValues","invalidateSession","oauthConfig","identityHost","FormBuilder","HostSettingsModule","PaginationComponent","cdr","pagination","DEFAULT_PAGINATION","change","changePageNumber","changePageSize","prevPage","pagSize","maxItems","paginationSubscription","count","isFirstPage","goPrevious","totalItems","skipCount","lastPage","isLastPage","hasItems","fill","goNext","handlePaginationEvent","ACTIONS","NEXT_PAGE","previous","PREV_PAGE","onChangePageNumber","CHANGE_PAGE_NUMBER","onChangePageSize","CHANGE_PAGE_SIZE","params","paginationModel","updatePagination","Pagination","HostBinding","InfinitePaginationComponent","loadMore","requestPaginationModel","_target","hasMoreItems","pageSize","onLoadMore","PaginationModule","LoginErrorEvent","LoginSubmitEvent","_values","_defaultPrevented","LoginSuccessEvent","Landing","Checking","Welcome","LoginComponent","_fb","translateService","userPreferences","isPasswordShow","showRememberMe","showLoginActions","needHelpLink","registerLink","logoImageUrl","backgroundImageUrl","copyrightText","successRoute","executeSubmit","actualLoginStep","LoginSteps","minLength","initFormError","initFormFieldsMessages","hasCustomFieldsValidation","fieldsValidation","initFormFieldsDefault","initFormFieldsMessagesDefault","onValueChanged","disableError","controls","performLogin","field","formError","errors","dirty","valid","_message","translated","navigateByUrl","displayErrorMessage","crossDomain","errorMsg","addCustomFormError","msg","addCustomValidationError","ruleId","toggleShowPassword","isErrorStyle","pristine","trimUsername","LoginHeaderDirective","alfrescoLoginComponent","headerTemplate","LoginFooterDirective","footerTemplate","LoginDialogComponent","buttonActionName","actionName","toUpperCase","logged","submitForm","loginPanel","onLoginSuccess","isFormValid","LoginDialogPanelComponent","LoginModule","LanguageMenuComponent","userPreference","languages","languagesConfigApp","changeLanguage","LanguageMenuModule","InfoDrawerLayoutComponent","InfoDrawerTitleDirective","InfoDrawerButtonsDirective","InfoDrawerContentDirective","InfoDrawerTabComponent","icon","InfoDrawerComponent","selectedIndex","currentTab","showTabLayout","contentBlocks","onTabChange","InfoDrawerModule","DataTableSchema","presetKey","presetsModel","layoutPresets","createDatatableSchema","loadLayoutPresets","mergeJsonAndHtmlSchema","externalSettings","customSchemaColumns","getSchemaFromConfig","presetColumn","getDefaultLayoutPreset","CardViewComponent","displayEmpty","transformKeyToObject","reverse","previousValue","CardViewUpdateService","itemUpdatedSource","itemClickedSource","itemUpdated$","itemClicked$","clicked","CardViewBoolItemComponent","cardViewUpdateService","isEditable","editable","ɵ1","MAT_MOMENT_DATETIME_FORMATS","CardViewDateItemComponent","dateAdapter","SHOW_FORMAT","valueDate","showProperty","showDatePicker","datepicker","onDateChanged","newDateValue","momentDate","toDate","provide","useClass","MAT_DATE_FORMATS","useValue","ɵ0","DatetimeAdapter","MomentDatetimeAdapter","MAT_DATETIME_FORMATS","CardViewMapItemComponent","isClickable","clickable","CardViewTextItemComponent","inEdit","editedValue","hasIcon","hasErrors","errorMessages","setEditMode","editStatus","editorInput","getValidationErrors","CardViewSelectItemComponent","getOptions","options$","CardViewKeyValuePairsItemComponent","matTableValues","MatTableDataSource","save","onBlur","validValues","getType","DynamicComponentResolver","fromType","DynamicComponentMapper","types","getComponentTypeResolver","setComponentTypeResolver","resolver","override","resolveComponentType","CardItemTypeService","int","float","datetime","bool","keyvaluepairs","CardViewContentProxyDirective","viewContainerRef","ViewContainerRef","CardViewItemDispatcherComponent","cardItemTypeService","componentReference","method","proxy","loadComponent","changeName","inputParamName","simpleChange","factoryClass","factory","resolveComponentFactory","createComponent","methodName","ComponentFactoryResolver","CardViewItemIntValidator","CardViewItemFloatValidator","isFinite","CardViewBaseItemModel","cardViewItemProperties","default","validators","validator","isValidUntilNow","CardViewBoolItemModel","cardViewBoolItemProperties","CardViewDateItemModel","cardViewDateItemProperties","CardViewDatetimeItemModel","CardViewTextItemModel","cardViewTextItemProperties","multiline","pipes","applyPipes","displayValue","accumulator","CardViewFloatItemModel","CardViewIntItemModel","CardViewMapItemModel","CardViewKeyValuePairsItemModel","cardViewKeyValuePairsItemProperties","CardViewSelectItemModel","cardViewSelectItemProperties","option","CardViewModule","DebugAppConfigService","AppConfigPipe","AppConfigModule","HttpClientModule","FormEvent","FormErrorEvent","FormFieldEvent","ValidateFormFieldEvent","ValidateFormEvent","errorsField","ValidateDynamicTableRowEvent","summary","EcmModelService","createEcmTypeForActivitiForm","formName","searchActivitiEcmModel","saveFomType","typeForm","createActivitiEcmModel","getEcmModels","ecmModels","MODEL_NAME","createEcmModel","MODEL_NAMESPACE","activeEcmModel","modelActive","createEcmTypeWithProperties","typeCreated","searchEcmType","ecmType","createEcmType","TYPE_MODEL","addPropertyToAType","propertyAdded","typeName","modelName","getEcmType","customTypes","prefixedName","customModelApi","activateCustomModel","toJson","nameSpace","createCustomModel","getAllCustomModel","getAllCustomType","parentType","cleanNameType","createCustomType","formFields","dataType","multiValued","mandatory","mandatoryEnforced","addPropertyToType","cleanName","FormDefinitionModel","lastUpdatedByFullName","lastUpdated","metadata","reusable","formImageBase64","formRepresentation","lastUpdatedBy","stencilSetId","referenceId","formDefinition","fields","fieldType","numberOfColumns","readOnly","sizeX","sizeY","1","metadataToFields","gridsterForm","javascriptEvents","outcomes","tabs","variables","colspan","existingColspan","maxColspan","layout","FormSaveRepresentation","FormFieldTypes","isReadOnlyType","READONLY_TYPES","isContainerType","CONTAINER","GROUP","DYNAMIC_TABLE","MULTILINE_TEXT","DROPDOWN","HYPERLINK","RADIO_BUTTONS","DISPLAY_VALUE","READONLY_TEXT","UPLOAD","TYPEAHEAD","FUNCTIONAL_GROUP","PEOPLE","BOOLEAN","NUMBER","DATE","AMOUNT","DOCUMENT","DATETIME","ATTACH_FOLDER","FormWidgetModel","tab","ContainerColumnModel","rowspan","hasFields","ErrorMessageModel","attributes","isActive","getAttributesAsJsonObj","obj_1","RequiredFieldValidator","supportedTypes","isSupported","validate","hasEmptyValue","emptyOption","opt","NumberFieldValidator","isNumber","valueStr","enableFractions","validationSummary","DateFieldValidator","isValidDate","inputDate","dateFormat","dateDisplayFormat","MinDateFieldValidator","minValue","checkDate","fieldValueData","toLocaleUpperCase","MaxDateFieldValidator","MAX_DATE_FORMAT","maxValue","MinDateTimeFieldValidator","MIN_DATETIME_FORMAT","checkDateTime","fieldValueDate","MaxDateTimeFieldValidator","MAX_DATETIME_FORMAT","MinLengthFieldValidator","toLocaleString","MaxLengthFieldValidator","maxLength","MinValueFieldValidator","MaxValueFieldValidator","RegExFieldValidator","regexPattern","FixedValueFieldValidator","hasValidNameOrValidId","hasValidName","hasValidId","hasStringValue","hasOptions","FORM_FIELD_VALIDATORS","FormFieldModel","_readOnly","_isValid","_required","defaultDateFormat","defaultDateTimeFormat","placeholder","visibilityCondition","currency","overrideId","restUrl","restResponsePath","restIdProperty","restLabelProperty","optionType","hyperlinkUrl","getDefaultDateFormat","_value","parseValue","processVariables","processVariable","getProcessVariableValue","responseVariable","formVariable","getVariablesValue","containerFactory","updateForm","markAsInvalid","fieldValidators","validators_1","validators_1_1","jsonField","originalType","isTypeaheadFieldType","getFieldNameWithLabel","fieldName","findProcessVariableValue","variableName","variable","currentVariable","currentField","colFields","isDateField","isDateTimeField","dateValue","rbEntry","elem","taEntry","dateTimeValue","isInvalidFieldType","onFormFieldChanged","getOptionName","ContainerModel","FormOutcomeModel","isSystem","selectedOutcome","SAVE_ACTION","COMPLETE_ACTION","START_PROCESS_ACTION","TabModel","hasContent","FormModel","formValues","formService","taskName","UNSET_TASK_NAME","customFieldTemplates","taskId","processDefinitionId","tabCache_1","parseRootFields","loadData","saveOutcome","SAVE_OUTCOME","completeOutcome","COMPLETE_OUTCOME","startProcessOutcome","START_PROCESS_OUTCOME","customOutcomes","validateForm","hasTabs","hasOutcomes","validateField","formFieldValueChanged","getFieldById","fieldId","getFormFields","formFieldModel","validateFormEvent","validateFieldEvent","validateFormField","formWidgetModel","fields_1","fields_1_1","_c","FormOutcomeEvent","outcome","_outcome","ContentLinkModel","contentAvailable","createdBy","previewStatus","relatedContent","simpleType","thumbnailStatus","hasPreviewStatus","isTypeImage","isTypePdf","isTypeDoc","isThumbnailReady","isThumbnailSupported","FormService","ecmModelService","formLoaded","formDataRefreshed","formEvents","taskCompleted","taskCompletedError","taskSaved","taskSavedError","formContentClicked","validateDynamicTableRow","executeOutcome","modelsApi","editorApi","processApi","processInstanceVariablesApi","usersWorkflowApi","parseForm","createFormFromANode","createForm","customType","formDefinitionModel","saveForm","formData","dataModel","modelType","stencilSet","createModel","formId","formModel","searchFrom","getModels","forms","getForms","toJsonArray","getProcessDefinitions","getProcessVariablesById","processInstanceId","getProcessInstanceVariables","getTasks","listTasks","getTask","saveTaskForm","saveFormRepresentation","completeTaskForm","completeFormRepresentation","getTaskForm","getFormDefinitionById","getForm","getFormDefinitionByName","filterText","getFormId","getStartFormInstance","processId","getProcessInstanceStartForm","getProcessInstance","getStartFormDefinition","getProcessDefinitionStartForm","getRestFieldValues","getRestFieldValuesByProcessId","getRestFieldValuesColumnByProcessId","getRestTableFieldValues","getRestFieldValuesColumn","getUserProfileImageApi","userApi","getUserProfilePictureUrl","getWorkflowUsers","groupId","userImage","combineAll","defaultIfEmpty","getWorkflowGroups","getGroups","errMsg","UNKNOWN_ERROR_MESSAGE","statusText","GENERIC_ERROR_MESSAGE","NodeMetadata","nodeType","NodeService","getNodeMetadata","cleanMetadataFromSemicolon","createNodeMetadata","createNode","relativePath","addNode","WidgetVisibilityService","refreshVisibility","tabModel","refreshEntityVisibility","evaluateVisibility","visibilityObj","isLeftFieldPresent","leftFormFieldId","leftRestResponseId","isFieldVisible","leftValue","getLeftValue","rightValue","getRightValue","actualResult","evaluateCondition","operator","nextCondition","evaluateLogicalOperation","nextConditionOperator","getVariableValue","processVarList","getFormValue","rightRestResponseId","rightFormFieldId","getFieldValue","searchValueInForm","valueList","dropDownFilterByName","valueFound","fieldValue","formField","isSearchedField","getObjectValue","getValueFromOption","fieldToFind","formattedFieldName","removeLabel","getFormVariableValue","formVar","logicOp","cleanProcessVariable","getTaskProcessVariable","taskFormsApi","getTaskFormVariables","jsonRes","FormComponent","visibilityService","nodeService","saveMetadata","showTitle","showCompleteButton","disableCompleteButton","disableStartProcessButton","showSaveButton","showDebugButton","showRefreshButton","showValidationIcon","formSaved","formCompleted","debugMode","hasForm","isTitleEnabled","getColorForOutcome","outcomeName","COMPLETE_OUTCOME_NAME","COMPLETE_BUTTON_COLOR","isOutcomeButtonEnabled","isOutcomeButtonVisible","isFormReadOnly","getFormByTaskId","getFormDefinitionByFormId","getFormDefinitionByFormName","loadFormForEcmNode","refreshFormData","onOutcomeClicked","onExecuteOutcome","SAVE_OUTCOME_ID","COMPLETE_OUTCOME_ID","START_PROCESS_OUTCOME_ID","CUSTOM_OUTCOME_ID","onTaskSaved","storeFormAsMetadata","onRefreshClicked","loadForm","findProcessVariablesByTaskId","task","isAProcessTask","taskRepresentation","processDefinitionDeploymentId","parsedForm","onFormLoaded","onTaskSavedError","onTaskCompleted","onTaskCompletedError","getFormDefinitionOutcomes","checkVisibility","onFormDataRefreshed","loadFormFromActiviti","loadFormFromFormId","formMetadata","nameNode","FormListComponent","ProcessContentService","createTemporaryRawRelatedContent","contentId","getContent","getFileRawContent","getRawContent","getContentPreview","getFileRawContentUrl","getRawContentUrl","getContentThumbnail","getTaskRelatedContent","getRelatedContentForTask","getProcessRelatedContent","getRelatedContentForProcessInstance","deleteRelatedContent","deleteContent","createProcessRelatedContent","createRelatedContentOnProcessInstance","createTaskRelatedContent","createRelatedContentOnTask","ContentWidgetComponent","processContentService","showDocumentContent","contentClick","thumbnailLoaded","contentLoaded","loadContent","loadThumbnailUrl","observable","thumbnailUrl","openViewer","fetch","contentBlob","StartFormComponent","showOutcomeButtons","readOnlyForm","outcomeClick","outcomesContainer","loadStartForm","processDefinitionName","baseHost","(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)","WidgetComponent","fieldChanged","hasField","isRequired","isInvalidFieldRequired","onFieldChanged","getHyperlinkUrl","DEFAULT_HYPERLINK_URL","DEFAULT_HYPERLINK_SCHEME","getHyperlinkText","ContainerWidgetComponentModel","isExpanded","isCollapsedByDefault","isGroup","isCollapsible","allowCollapse","collapseByDefault","ContainerWidgetComponent","onExpanderClicked","rowContainsElement","rowIndex","getColumnWith","TabsWidgetComponent","formTabChanged","visibleTabs","ngAfterContentChecked","filterVisibleTabs","tabChanged","UnknownWidgetComponent","AmountWidgetComponent","DEFAULT_CURRENCY","CheckboxWidgetComponent","DateWidgetComponent","minDate","maxDate","displayDate","ɵ0$1","DisplayTextWidgetComponentComponent","DocumentWidgetComponent","fileId","hasFile","DropdownWidgetComponent","getValuesByTaskId","getValuesByProcessDefinitionId","formFieldOption","getOptionValue","DateCellValidator","DynamicRowValidationSummary","NumberCellValidator","RequiredCellValidator","DynamicTableModel","visibleColumns","_validators","_selectedRow","definitions","columnDefinitions","flushValue","moveRow","offset","oldIndex","newIndex","arr","deleteRow","selectedRow","addRow","validateRow","_d","_e","_f","getCellValue","rowValue","getDisplayText","columnName","amountCurrency","DynamicTableWidgetComponent","cd","ERROR_MODEL_NOT_FOUND","editMode","editRow","selectArrayCode","forceFocusOnAddButton","buttonAddRow","isDynamicTableReady","focus","onRowClicked","onKeyPressed","$event","isEnterOrSpacePressed","hasSelection","moveSelectionUp","moveSelectionDown","deleteSelection","addNewRow","isNew","editSelection","copyRow","cellValue","onSaveChanges","copyObject","onCancelChanges","BooleanEditorComponent","DateEditorComponent","DATE_FORMAT","table","ɵ0$2","ɵ1$1","DateTimeEditorComponent","ɵ0$3","DropdownEditorComponent","dynamicTableColumnOption","RowEditorComponent","TextEditorComponent","ErrorWidgetComponent","translateParameters","_subscriptAnimationState","FunctionalGroupWidgetComponent","minTermLength","restrictWithGroup","groupModel","onKeyUp","oldValue","ESCAPE","ENTER","onItemClick","onItemSelect","HyperlinkWidgetComponent","linkUrl","linkText","MultilineTextWidgetComponentComponent","NumberWidgetComponent","PeopleProcessService","alfrescoJsApi","searchWord","excludeTaskId","getWorkflowUserApi","getUserImage","involveUserWithTask","idToInvolve","involveUserToTaskApi","removeInvolvedUser","idToRemove","removeInvolvedUserFromTaskApi","taskActionsApi","involveUser","PeopleWidgetComponent","peopleProcessService","searchTerm","searchTerms$","users$","checkUserAndValidateForm","peopleSelected","setValue","isValidUser","selectedUser","RadioButtonsWidgetComponent","getOptionsByTaskId","getOptionsByProcessDefinitionId","onOptionClick","optionSelected","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","InputMaskDirective","multi","translationMask","0","9","optional","#","recursive","A","S","byPassKeys","invalidCharacters","_onChange","_onTouched","onTextInput","inputMask","mask","maskValue","selectionStart","isReversed","writeValue","registerOnChange","fn","registerOnTouched","actualValue","startCaret","maskToApply","isMaskReversed","getMasked","calculatedCaret","calculateCaretPosition","setCaretPosition","caretPosition","moveStart","moveEnd","newValueLength","oldValueLength","skipMaskChars","lastMaskChar","lastUntranslatedMaskChar","check","buf","maskIndex","maskLen","valueIndex","valueLength","addMethod","resetPos","isToCheck","maskDigit","charAt","valDigit","digit","lastMaskCharDigit","TextWidgetComponent","TypeaheadWidgetComponent","toSelect","isValidOptionName","optionName","isValueDefined","UploadWidgetComponent","multipleOption","getMultipleFileParam","removeFile","removeElementFromList","onFileChanged","filesSaved","uploadRawContent","resetFormValueWithNoFiles","getIcon","fileClicked","contentLinkModel","ɵ1$2","DateTimeWidgetComponent","ɵ0$4","WIDGET_DIRECTIVES","MASK_DIRECTIVE","FormRenderingService","string","integer","multi-line-text","boolean","dropdown","amount","radio-buttons","hyperlink","readonly-text","typeahead","people","functional-group","dynamic-table","ActivitiContentService","getAlfrescoNodes","accountId","folderId","accountShortId","getContentInFolder","getAlfrescoRepositories","includeAccount","includeAccounts","getRepositories","linkAlfrescoNode","siteId","createTemporaryRelatedContent","sourceId","applyAlfrescoNode","currentSideId","getSiteNameFromNodePath","siteName","foundNode","pathNode","StartFormCustomButtonDirective","FormFieldComponent","formRenderingService","componentFactoryResolver","compiler","w","adf","originalField","getField","customTemplate","hasController","getComponentFactorySync","componentRef","componentType","wrappedField","components","componentInfo","createComponentFactorySync","componentClass","cmpClass","RuntimeComponent","decoratedCmp","RuntimeComponentModule","compileModuleAndAllComponentsSync","componentFactories","focusToggle","Compiler","read","FormModule","SidenavLayoutContentDirective","SidenavLayoutHeaderDirective","SidenavLayoutNavigationDirective","SidenavLayoutComponent","mediaMatcher","hideSidenav","expandedSidenav","expanded","templateContext","toggleMenu","isMenuMinimized","onMediaQueryChange","initialMenuState","menuOpenStateSubject","menuOpenState$","stepOver","STEP_OVER","mediaQueryList","matchMedia","addListener","removeListener","matches","_isMenuMinimized","menuState","headerDirective","emptyTemplate","navigationDirective","contentDirective","MediaMatcher","sidenavAnimation","contentAnimationLeft","margin-left","contentAnimationRight","margin-right","LayoutContainerComponent","SIDENAV_STATES","MOBILE","EXPANDED","COMPACT","CONTENT_STATES","sidenavMax","sidenavMin","isMobileScreenSize","sidenavAnimationState","contentAnimationState","sidenav","toggledSidenavAnimation","toggledContentAnimation","getContentAnimationStateLeft","getContentAnimationStateRight","MatSidenav","SidebarActionMenuComponent","SidebarMenuDirective","SidebarMenuTitleIconDirective","SidebarMenuExpandIconDirective","HeaderLayoutComponent","showSidenavToggle","logo","LayoutModule","CommentListComponent","clickRow","selectComment","comment","selectedComment","getUserShortName","shortName","isPictureDefined","isAContentUsers","CommentModel","UserProcessModel","CommentProcessService","addTaskComment","getTaskComments","comments","getProcessInstanceComments","commentsApi","addProcessInstanceComment","CommentContentService","addNodeComment","addComment","createdAt","getNodeComments","getComments","CommentsComponent","commentProcessService","commentContentService","beingAdded","comment$","commentObserver","resetComments","isATask","comment1","comment2","date1","date2","currentComment","isANode","sanitize","unshift","CommentsModule","ButtonsMenuComponent","buttons","isMenuEmpty","isMobile","userAgent","ButtonsMenuModule","SortingPickerComponent","ascending","valueChange","sortingChange","onOptionChanged","toggleSortDirection","SortingPickerModule","ErrorContentComponent","route","secondaryButtonUrl","returnButtonUrl","getTranslations","hasSecondButton","onSecondButton","onReturnButton","ActivatedRoute","EmptyContentComponent","subtitle","TemplateModule","AuthGuard","canActivate","checkLogin","canActivateChild","withCredentialsMode","isOAuthWithoutSilentLogin","pathToLogin","getRouteDestinationForLogin","AuthGuardEcm","AuthGuardBpm","AppsProcessService","getDeployedApplications","appsApi","getAppDefinitions","getDeployedApplicationsByName","app","getApplicationDetailsById","appId","PageTitleService","titleService","translationService","originalTitle","translatedTitle","onLangChange","onLanguageChanged","setTitle","updateTitle","Title","RenditionsService","getAvailableRenditionForNode","availableRenditions","renditionsAvailable","existingRendition","rend","generateRenditionForNode","empty","isRenditionAvailable","encoding","isAvailable","isConversionPossible","getRenditionsListByNodeId","convert","pollingInterval","concatMap","pollRendition","intervalSize","attempts","interval","takeWhile","NotificationService","snackBar","openSnackMessage","DEFAULT_DURATION_MESSAGE","translatedMessage","duration","openSnackMessageAction","dismissSnackMessageAction","dismiss","MatSnackBar","ComponentTranslationModel","TranslateLoaderService","suffix","queue","registered","fetchLanguageFile","component","fallbackUrl","translationUrl","retry","langId","getComponentToFetch","observableBatch","isComponentInQueue","hasFailures","fullTranslation","UploadService","cache","excludedFileList","matchingOptions","activeTask","queueChanged","fileUpload","fileUploadStarting","fileUploadCancelled","fileUploadProgress","fileUploadAborted","fileUploadError","fileUploadComplete","fileUploadDeleted","fileDeleted","isUploading","getQueue","addToQueue","allowedFiles","currentFile","filterElement","isAllowed","Minimatch","uploadFilesInTheQueue","emitter","onUploadStarting","beginUpload","next_1","cancelUpload","abort","getAction","performAction","clearQueue","getUploadPromise","renditions","overwrite","autoRename","updateNodeContent","uploadFile","parentId","onUploadProgress","onUploadAborted","onUploadError","onUploadComplete","event_2","event_3","event_4","event_5","onUploadCancelled","event_6","onUploadDeleted","event_7","DeletedNodesApiService","preferences","defaultOptions","queryOptions","FavoritesApiService","remapEntry","cm:title","cm:description","remapFavoritesData","remapFavoriteEntries","getFavorites","personId","where","NodesApiService","api","getEntryFromEntity","entity","getNodeChildren","parentNodeId","nodeBody","createFolder","updateNode","PeopleContentService","getCurrentPerson","SearchConfigurationService","generateQueryBody","maxResults","paging","filterQueries","SearchService","searchConfigurationService","dataLoaded","getNodeQueryResults","term","queriesApi","findNodes","nodePaging","searchQuery","searchByQueryBody","queryBody","SharedLinksApiService","getSharedLinks","findSharedLinks","createSharedLinks","addSharedLink","deleteSharedLink","SitesService","getSites","getSite","deleteSite","permanentFlag","getSiteContent","relations","getSiteMembers","getEcmCurrentLoggedUserName","LoginDialogService","openLogin","openLoginDialog","currentPanelClass","chosenWidth","closeAll","ExternalAlfrescoApiService","domainPrefix","createPrefixFromHost","ClipboardService","notificationService","isTargetValid","HTMLInputElement","HTMLTextAreaElement","copyToClipboard","setSelectionRange","execCommand","notify","ClipboardDirective","clipboardService","handleClickEvent","ClipboardModule","DialogModule","IconComponent","_isCustom","IconModule","EcmCompanyModel","RedirectionModel","PaginationModel","RequestPaginationModel","AlfrescoApiMock","changeConfig","AppConfigServiceMock","AuthenticationMock","setRedirectUrl","getRedirectUrl","fakeBpmUserNoImage","fakeUser1","fakeTasksComment","fakeProcessComment","CookieServiceMock","EventMock","keyDown","createEvent","initEvent","keyUp","resizeMobileView","Event","fakeSearch","mimetype","createdByUser","modifiedByUser","searchMockApi","TranslationMock","AlfrescoApiServiceMock","formTest","resetTestingModule","TestBed","startupServiceFactory","CoreModule","forRoot","ngModule","TranslateStore","TranslateLoader","APP_INITIALIZER","useFactory","deps","SidenavLayoutModule","defaultAppId","modelId","theme","deploymentId","organization","address1","address2","address3","postcode","fax","mimeTypeName","errorKey","briefSummary","stackTrace","descriptionURL","processDefinitionKey","taskDefinitionKey","endpoint","requestHeaders","2","customFieldsValueInfo","globalDateFormat","rightType","test_1","test_2","test_3","test_4","test_5","moduleDef","beforeAll","sessionStorage","configureTestingModule","compileComponents","afterAll"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        let keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            let value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        let result = {};\n\n        objects.forEach((source) => {\n            Object.keys(source).forEach((prop) => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\n/* spellchecker: disable */\nexport enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = 'languages',\n    PROVIDERS = 'providers',\n    OAUTHCONFIG = 'oauth2',\n    ECMHOST = 'ecmHost',\n    BASESHAREURL = 'baseShareUrl',\n    BPMHOST = 'bpmHost',\n    IDENTITY_HOST = 'identityHost',\n    AUTHTYPE = 'authType',\n    CONTEXTROOTECM = 'contextRootEcm',\n    CONTEXTROOTBPM = 'contextRootBpm',\n    ALFRESCO_REPOSITORY_NAME = 'alfrescoRepositoryName',\n    LOG_LEVEL = 'logLevel',\n    LOGIN_ROUTE = 'loginRoute',\n    DISABLECSRF = 'disableCSRF',\n    AUTH_WITH_CREDENTIALS = 'auth.withCredentials'\n}\n\nexport enum Status {\n    INIT = 'init',\n    LOADING = 'loading',\n    LOADED = 'loaded'\n}\n\n/* spellchecker: enable */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent',\n        alfrescoRepositoryName: 'alfresco-1'\n    };\n\n    status: Status = Status.INIT;\n    protected onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.onLoadSubject = new Subject();\n        this.onLoad = this.onLoadSubject.asObservable();\n    }\n\n    /**\n     * Requests notification of a property value when it is loaded.\n     * @param property The desired property value\n     * @returns Property value, when loaded\n     */\n    select(property: string): Observable<any> {\n        return this.onLoadSubject\n            .pipe(\n                map((config) => config[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets the value of a named property.\n     * @param key Name of the property\n     * @param defaultValue Value to return if the key is not found\n     * @returns Value of the property\n     */\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const keywords = new Map<string, string>();\n            keywords.set('hostname', this.getLocationHostname());\n            keywords.set(':port', this.getLocationPort(':'));\n            keywords.set('port', this.getLocationPort());\n            keywords.set('protocol', this.getLocationProtocol());\n            result = this.formatString(result, keywords);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    /**\n     * Gets the location.protocol value.\n     * @returns The location.protocol string\n     */\n    getLocationProtocol(): string {\n        return location.protocol;\n    }\n\n    /**\n     * Gets the location.hostname property.\n     * @returns Value of the property\n     */\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    /**\n     * Gets the location.port property.\n     * @param prefix Text added before port value\n     * @returns Port with prefix\n     */\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    /**\n     * Loads the config file.\n     * @returns Notification when loading is complete\n     */\n    load(): Promise<any> {\n        return new Promise(async (resolve) => {\n            const configUrl = `app.config.json?v=${Date.now()}`;\n\n            if (this.status === Status.INIT) {\n                this.status = Status.LOADING;\n                await this.http.get(configUrl).subscribe(\n                    (data: any) => {\n                        this.status = Status.LOADED;\n                        this.config = Object.assign({}, this.config, data || {});\n                        this.onLoadSubject.next(this.config);\n                        resolve(this.config);\n                    },\n                    () => {\n                        resolve(this.config);\n                    }\n                );\n            } else if (this.status === Status.LOADED) {\n                resolve(this.config);\n            } else if (this.status === Status.LOADING) {\n                this.onLoad.subscribe(() => {\n                    resolve(this.config);\n                });\n            }\n        });\n    }\n\n    private formatString(str: string, keywords: Map<string, string>): string {\n        let result = str;\n\n        keywords.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n\n    constructor() {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n    }\n\n    /**\n     * Gets an item.\n     * @param key Key to identify the item\n     * @returns The item (if any) retrieved by the key\n     */\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key);\n        } else {\n            return this.memoryStore.hasOwnProperty(key) ? this.memoryStore[key] : null;\n        }\n    }\n\n    /**\n     * Stores an item\n     * @param key Key to identify the item\n     * @param data Data to store\n     */\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(key, data);\n        } else {\n            this.memoryStore[key] = data.toString();\n        }\n    }\n\n    /** Removes all currently stored items. */\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    /**\n     * Removes a single item.\n     * @param key Key to identify the item\n     */\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(key);\n        } else {\n            delete this.memoryStore[key];\n        }\n    }\n\n    /**\n     * Is any item currently stored under `key`?\n     * @param key Key identifying item to check\n     * @returns True if key retrieves an item, false otherwise\n     */\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            let storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ContentApi,\n    Core,\n    Activiti,\n    SearchApi,\n    Node\n} from '@alfresco/js-api';\nimport { AlfrescoApiCompatibility, AlfrescoApiConfig } from '@alfresco/js-api';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from './storage.service';\nimport { Subject } from 'rxjs';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlfrescoApiService {\n    /**\n     * Publish/subscribe to events related to node updates.\n     */\n    nodeUpdated = new Subject<Node>();\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    lastConfig: AlfrescoApiConfig;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get taskApi(): Activiti.TaskApi {\n        return this.getInstance().activiti.taskApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): Core.RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): Core.SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): Core.SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): Core.FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): Core.PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi(): SearchApi {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): Core.VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    get classesApi(): Core.ClassesApi {\n        return this.getInstance().core.classesApi;\n    }\n\n    get groupsApi(): Core.GroupsApi {\n        return this.getInstance().core.groupsApi;\n    }\n\n    constructor(protected appConfig: AppConfigService,\n                protected storage: StorageService) {\n    }\n\n    async load() {\n        await this.appConfig.load().then(() => {\n            this.initAlfrescoApi();\n        });\n    }\n\n    async reset() {\n        this.initAlfrescoApi();\n    }\n\n    protected initAlfrescoApi() {\n        let oauth: OauthConfigModel = Object.assign({}, this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null));\n        if (oauth) {\n            oauth.redirectUri = window.location.origin + (oauth.redirectUri || '/');\n            oauth.redirectUriLogout = window.location.origin + (oauth.redirectUriLogout || '/');\n        }\n\n        const config = new AlfrescoApiConfig({\n            provider: this.appConfig.get<string>(AppConfigValues.PROVIDERS),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF),\n            withCredentials: this.appConfig.get<boolean>(AppConfigValues.AUTH_WITH_CREDENTIALS, false),\n            oauth2: oauth\n        });\n\n        if (this.alfrescoApi && this.isDifferentConfig(this.lastConfig, config)) {\n            this.lastConfig = config;\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.lastConfig = config;\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n\n    }\n\n    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig) {\n        return JSON.stringify(lastConfig) !== JSON.stringify(newConfig);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CookieService {\n\n    /**\n     * Checks if cookies are enabled.\n     * @returns True if enabled, false otherwise\n     */\n    isEnabled(): boolean {\n        // for certain scenarios Chrome may say 'true' but have cookies still disabled\n        if (navigator.cookieEnabled === false) {\n            return false;\n        }\n\n        document.cookie = 'test-cookie';\n        return document.cookie.indexOf('test-cookie') >= 0;\n    }\n\n    /**\n     * Retrieves a cookie by its key.\n     * @param key Key to identify the cookie\n     * @returns The cookie data or null if it is not found\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Sets a cookie.\n     * @param key Key to identify the cookie\n     * @param data Data value to set for the cookie\n     * @param expiration Expiration date of the data\n     * @param path \"Pathname\" to store the cookie\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n\n    /** Placeholder for testing purposes - do not use. */\n    clear() {\n        /* placeholder for testing purposes */\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console  */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n\n    get currentLogLevel() {\n        let configLevel: string = this.appConfig.get<string>(AppConfigValues.LOG_LEVEL);\n\n        if (configLevel) {\n            return this.getLogLevel(configLevel);\n        }\n\n        return LogLevelsEnum.TRACE;\n    }\n\n    onMessage: Subject<any>;\n\n    constructor(private appConfig: AppConfigService) {\n        this.onMessage = new Subject();\n    }\n\n    /**\n     * Logs a message at the \"ERROR\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n\n            this.messageBus(message, 'ERROR');\n\n            console.error(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"DEBUG\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n\n            this.messageBus(message, 'DEBUG');\n\n            console.debug(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"INFO\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n\n            this.messageBus(message, 'INFO');\n\n            console.info(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at any level from \"TRACE\" upwards.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'LOG');\n\n            console.log(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"TRACE\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'TRACE');\n\n            console.trace(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"WARN\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n\n            this.messageBus(message, 'WARN');\n\n            console.warn(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message if a boolean test fails.\n     * @param test Test value (typically a boolean expression)\n     * @param message Message to show if test is false\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    assert(test?: boolean, message?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n\n            this.messageBus(message, 'ASSERT');\n\n            console.assert(test, message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Starts an indented group of log messages.\n     * @param groupTitle Title shown at the start of the group\n     * @param optionalParams Interpolation values for the title in \"printf\" format\n     */\n    group(groupTitle?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.group(groupTitle, ...optionalParams);\n        }\n    }\n\n    /**\n     * Ends a indented group of log messages.\n     */\n    groupEnd() {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.groupEnd();\n        }\n    }\n\n    /**\n     * Converts a log level name string into its numeric equivalent.\n     * @param level Level name\n     * @returns Numeric log level\n     */\n    getLogLevel(level: string): LogLevelsEnum {\n        let referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n\n    /**\n     * Triggers notification callback for log messages.\n     * @param text Message text\n     * @param logLevel Log level for the message\n     */\n    messageBus(text: string, logLevel: string) {\n        this.onMessage.next({ text: text, type: logLevel });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, throwError, Observer } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { RedirectionModel } from '../models/redirection.model';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n    private redirectUrl: RedirectionModel = null;\n\n    private bearerExcludedUrls: string[] = ['auth/realms', 'resources/', 'assets/'];\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private appConfig: AppConfigService,\n        private alfrescoApi: AlfrescoApiService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * Checks if the user logged in.\n     * @returns True if logged in, false otherwise\n     */\n    isLoggedIn(): boolean {\n        if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n            return false;\n        }\n        return this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Does the provider support OAuth?\n     * @returns True if supported, false otherwise\n     */\n    isOauth(): boolean {\n        return this.alfrescoApi.getInstance().isOauthConfiguration();\n    }\n\n    /**\n     * Does the provider support ECM?\n     * @returns True if supported, false otherwise\n     */\n    isECMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmConfiguration();\n    }\n\n    /**\n     * Does the provider support BPM?\n     * @returns True if supported, false otherwise\n     */\n    isBPMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isBpmConfiguration();\n    }\n\n    /**\n     * Does the provider support both ECM and BPM?\n     * @returns True if both are supported, false otherwise\n     */\n    isALLProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmBpmConfiguration();\n    }\n\n    /**\n     * Logs the user in.\n     * @param username Username for the login\n     * @param password Password for the login\n     * @param rememberMe Stores the user's login details if true\n     * @returns Object with auth type (\"ECM\", \"BPM\" or \"ALL\") and auth ticket\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        return from(this.alfrescoApi.getInstance().login(username, password))\n            .pipe(\n                map((response: any) => {\n                    this.saveRememberMeCookie(rememberMe);\n                    this.onLogin.next(response);\n                    return {\n                        type: this.appConfig.get(AppConfigValues.PROVIDERS),\n                        ticket: response\n                    };\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Logs the user in with SSO\n     */\n    ssoImplicitLogin() {\n        this.alfrescoApi.getInstance().implicitLogin();\n    }\n\n    /**\n     * Saves the \"remember me\" cookie as either a long-life cookie or a session cookie.\n     * @param rememberMe Enables a long-life cookie\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * Checks whether the \"remember me\" cookie was set or not.\n     * @returns True if set, false otherwise\n     */\n    isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Logs the user out.\n     * @returns Response event called when logout is complete\n     */\n    logout() {\n        return from(this.callApiLogout())\n            .pipe(\n                tap((response) => {\n                    this.onLogout.next(response);\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Gets the ECM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketEcm();\n    }\n\n    /**\n     * Gets the BPM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketBpm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketBpm();\n    }\n\n    /**\n     * Gets the BPM ticket from the Storage in Base 64 format.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcmBase64(): string | null {\n        let ticket = this.alfrescoApi.getInstance().getTicketEcm();\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * Checks if the user is logged in on an ECM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isEcmLoggedIn(): boolean {\n        if (this.isECMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isEcmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the user is logged in on a BPM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isBpmLoggedIn(): boolean {\n        if (this.isBPMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isBpmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Gets the ECM username.\n     * @returns The ECM username\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().getEcmUsername();\n    }\n\n    /**\n     * Gets the BPM username\n     * @returns The BPM username\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().getBpmUsername();\n    }\n\n    /** Sets the URL to redirect to after login.\n     * @param url URL to redirect to\n     */\n    setRedirect(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    /** Gets the URL to redirect to after login.\n     * @returns The redirect URL\n     */\n    getRedirect(): string {\n        let provider = <string> this.appConfig.get(AppConfigValues.PROVIDERS);\n        return this.hasValidRedirection(provider) ? this.redirectUrl.url : null;\n    }\n\n    /**\n     * Gets information about the user currently logged into APS.\n     * @returns User information\n     */\n    getBpmLoggedUser(): Observable<UserRepresentation> {\n        return from(this.alfrescoApi.getInstance().activiti.profileApi.getProfile());\n    }\n\n    private hasValidRedirection(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === provider || this.hasSelectedProviderAll(provider));\n    }\n\n    private hasSelectedProviderAll(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === 'ALL' || provider === 'ALL');\n    }\n\n    /**\n     * Prints an error message in the console browser\n     * @param error Error message\n     * @returns Object representing the error message\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return throwError(error || 'Server error');\n    }\n\n    /**\n     * Gets the set of URLs that the token bearer is excluded from.\n     * @returns Array of URL strings\n     */\n    getBearerExcludedUrls(): string[] {\n        return this.bearerExcludedUrls;\n    }\n\n    /**\n     * Gets the auth token.\n     * @returns Auth token string\n     */\n    getToken(): string {\n        return localStorage.getItem('access_token');\n    }\n\n    /**\n     * Adds the auth token to an HTTP header using the 'bearer' scheme.\n     * @param headersArg Header that will receive the token\n     * @returns The new header with the token added\n     */\n    addTokenToHeader(headersArg?: HttpHeaders): Observable<HttpHeaders> {\n        return new Observable((observer: Observer<any>) => {\n            let headers = headersArg;\n            if (!headers) {\n                headers = new HttpHeaders();\n            }\n            try {\n                const token: string = this.getToken();\n                headers = headers.set('Authorization', 'bearer ' + token);\n                observer.next(headers);\n                observer.complete();\n            } catch (error) {\n                observer.error(error);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { from, throwError } from 'rxjs';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets product information for Content Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getEcmProductInfo(): Observable<EcmProductVersionModel> {\n        return from(this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .pipe(\n                map((res) => new EcmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n\n    /**\n     * Gets product information for Process Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getBpmProductInfo(): Observable<BpmProductVersionModel> {\n        return from(this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .pipe(\n                map((res) => new BpmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: any;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flatten(folder: any): Promise<FileInfo[]> {\n        let reader = folder.createReader();\n        let files: FileInfo[] = [];\n        return new Promise((resolve) => {\n            let iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(() => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map((entry) => {\n                            if (entry.isFile) {\n                                return new Promise((resolveFile) => {\n                                    entry.file(function (file: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: file,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flatten(entry).then((result) => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        let result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDateFormats } from '@angular/material';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport moment from 'moment-es6';\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplayFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map((month) => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        const dateNames: string[] = [];\n        for (let date = 1; date <= 31; date++) {\n            dateNames.push(String(date));\n        }\n\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        let locale = this.locale || 'en';\n        return date.clone().locale(locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        let locale = this.locale || 'en';\n        return moment().locale(locale);\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        let locale = this.locale || 'en';\n\n        if (value && typeof value === 'string') {\n            let m = moment(value, parseFormat, locale, true);\n            if (!m.isValid()) {\n                // use strict parsing because Moment's parser is very forgiving, and this can lead to undesired behavior.\n                m = moment(value, this.overrideDisplayFormat, locale, true);\n            }\n            if (m.isValid()) {\n                // if user omits year, it defaults to 2001, so check for that issue.\n                if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                    // if 2001 not actually in the value string, change to current year\n                    const currentYear = new Date().getFullYear();\n                    m.set('year', currentYear);\n                    // if date is in the future, set previous year\n                    if (m.isAfter(moment())) {\n                        m.set('year', currentYear - 1);\n                    }\n                }\n            }\n            return m;\n        }\n\n        return value ? moment(value).locale(locale) : null;\n    }\n\n    format(date: Moment, displayFormat: any): string {\n        date = this.clone(date);\n        displayFormat = this.overrideDisplayFormat ? this.overrideDisplayFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        super.setLocale(locale);\n\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        let locale = this.locale || 'en';\n        let d = moment(iso8601String, moment.ISO_8601).locale(locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectUtils } from '../../utils';\nimport { DataRow } from './data-row.model';\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    imageErrorResolver(event: Event): string {\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { DataColumn } from './data-column.model';\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n\n    constructor(input: any) {\n        this.key = input.key;\n        this.type = input.type || 'text';\n        this.format = input.format;\n        this.sortable = input.sortable;\n        this.title = input.title;\n        this.srTitle = input.srTitle;\n        this.cssClass = input.cssClass;\n        this.template = input.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn } from './data-column.model';\nimport { DataRow } from './data-row.model';\nimport { ObjectDataRow } from './object-datarow.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\nimport { DataSorting } from './data-sorting.model';\nimport { DataTableAdapter } from './datatable-adapter';\nimport { Subject } from 'rxjs';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n    rowsChanged: Subject<Array<DataRow>>;\n\n    static generateSchema(data: any[]) {\n        let schema = [];\n\n        if (data && data.length) {\n            let rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (let key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map((item) => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map((item) => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            let sortable = this._columns.filter((column) => column.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n\n        this.rowsChanged = new Subject<Array<DataRow>>();\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n        this.rowsChanged.next(this._rows);\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        let value = row.getValue(col.key);\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { DiscoveryApiService } from '../services/discovery-api.service';\nimport { ObjectDataTableAdapter } from '../datatable/data/object-datatable-adapter';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AboutComponent implements OnInit {\n\n    data: ObjectDataTableAdapter;\n    status: ObjectDataTableAdapter;\n    license: ObjectDataTableAdapter;\n    modules: ObjectDataTableAdapter;\n    githubUrlCommitAlpha = 'https://github.com/Alfresco/alfresco-ng2-components/commits/';\n\n    ecmHost = '';\n    bpmHost = '';\n\n    ecmVersion: EcmProductVersionModel = null;\n    bpmVersion: BpmProductVersionModel = null;\n\n    constructor(private http: HttpClient,\n                private appConfig: AppConfigService,\n                private authService: AuthenticationService,\n                private discovery: DiscoveryApiService) {\n    }\n\n    ngOnInit() {\n\n        if (this.authService.isEcmLoggedIn()) {\n            this.discovery.getEcmProductInfo().subscribe((ecmVers) => {\n                this.ecmVersion = ecmVers;\n\n                this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [\n                    { type: 'text', key: 'id', title: 'ABOUT.TABLE_HEADERS.MODULES.ID', sortable: true },\n                    { type: 'text', key: 'title', title: 'ABOUT.TABLE_HEADERS.MODULES.TITLE', sortable: true },\n                    { type: 'text', key: 'version', title: 'ABOUT.TABLE_HEADERS.MODULES.DESCRIPTION', sortable: true },\n                    { type: 'text', key: 'installDate', title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_DATE', sortable: true },\n                    { type: 'text', key: 'installState', title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_STATE', sortable: true },\n                    { type: 'text', key: 'versionMin', title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MIN', sortable: true },\n                    { type: 'text', key: 'versionMax', title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MAX', sortable: true }\n                ]);\n\n                this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [\n                    { type: 'text', key: 'isReadOnly', title: 'ABOUT.TABLE_HEADERS.STATUS.READ_ONLY', sortable: true },\n                    { type: 'text', key: 'isAuditEnabled', title: 'ABOUT.TABLE_HEADERS.STATUS.AUDIT_ENABLED', sortable: true },\n                    { type: 'text', key: 'isQuickShareEnabled', title: 'ABOUT.TABLE_HEADERS.STATUS.QUICK_SHARE_ENABLED', sortable: true },\n                    { type: 'text', key: 'isThumbnailGenerationEnabled', title: 'ABOUT.TABLE_HEADERS.STATUS.THUMBNAIL_ENABLED', sortable: true }\n                ]);\n\n                this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [\n                    { type: 'text', key: 'issuedAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.ISSUES_AT', sortable: true },\n                    { type: 'text', key: 'expiresAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.EXPIRES_AT', sortable: true },\n                    { type: 'text', key: 'remainingDays', title: 'ABOUT.TABLE_HEADERS.LICENSE.REMAINING_DAYS', sortable: true },\n                    { type: 'text', key: 'holder', title: 'ABOUT.TABLE_HEADERS.LICENSE.HOLDER', sortable: true },\n                    { type: 'text', key: 'mode', title: 'ABOUT.TABLE_HEADERS.LICENSE.MODE', sortable: true },\n                    { type: 'text', key: 'isClusterEnabled', title: 'ABOUT.TABLE_HEADERS.LICENSE.CLUSTER_ENABLED', sortable: true },\n                    { type: 'text', key: 'isCryptodocEnabled', title: 'ABOUT.TABLE_HEADERS.LICENSE.CRYPTODOC_ENABLED', sortable: true }\n                ]);\n            });\n        }\n\n        if (this.authService.isBpmLoggedIn()) {\n            this.discovery.getBpmProductInfo().subscribe((bpmVers) => {\n                this.bpmVersion = bpmVers;\n            });\n        }\n\n        this.http.get('/versions.json?' + new Date()).subscribe((response: any) => {\n            const regexp = new RegExp('^(@alfresco)');\n\n            const alfrescoPackages = Object.keys(response.dependencies).filter((val) => {\n                return regexp.test(val);\n            });\n\n            const alfrescoPackagesTableRepresentation = [];\n            alfrescoPackages.forEach((val) => {\n                alfrescoPackagesTableRepresentation.push({\n                    name: val,\n                    version: response.dependencies[val].version\n                });\n            });\n\n            this.gitHubLinkCreation(alfrescoPackagesTableRepresentation);\n\n            this.data = new ObjectDataTableAdapter(alfrescoPackagesTableRepresentation, [\n                { type: 'text', key: 'name', title: 'Name', sortable: true },\n                { type: 'text', key: 'version', title: 'Version', sortable: true }\n            ]);\n\n        });\n\n        this.ecmHost = this.appConfig.get<string>(AppConfigValues.ECMHOST);\n        this.bpmHost = this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    private gitHubLinkCreation(alfrescoPackagesTableRepresentation): void {\n        const corePackage = alfrescoPackagesTableRepresentation.find((packageUp) => {\n            return packageUp.name === '@alfresco/adf-core';\n        });\n\n        if (corePackage) {\n            const commitIsh = corePackage.version.split('-');\n            if (commitIsh.length > 1) {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + commitIsh[1];\n            } else {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + corePackage.version;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n    MatTooltipModule, MatExpansionModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule, MatExpansionModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n    selector: 'adf-context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <ng-container *ngFor=\"let link of links\">\n                <button *ngIf=\"link.model?.visible\"\n                        [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                        mat-menu-item\n                        [disabled]=\"link.model?.disabled\"\n                        (click)=\"onMenuItemClick($event, link)\">\n                    <mat-icon *ngIf=\"showIcons && link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                    {{ (link.title || link.model?.title) | translate }}\n                </button>\n            </ng-container>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = { left: 0, top: 0 };\n    private menuElement = null;\n    private subscriptions: Subscription[] = [];\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    constructor(\n        private viewport: ViewportRuler,\n        private overlayContainer: OverlayContainer,\n        private contextMenuService: ContextMenuService,\n        private renderer: Renderer2\n    ) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.contextMenuService.show.subscribe((mouseEvent) => this.showMenu(mouseEvent.event, mouseEvent.obj)),\n\n            this.menuTrigger.onMenuOpen.subscribe(() => {\n                const container = this.overlayContainer.getContainerElement();\n                if (container) {\n                    this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (contextmenuEvent: Event) => {\n                        contextmenuEvent.preventDefault();\n                    });\n                }\n                this.menuElement = this.getContextMenuElement();\n            }),\n\n            this.menuTrigger.onMenuClose.subscribe(() => {\n                this.menuElement = null;\n                if (this.contextMenuListenerFn) {\n                    this.contextMenuListenerFn();\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(mouseEvent, links) {\n        this.links = links;\n\n        if (mouseEvent) {\n            this.mouseLocation = {\n                left: mouseEvent.clientX,\n                top: mouseEvent.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private updatePosition() {\n        setTimeout(() => {\n            if (this.mdMenuElement.parentElement) {\n                if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n                    this.menuTrigger.menu.xPosition = 'before';\n                    this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n                } else {\n                    this.menuTrigger.menu.xPosition = 'after';\n                    this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n                }\n\n                if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n                    this.menuTrigger.menu.yPosition = 'above';\n                    this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n                } else {\n                    this.menuTrigger.menu.yPosition = 'below';\n                    this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n                }\n            }\n        }, 0);\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ContextMenuOverlayRef {\n\n    constructor(private overlayRef: OverlayRef) { }\n\n    close(): void {\n        this.overlayRef.dispose();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_DATA = new InjectionToken<any>('CONTEXT_MENU_DATA');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    sequence,\n    AnimationStateMetadata,\n    AnimationTransitionMetadata\n} from '@angular/animations';\n\nexport const contextMenuAnimation: ( AnimationStateMetadata | AnimationTransitionMetadata)[] = [\n    state('void', style({\n        opacity: 0,\n        transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => *', sequence([\n        query('.mat-menu-content', style({ opacity: 0 })),\n        animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n        group([\n            query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n                style({ opacity: 1 })\n            )),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' }))\n        ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ViewEncapsulation, HostListener, AfterViewInit,\n    Optional, Inject, QueryList, ViewChildren\n} from '@angular/core';\nimport { trigger } from '@angular/animations';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatMenuItem } from '@angular/material';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { contextMenuAnimation } from './animations';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\n\n@Component({\n    selector: 'adf-context-menu',\n    template: `\n        <div mat-menu class=\"mat-menu-panel\" @panelAnimation>\n            <div id=\"adf-context-menu-content\" class=\"mat-menu-content\">\n                <ng-container *ngFor=\"let link of links\">\n                    <button *ngIf=\"link.model?.visible\"\n                            [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                            mat-menu-item\n                            [disabled]=\"link.model?.disabled\"\n                            (click)=\"onMenuItemClick($event, link)\">\n                        <mat-icon *ngIf=\"link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                        <span>{{ (link.title || link.model?.title) | translate }}</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    host: {\n        role: 'menu',\n        class: 'adf-context-menu'\n    },\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('panelAnimation', contextMenuAnimation)\n    ]\n})\nexport class ContextMenuListComponent implements AfterViewInit {\n    private keyManager: FocusKeyManager<MatMenuItem>;\n    @ViewChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n    links: any[];\n\n    @HostListener('document:keydown.Escape', ['$event'])\n    handleKeydownEscape(event: KeyboardEvent) {\n        if (event) {\n            this.contextMenuOverlayRef.close();\n        }\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeydownEvent(event: KeyboardEvent) {\n        if (event) {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                this.keyManager.onKeydown(event);\n            }\n        }\n    }\n\n    constructor(\n        @Inject(ContextMenuOverlayRef) private contextMenuOverlayRef: ContextMenuOverlayRef,\n        @Optional() @Inject(CONTEXT_MENU_DATA) private data: any\n    ) {\n        this.links = this.data;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any) {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n\n        menuItem.subject.next(menuItem);\n        this.contextMenuOverlayRef.close();\n    }\n\n    ngAfterViewInit() {\n        this.keyManager = new FocusKeyManager<MatMenuItem>(this.items);\n        this.keyManager.setFirstItemActive();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Injector, ElementRef, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { ContextMenuOverlayConfig } from './interfaces';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\nconst DEFAULT_CONFIG: ContextMenuOverlayConfig = {\n    panelClass: 'cdk-overlay-pane',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n    hasBackdrop: true\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuOverlayService {\n\n    constructor( private injector: Injector, private overlay: Overlay) { }\n\n    open(config: ContextMenuOverlayConfig): ContextMenuOverlayRef {\n        const overlayConfig = { ...DEFAULT_CONFIG, ...config };\n\n        const overlay = this.createOverlay(overlayConfig);\n\n        const overlayRef = new ContextMenuOverlayRef(overlay);\n\n        this.attachDialogContainer(overlay, config, overlayRef);\n\n        overlay.backdropClick().subscribe(() => overlayRef.close());\n\n        // prevent native contextmenu on overlay element if config.hasBackdrop is true\n        if (overlayConfig.hasBackdrop) {\n            (<any> overlay)._backdropElement\n                .addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    (<any> overlay)._backdropClick.next(null);\n                }, true);\n        }\n\n        return overlayRef;\n    }\n\n    private createOverlay(config: ContextMenuOverlayConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(overlay: OverlayRef, config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef) {\n        const injector = this.createInjector(config, contextMenuOverlayRef);\n\n        const containerPortal = new ComponentPortal(ContextMenuListComponent, null, injector);\n        const containerRef: ComponentRef<ContextMenuListComponent> = overlay.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createInjector(config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(ContextMenuOverlayRef, contextMenuOverlayRef);\n        injectionTokens.set(CONTEXT_MENU_DATA, config.data);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private getOverlayConfig(config: ContextMenuOverlayConfig): OverlayConfig {\n        const { clientY, clientX  } = config.source;\n\n        const fakeElement: any = {\n            getBoundingClientRect: (): ClientRect => ({\n                bottom: clientY,\n                height: 0,\n                left: clientX,\n                right: clientX,\n                top: clientY,\n                width: 0\n            })\n        };\n\n        const positionStrategy = this.overlay.position()\n            .connectedTo(\n                new ElementRef(fakeElement),\n                { originX: 'start', originY: 'bottom' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'top' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'center' },\n                { overlayX: 'start', overlayY: 'center' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'center' },\n                { overlayX: 'end', overlayY: 'center' }\n            );\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.close(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuOverlayService } from './context-menu-overlay.service';\n\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    /** Items for the menu. */\n    @Input('adf-context-menu')\n    links: any[];\n\n    /** Is the menu enabled? */\n    @Input('adf-context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private contextMenuService: ContextMenuOverlayService) {}\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                this.contextMenuService.open({\n                    source: event,\n                    data: this.links\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective,\n        ContextMenuListComponent\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    entryComponents: [\n        ContextMenuListComponent\n    ]\n})\nexport class ContextMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from './storage.service';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum UserPreferenceValues {\n    PaginationSize = 'paginationSize',\n    Locale = 'locale',\n    SupportedPageSizes = 'supportedPageSizes'\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n    defaults = {\n        paginationSize: 25,\n        supportedPageSizes: [5, 10, 15, 20],\n        locale: 'en'\n    };\n\n    private userPreferenceStatus: any = this.defaults;\n    private onChangeSubject: BehaviorSubject<any>;\n    onChange: Observable<any>;\n\n    constructor(public translate: TranslateService,\n                private appConfig: AppConfigService,\n                private storage: StorageService) {\n        this.appConfig.onLoad.subscribe(this.initUserPreferenceStatus.bind(this));\n        this.onChangeSubject = new BehaviorSubject(this.userPreferenceStatus);\n        this.onChange = this.onChangeSubject.asObservable();\n    }\n\n    private initUserPreferenceStatus() {\n        this.set(UserPreferenceValues.Locale, (this.locale || this.getDefaultLocale()));\n        this.set(UserPreferenceValues.PaginationSize, this.paginationSize);\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(this.supportedPageSizes));\n    }\n\n    /**\n     * Sets up a callback to notify when a property has changed.\n     * @param property The property to watch\n     * @returns Notification callback\n     */\n    select(property: string): Observable<any> {\n        return this.onChange\n            .pipe(\n                map((userPreferenceStatus) => userPreferenceStatus[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets a preference property.\n     * @param property Name of the property\n     * @param defaultValue Default to return if the property is not found\n     * @returns Preference property\n     */\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    set(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Check if an item is present in the storage\n     * @param property Name of the property\n     * @returns True if the item is present, false otherwise\n     */\n    hasItem(property: string) {\n        if (!property) {\n            return;\n        }\n        return this.storage.hasItem(\n            this.getPropertyKey(property)\n        );\n    }\n\n    /**\n     * Gets the active storage prefix for preferences.\n     * @returns Storage prefix\n     */\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    /**\n     * Sets the active storage prefix for preferences.\n     * @param value Name of the prefix\n     */\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n    }\n\n    /**\n     * Gets the full property key with prefix.\n     * @param property The property name\n     * @returns Property key\n     */\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    /**\n     * Gets an array containing the available page sizes.\n     * @returns Array of page size values\n     */\n    get supportedPageSizes(): number[] {\n        let supportedPageSizes = this.get(UserPreferenceValues.SupportedPageSizes);\n\n        if (supportedPageSizes) {\n            return JSON.parse(supportedPageSizes);\n        } else {\n            return this.appConfig.get('pagination.supportedPageSizes', this.defaults.supportedPageSizes);\n        }\n    }\n\n    set supportedPageSizes(value: number[]) {\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(value));\n    }\n\n    /** Pagination size. */\n    set paginationSize(value: number) {\n        this.set(UserPreferenceValues.PaginationSize, value);\n    }\n\n    get paginationSize(): number {\n        let paginationSize = this.get(UserPreferenceValues.PaginationSize);\n\n        if (paginationSize) {\n            return Number(paginationSize);\n        } else {\n            return Number(this.appConfig.get('pagination.size', this.defaults.paginationSize));\n        }\n    }\n\n    /** Current locale setting. */\n    get locale(): string {\n        return this.get(UserPreferenceValues.Locale);\n    }\n\n    set locale(value: string) {\n        this.set(UserPreferenceValues.Locale, value);\n    }\n\n    /**\n     * Gets the default locale.\n     * @returns Default locale language code\n     */\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>(UserPreferenceValues.Locale) || this.translate.getBrowserCultureLang() || 'en';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { TranslateLoaderService } from './translate-loader.service';\nimport { UserPreferencesService, UserPreferenceValues } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: TranslateLoaderService;\n\n    constructor(public translate: TranslateService,\n                userPreferencesService: UserPreferencesService,\n                @Optional() @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <TranslateLoaderService> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n        this.customLoader.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (let provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            if (locale) {\n                this.userLang = locale;\n                this.use(this.userLang);\n            }\n        });\n    }\n\n    /**\n     * Adds a new folder of translation source files.\n     * @param name Name for the translation provider\n     * @param path Path to the folder\n     */\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n\n            if (this.userLang) {\n                this.loadTranslation(this.userLang, this.defaultLang);\n            } else {\n                this.loadTranslation(this.defaultLang);\n            }\n        }\n    }\n\n    /**\n     * Loads a translation file.\n     * @param lang Language code for the language to load\n     * @param fallback Language code to fall back to if the first one was unavailable\n     */\n    loadTranslation(lang: string, fallback?: string) {\n        this.translate.getTranslation(lang).subscribe(\n            () => {\n                this.translate.use(lang);\n                this.onTranslationChanged(lang);\n            },\n            () => {\n                if (fallback && fallback !== lang) {\n                    this.loadTranslation(fallback);\n                }\n            }\n        );\n    }\n\n    /**\n     * Triggers a notification callback when the translation language changes.\n     * @param lang The new language code\n     */\n    onTranslationChanged(lang: string): void {\n        this.translate.onTranslationChange.next({\n            lang: lang,\n            translations: this.customLoader.getFullTranslationJSON(lang)\n        });\n    }\n\n    /**\n     * Sets the target language for translations.\n     * @param lang Code name for the language\n     * @returns Translations available for the language\n     */\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    /**\n     * Gets the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n    /**\n     * Directly returns the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key ? this.translate.instant(key, interpolateParams) : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n    name: 'adfFileSize',\n    pure: false\n})\nexport class FileSizePipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 ' + this.translation.instant('CORE.FILE_SIZE.BYTES');\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['BYTES', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        const i18nSize = this.translation.instant(`CORE.FILE_SIZE.${sizes[i]}`);\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + i18nSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class PermissionsEnum extends String {\n    static CONTRIBUTOR: string = 'Contributor';\n    static CONSUMER: string = 'Consumer';\n    static COLLABORATOR: string = 'Collaborator';\n    static MANAGER: string = 'Manager';\n    static EDITOR: string = 'Editor';\n    static COORDINATOR: string = 'Coordinator';\n    static NOT_CONTRIBUTOR: string = '!Contributor';\n    static NOT_CONSUMER: string = '!Consumer';\n    static NOT_COLLABORATOR: string = '!Collaborator';\n    static NOT_MANAGER: string = '!Manager';\n    static NOT_EDITOR: string = '!Editor';\n    static NOT_COORDINATOR: string = '!Coordinator';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class AllowableOperationsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static COPY: string = 'copy';\n    static LOCK: string = 'lock';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNode, Node, NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { catchError } from 'rxjs/operators';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AllowableOperationsEnum } from '../models/allowable-operations.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentService {\n\n    private saveData: Function;\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNode> = new Subject<MinimalNode>();\n    folderEdit: Subject<MinimalNode> = new Subject<MinimalNode>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService,\n                private sanitizer: DomSanitizer) {\n        this.saveData = (function () {\n            let a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function (fileData, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([fileData], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    let json = JSON.stringify(fileData);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n\n                    if (typeof window.navigator !== 'undefined' && window.navigator.msSaveOrOpenBlob) {\n                        navigator.msSaveOrOpenBlob(blob, fileName);\n                    } else {\n                        let url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        }());\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.saveData(json, 'json', fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param  blob Data to wrap into object URL\n     * @returns URL string\n     */\n    createTrustedUrl(blob: Blob): string {\n        let url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getDocumentThumbnailUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getContentUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getContentUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets content for the given node.\n     * @param nodeId ID of the target node\n     * @returns Content data\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @param opts Options supported by JS-API\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts));\n    }\n\n    /**\n     * Checks if the user has permission on that node\n     * @param node Node to check permissions\n     * @param permission\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasPermissions(node: Node, permission: PermissionsEnum | string): boolean {\n        let hasPermissions = false;\n\n        if (node && node.permissions && node.permissions.locallySet) {\n            if (permission && permission.startsWith('!')) {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission) ? true : false;\n            }\n\n        } else {\n\n            if (permission === PermissionsEnum.CONSUMER) {\n                hasPermissions = true;\n            } else if (permission === PermissionsEnum.NOT_CONSUMER) {\n                hasPermissions = false;\n            } else if (permission && permission.startsWith('!')) {\n                hasPermissions = true;\n            }\n        }\n\n        return hasPermissions;\n    }\n\n    /**\n     * Checks if the user has permissions on that node\n     * @param node Node to check allowableOperations\n     * @param permission Create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasAllowableOperations(node: Node, allowableOperation: AllowableOperationsEnum | string): boolean {\n        let hasAllowableOperations = false;\n\n        if (node && node.allowableOperations) {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation.replace('!', '')) ? false : true;\n            } else {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation) ? true : false;\n            }\n\n        } else {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = true;\n            }\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.COPY) {\n            hasAllowableOperations = true;\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.LOCK) {\n            hasAllowableOperations = node.isFile;\n\n            if (node.isLocked && node.allowableOperations) {\n                hasAllowableOperations = !!~node.allowableOperations.indexOf('updatePermissions');\n            }\n        }\n\n        return hasAllowableOperations;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentService } from './content.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = './assets/images/ft_ic_miscellaneous.svg';\n\n    mimeTypeIcons: any = {\n        'image/png': './assets/images/ft_ic_raster_image.svg',\n        'image/jpeg': './assets/images/ft_ic_raster_image.svg',\n        'image/gif': './assets/images/ft_ic_raster_image.svg',\n        'image/bmp': './assets/images/ft_ic_raster_image.svg',\n        'image/cgm': './assets/images/ft_ic_raster_image.svg',\n        'image/ief': './assets/images/ft_ic_raster_image.svg',\n        'image/jp2': './assets/images/ft_ic_raster_image.svg',\n        'image/tiff': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.photoshop': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.premiere': './assets/images/ft_ic_raster_image.svg',\n        'image/x-cmu-raster': './assets/images/ft_ic_raster_image.svg',\n        'image/x-dwt': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-anymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-bitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-graymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-pixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-adobe': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-canon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-fuji': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-hasselblad': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-kodak': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-leica': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-minolta': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-nikon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-olympus': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-panasonic': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-pentax': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-red': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sigma': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sony': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xbitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xpixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xwindowdump': './assets/images/ft_ic_raster_image.svg',\n        'image/svg+xml': './assets/images/ft_ic_vector_image.svg',\n        'application/eps': './assets/images/ft_ic_raster_image.svg',\n        'application/illustrator': './assets/images/ft_ic_raster_image.svg',\n        'application/pdf': './assets/images/ft_ic_pdf.svg',\n        'application/vnd.ms-excel': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.addin.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.binary.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.template.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-outlook': './assets/images/ft_ic_document.svg',\n        'application/msword': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.document.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.template.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer.template': './assets/images/ft_ic_ms_word.svg',\n        'application/rtf': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-powerpoint': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation-template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slide': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.spreadsheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.oasis.opendocument.spreadsheet-template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-powerpoint.addin.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.presentation.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slide.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slideshow.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.template.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'video/mp4': './assets/images/ft_ic_video.svg',\n        'video/3gpp': './assets/images/ft_ic_video.svg',\n        'video/3gpp2': './assets/images/ft_ic_video.svg',\n        'video/mp2t': './assets/images/ft_ic_video.svg',\n        'video/mpeg': './assets/images/ft_ic_video.svg',\n        'video/mpeg2': './assets/images/ft_ic_video.svg',\n        'video/ogg': './assets/images/ft_ic_video.svg',\n        'video/quicktime': './assets/images/ft_ic_video.svg',\n        'video/webm': './assets/images/ft_ic_video.svg',\n        'video/x-flv': './assets/images/ft_ic_video.svg',\n        'video/x-m4v': './assets/images/ft_ic_video.svg',\n        'video/x-ms-asf': './assets/images/ft_ic_video.svg',\n        'video/x-ms-wmv': './assets/images/ft_ic_video.svg',\n        'video/x-msvideo': './assets/images/ft_ic_video.svg',\n        'video/x-rad-screenplay':  './assets/images/ft_ic_video.svg',\n        'video/x-sgi-movie': './assets/images/ft_ic_video.svg',\n        'video/x-matroska': './assets/images/ft_ic_video.svg',\n        'audio/mpeg': './assets/images/ft_ic_audio.svg',\n        'audio/ogg': './assets/images/ft_ic_audio.svg',\n        'audio/wav': './assets/images/ft_ic_audio.svg',\n        'audio/basic': './assets/images/ft_ic_audio.svg',\n        'audio/mp4': './assets/images/ft_ic_audio.svg',\n        'audio/vnd.adobe.soundbooth': './assets/images/ft_ic_audio.svg',\n        'audio/vorbis': './assets/images/ft_ic_audio.svg',\n        'audio/x-aiff': './assets/images/ft_ic_audio.svg',\n        'audio/x-flac': './assets/images/ft_ic_audio.svg',\n        'audio/x-ms-wma': './assets/images/ft_ic_audio.svg',\n        'audio/x-wav': './assets/images/ft_ic_audio.svg',\n        'x-world/x-vrml': './assets/images/ft_ic_video.svg',\n        'text/plain': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text-template': './assets/images/ft_ic_document.svg',\n        'application/x-javascript': './assets/images/ft_ic_document.svg',\n        'application/json': './assets/images/ft_ic_document.svg',\n        'text/csv': './assets/images/ft_ic_document.svg',\n        'text/xml': './assets/images/ft_ic_document.svg',\n        'text/html': './assets/images/ft_ic_website.svg',\n        'application/x-compressed': './assets/images/ft_ic_archive.svg',\n        'application/x-zip-compressed': './assets/images/ft_ic_archive.svg',\n        'application/zip': './assets/images/ft_ic_archive.svg',\n        'application/x-tar': './assets/images/ft_ic_archive.svg',\n        'application/vnd.apple.keynote': './assets/images/ft_ic_presentation.svg',\n        'application/vnd.apple.pages': './assets/images/ft_ic_document.svg',\n        'application/vnd.apple.numbers': './assets/images/ft_ic_spreadsheet.svg',\n        'application/vnd.visio': './assets/images/ft_ic_document.svg',\n        'application/wordperfect': './assets/images/ft_ic_document.svg',\n        'application/x-cpio': './assets/images/ft_ic_document.svg',\n        'folder': './assets/images/ft_ic_folder.svg',\n        'smartFolder': './assets/images/ft_ic_smart_folder.svg',\n        'ruleFolder': './assets/images/ft_ic_folder_rule.svg',\n        'linkFolder': './assets/images/ft_ic_folder_shortcut_link.svg',\n        'disable/folder': './assets/images/ft_ic_folder_disable.svg',\n        'selected': './assets/images/ft_ic_selected.svg'\n    };\n\n    constructor(public contentService: ContentService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        Object.keys(this.mimeTypeIcons).forEach((key) => {\n            const url = sanitizer.bypassSecurityTrustResourceUrl(this.mimeTypeIcons[key]);\n\n            matIconRegistry.addSvgIcon(key, url);\n            matIconRegistry.addSvgIconInNamespace('adf', key, url);\n        });\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns URL string\n     */\n    public getDocumentThumbnailUrl(node: any): string {\n        let thumbnail = this.contentService.getDocumentThumbnailUrl(node);\n        return thumbnail || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Gets a thumbnail URL for a MIME type.\n     * @param mimeType MIME type for the thumbnail\n     * @returns URL string\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        let icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Gets a \"miscellaneous\" thumbnail URL for types with no other icon defined.\n     * @returns URL string\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: NodeEntry): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: NodeEntry): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport interface HighlightTransformResult {\n    text: string;\n    changed: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HighlightTransformService {\n\n    /**\n     * Searches for `search` string(s) within `text` and highlights all occurrences.\n     * @param text Text to search within\n     * @param search Text pattern to search for\n     * @param wrapperClass CSS class used to provide highlighting style\n     * @returns New text along with boolean value to indicate whether anything was highlighted\n     */\n    public highlight(text: string, search: string, wrapperClass: string = 'adf-highlight'): HighlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(/<[^>]+>/g, '').replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n\n            return { text: result, changed: isMatching };\n        } else {\n            return { text: result, changed: isMatching };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return highlightTransformResult.text;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n    defaultLocale = 'en-US';\n\n    transform(value: Date, locale?: string) {\n        if (value !== null && value !== undefined ) {\n            const actualLocale = locale ? locale : this.defaultLocale;\n            const then = moment(value);\n            const diff = moment().locale(actualLocale).diff(then, 'days');\n            return diff > 7 ? then.locale(actualLocale).format('DD/MM/YYYY HH:mm') : then.locale(actualLocale).fromNow();\n        }\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { EcmUserModel } from '../userinfo/models/ecm-user.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {\n    }\n\n    transform(user: UserProcessModel | EcmUserModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let safeHtml: SafeHtml = '';\n        if (user) {\n            let initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            safeHtml = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return safeHtml;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'fullName' })\nexport class FullNamePipe implements PipeTransform {\n    transform(user: any): string {\n        let fullName = '';\n        if (user) {\n            if (user.firstName) {\n                fullName += user.firstName;\n            }\n            if (user.lastName) {\n                fullName += fullName.length > 0 ? ' ' : '';\n                fullName += user.lastName;\n            }\n        }\n        return fullName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'formatSpace'\n})\nexport class FormatSpacePipe implements PipeTransform {\n\n    transform(inputValue: string, replaceChar: string = '_', lowerCase: boolean = true): string {\n        let transformedString = '';\n        if (inputValue) {\n            transformedString = lowerCase ? inputValue.trim().split(' ').join(replaceChar).toLocaleLowerCase() :\n                inputValue.trim().split(' ').join(replaceChar);\n        }\n        return transformedString;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nimport { MimeTypeIconPipe } from './mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './node-name-tooltip.pipe';\nimport { HighlightPipe } from './text-highlight.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { InitialUsernamePipe } from './user-initial.pipe';\nimport { FullNamePipe } from './full-name.pipe';\nimport { FormatSpacePipe } from './format-space.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe\n    ],\n    providers: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe\n    ],\n    exports: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe\n    ]\n})\nexport class PipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Input, Renderer2, AfterViewChecked } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective implements AfterViewChecked {\n\n    /** Class selector for highlightable elements. */\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    /** Text to highlight. */\n    @Input('adf-highlight')\n    search: string = '';\n\n    /** CSS class used to apply highlighting. */\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private highlightTransformService: HighlightTransformService) {\n    }\n\n    ngAfterViewChecked() {\n        this.highlight();\n    }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (highlightTransformResult.changed) {\n                    this.renderer.setProperty(element, 'innerHTML', highlightTransformResult.text);\n                }\n            });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    /** URI to redirect to after logging out. */\n    @Input()\n    redirectUri: string = '/login';\n\n    /** Enable redirecting after logout */\n    @Input()\n    enableRedirect: boolean = true;\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private router: Router,\n                private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToUri(),\n            () => this.redirectToUri()\n        );\n    }\n\n    redirectToUri() {\n        if (this.enableRedirect) {\n            this.router.navigate([this.redirectUri]);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { NodeEntry, Node, DeletedNodeEntity, DeletedNode } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { map, catchError } from 'rxjs/operators';\n\ninterface ProcessedNodeData {\n    entry: Node | DeletedNode;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    /** Array of nodes to delete. */\n    @Input('adf-delete')\n    selection: NodeEntry[] | DeletedNodeEntity[];\n\n    /** If true then the nodes are deleted immediately rather than being put in the trash */\n    @Input()\n    permanent: boolean = false;\n\n    /** Emitted when the nodes have been deleted. */\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-check-allowable-operation')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: NodeEntry[] | DeletedNodeEntity[]) {\n        if (selection && selection.length) {\n\n            const batch = this.getDeleteNodesBatch(selection);\n\n            forkJoin(...batch)\n                .subscribe((data: ProcessedNodeData[]) => {\n                    const processedItems: ProcessStatus = this.processStatus(data);\n                    const message = this.getMessage(processedItems);\n\n                    this.delete.emit(message);\n                });\n        }\n    }\n\n    private getDeleteNodesBatch(selection: any): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: NodeEntry | DeletedNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        let promise;\n\n        if (node.entry.hasOwnProperty('archivedAt')) {\n            promise = this.alfrescoApiService.nodesApi.purgeDeletedNode(id);\n        } else {\n            promise = this.alfrescoApiService.nodesApi.deleteNode(id, { permanent: this.permanent });\n        }\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: node.entry,\n                status: 1\n            })),\n            catchError(() => of({\n                entry: node.entry,\n                status: 0\n            }))\n        );\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private getMessage(status): string {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                { number: status.failed.length }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PLURAL',\n                { number: status.success.length }\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                { name: status.failed[0].entry.name }\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.SINGULAR',\n                { name: status.success[0].entry.name }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, NodeEntry, SharedLinkEntry, Node, SharedLink } from '@alfresco/js-api';\nimport { Observable, from, forkJoin, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    favorites: any[] = [];\n\n    /** Array of nodes to toggle as favorites. */\n    @Input('adf-node-favorite')\n    selection: NodeEntry[] = [];\n\n    /** Emitted when the favorite setting is complete. */\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the favorite setting fails. */\n    @Output() error: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected: NodeEntry | SharedLinkEntry) => {\n                // shared files have nodeId\n                const id = (<SharedLinkEntry> selected).entry.nodeId || selected.entry.id;\n\n                return from(this.alfrescoApiService.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            forkJoin(batch).subscribe(\n                () => {\n                    this.favorites.map((selected) => selected.entry.isFavorite = false);\n                    this.toggle.emit();\n                },\n                (error) => this.error.emit(error)\n            );\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            from(this.alfrescoApiService.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(\n                    () => {\n                        notFavorite.map((selected) => selected.entry.isFavorite = true);\n                        this.toggle.emit();\n                    },\n                    (error) => this.error.emit(error)\n                );\n        }\n    }\n\n    markFavoritesNodes(selection: NodeEntry[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        forkJoin(batch).subscribe((data) => {\n            this.favorites.push(...data);\n        });\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: NodeEntry) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: NodeEntry | SharedLinkEntry): Observable<any> {\n        const node: Node | SharedLink = selected.entry;\n\n        // ACS 6.x with 'isFavorite' include\n        if (node && node.hasOwnProperty('isFavorite')) {\n            return of(selected);\n        }\n\n        // ACS 5.x and 6.x without 'isFavorite' include\n        const { name, isFile, isFolder } = <Node> node;\n        const id =  (<SharedLink> node).nodeId || node.id;\n\n        const promise = this.alfrescoApiService.favoritesApi.getFavorite('-me-', id);\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            })),\n            catchError(() => {\n                return of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            })\n        );\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map((item) => item.entry.id);\n\n        return list.filter((item) => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map((item) => item.entry.id);\n\n        return patch.filter((item) => ids.includes(item.entry.id) ? item : null);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ChangeDetectorRef, Directive, ElementRef, Host, Inject, Input, OnChanges, Optional, Renderer2,  SimpleChanges } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ContentService } from './../services/content.service';\nimport { EXTENDIBLE_COMPONENT } from './../interface/injection.tokens';\n\nexport interface NodeAllowableOperationSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-check-allowable-operation]'\n})\nexport class CheckAllowableOperationDirective implements OnChanges {\n\n    /** Node permission to check (create, delete, update, updatePermissions,\n     * !create, !delete, !update, !updatePermissions).\n     */\n    @Input('adf-check-allowable-operation')\n    permission: string  = null;\n\n    /** Nodes to check permission for. */\n    @Input('adf-nodes')\n    nodes: NodeEntry[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private contentService: ContentService,\n                private changeDetector: ChangeDetectorRef,\n\n                @Host()\n                @Optional()\n                @Inject(EXTENDIBLE_COMPONENT) private parentComponent?: NodeAllowableOperationSubject) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    updateElement(): boolean {\n        let enable = this.hasAllowableOperations(this.nodes, this.permission);\n\n        if (enable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n\n        return enable;\n    }\n\n    private enable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = false;\n            this.changeDetector.detectChanges();\n        } else {\n            this.enableElement();\n        }\n    }\n\n    private disable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = true;\n            this.changeDetector.detectChanges();\n        } else {\n            this.disableElement();\n        }\n    }\n\n    /**\n     * Enables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    enableElement(): void {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n    }\n\n    /**\n     * Disables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    disableElement(): void {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param  nodes Node collection to check\n     * @param  permission Permission to check for each node\n     * @memberof CheckAllowableOperationDirective\n     */\n    hasAllowableOperations(nodes: NodeEntry[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every((node) => this.contentService.hasAllowableOperations(node.entry, permission));\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\n\nexport class RestoreMessageModel {\n    message: string;\n    path: PathInfoEntity;\n    action: string;\n}\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    /** Array of deleted nodes to restore. */\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    /** Emitted when restoration is complete. */\n    @Output()\n    restore: EventEmitter<RestoreMessageModel> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any) {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && nodesWithPath.length) {\n\n            this.restoreNodesBatch(nodesWithPath).pipe(\n                tap((restoredNodes) => {\n                    const status = this.processStatus(restoredNodes);\n\n                    this.restoreProcessStatus.fail.push(...status.fail);\n                    this.restoreProcessStatus.success.push(...status.success);\n                }),\n                mergeMap(() => this.getDeletedNodes())\n            )\n            .subscribe((deletedNodesList) => {\n                const { entries: nodeList } = deletedNodesList.list;\n                const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                const remainingNodes = this.diff(selectedNodes, nodeList);\n\n                if (!remainingNodes.length) {\n                    this.notification();\n                } else {\n                    this.recover(remainingNodes);\n                }\n            });\n        } else {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.notification();\n            return;\n        }\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: ['path'] });\n\n        return from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return from(promise).pipe(\n            map(() => ({\n                status: 1,\n                entry\n            })),\n            catchError((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            })\n        );\n    }\n\n    private diff(selection, list, fromList = true): any {\n        const ids = selection.map((item) => item.entry.id);\n\n        return list.filter((item) => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): string {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private notification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        let message = this.getRestoreMessage();\n        this.reset();\n\n        const action = (status.oneSucceeded && !status.someFailed) ? this.translation.instant('CORE.RESTORE_NODE.VIEW') : '';\n\n        let path;\n        if (status.success && status.success.length > 0) {\n            path = status.success[0].entry.path;\n        }\n        this.restore.emit({\n            message: message,\n            action: action,\n            path: path\n        });\n    }\n\n    private reset(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    /** Enables/disables uploading. */\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    /** Data to upload. */\n    @Input('adf-upload-data')\n    data: any;\n\n    /** Upload mode. Can be \"drop\" (receives dropped files) or \"click\"\n     * (clicking opens a file dialog). Both modes can be active at once.\n     */\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    /** Toggles multiple file uploads. */\n    @Input()\n    multiple: boolean;\n\n    /** (Click mode only) MIME type filter for files to accept. */\n    @Input()\n    accept: string;\n\n    /** (Click mode only) Toggles uploading of directories. */\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            let inputUpload = this.renderer.createElement('input');\n            this.upload = this.el.nativeElement.parentElement.appendChild(inputUpload);\n\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', (event) => this.onSelectFiles(event));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTransfer = this.getDataTransfer(event);\n            if (dataTransfer) {\n                this.getFilesDropped(dataTransfer).then((files) => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            let customEvent = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(customEvent);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise((resolve) => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            let item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise((resolveFolder) => {\n                                        FileUtils.flatten(item).then((files) => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    let files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map((file) => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then((result) => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param event DOM event\n     */\n    onSelectFiles(event: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> event.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map((file) => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            event.target.value = '';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, DownloadEntry, DownloadBodyCreate } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { LogService } from './log.service';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadZipService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates a new download.\n     * @param payload Object containing the node IDs of the items to add to the ZIP file\n     * @returns Status object for the download\n     */\n    createDownload(payload: DownloadBodyCreate): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.createDownload(payload)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param nodeId Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @returns URL string\n     */\n    getContentUrl(nodeId: string, attachment?: boolean): string {\n        return this.apiService.getInstance().content.getContentUrl(nodeId, attachment);\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @returns Details of the node\n     */\n    getNode(nodeId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().core.nodesApi.getNode(nodeId));\n    }\n\n    /**\n     * Gets status information for a download node.\n     * @param downloadId ID of the download node\n     * @returns Status object for the download\n     */\n    getDownload(downloadId: string): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.getDownload(downloadId));\n    }\n\n    /**\n     * Cancels a download.\n     * @param downloadId ID of the target download node\n     */\n    cancelDownload(downloadId: string) {\n        this.apiService.getInstance().core.downloadsApi.cancelDownload(downloadId);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, NodeEntry } from '@alfresco/js-api';\nimport { LogService } from '../services/log.service';\nimport { DownloadZipService } from '../services/download-zip.service';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    cancelled = false;\n    downloadId: string;\n\n    constructor(private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA)\n                public data: any,\n                private logService: LogService,\n                private downloadZipService: DownloadZipService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.downloadZipService.cancelDownload(this.downloadId);\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            this.downloadZipService.createDownload({ nodeIds }).subscribe((data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.downloadZipService.getContentUrl(data.entry.id, true);\n\n                    this.downloadZipService.getNode(data.entry.id).subscribe((downloadNode: NodeEntry) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.downloadId = data.entry.id;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadZipService.getDownload(downloadId).subscribe((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\nimport { NodeEntry } from '@alfresco/js-api';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-node-download], [adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: NodeEntry | NodeEntry[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: NodeEntry | Array<NodeEntry>) {\n\n        if (!this.isSelectionValid(selection)) {\n            return;\n        }\n        if (selection instanceof Array) {\n            if (selection.length === 1) {\n                this.downloadNode(selection[0]);\n            } else {\n                this.downloadZip(selection);\n            }\n        } else {\n            this.downloadNode(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: NodeEntry) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private isSelectionValid(selection: NodeEntry | Array<NodeEntry>) {\n        return selection || (selection instanceof Array && selection.length > 0);\n    }\n\n    private downloadFile(node: NodeEntry) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<NodeEntry>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { LogoutDirective } from './logout.directive';\nimport { NodeDeleteDirective } from './node-delete.directive';\nimport { NodeFavoriteDirective } from './node-favorite.directive';\nimport { CheckAllowableOperationDirective } from './check-allowable-operation.directive';\nimport { NodeRestoreDirective } from './node-restore.directive';\nimport { UploadDirective } from './upload.directive';\nimport { NodeDownloadDirective } from './node-download.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ],\n    exports: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ]\n})\nexport class DirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\n@Component({\n    selector: 'adf-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\" class=\"adf-datatable-cell-value\">{{value}}</span>\n        </ng-container>`,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-cell' }\n})\nexport class DataTableCellComponent implements OnInit {\n\n    @Input()\n    data: DataTableAdapter;\n\n    @Input()\n    column: DataColumn;\n\n    @Input()\n    row: DataRow;\n\n    @Input()\n    value: any;\n\n    @Input()\n    tooltip: string;\n\n    ngOnInit() {\n        if (!this.value && this.column && this.column.key && this.row && this.data) {\n            this.value = this.data.getValue(this.row, this.column);\n\n            if (!this.tooltip) {\n                this.tooltip = this.value;\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    /** Data source key. Can be either a column/property key like `title`\n     *  or a property path like `createdBy.name`.\n     */\n    @Input()\n    key: string;\n\n    /** Value type for the column. Possible settings are 'text', 'image',\n     * 'date', 'fileSize' and 'location'.\n     */\n    @Input()\n    type: string = 'text';\n\n    /** Value format (if supported by the parent component), for example format of the date. */\n    @Input()\n    format: string;\n\n    /** Toggles ability to sort by this column, for example by clicking the column header. */\n    @Input()\n    sortable: boolean = true;\n\n    /** Display title of the column, typically used for column headers. You can use the\n     * i18n resource key to get it translated automatically.\n     */\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /** Custom tooltip formatter function. */\n    @Input()\n    formatTooltip: Function;\n\n    /** Title to be used for screen readers. */\n    @Input('sr-title')\n    srTitle: string;\n\n    /** Additional CSS class to be applied to column (header and cells). */\n    @Input('class')\n    cssClass: string;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AssocChildBody, AssociationBody } from '@alfresco/js-api';\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport class FileUploadOptions {\n    comment?: string;\n    newVersion?: boolean;\n    majorVersion?: boolean;\n    parentId?: string;\n    path?: string;\n    nodeType?: string;\n    properties?: any;\n    association?: any;\n    secondaryChildren?: AssocChildBody[];\n    targets?: AssociationBody[];\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    id: string;\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    errorCode: number;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions, id?: string) {\n        this.file = file;\n        this.id = id;\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n        this.errorCode = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        }, options);\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseUIEvent } from '../../events';\nimport { DataRow } from './data-row.model';\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { DataColumnListComponent } from '../../../data-column/data-column-list.component';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRowEvent } from '../../data/data-row-event.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataSorting } from '../../data/data-sorting.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\nimport { ObjectDataRow } from '../../data/object-datarow.model';\nimport { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\nimport { share, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nexport enum DisplayMode {\n    List = 'list',\n    Gallery = 'gallery'\n}\n\n@Component({\n    selector: 'adf-datatable',\n    styleUrls: ['./datatable.component.scss'],\n    templateUrl: './datatable.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck, OnDestroy {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Data source for the table */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Selects the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** The rows that the datatable will show. */\n    @Input()\n    rows: any[] = [];\n\n    /** Define the sort order of the datatable. Possible values are :\n     * [`created`, `desc`], [`created`, `asc`], [`due`, `desc`], [`due`, `asc`]\n     */\n    @Input()\n    sorting: any[] = [];\n\n    /** The columns that the datatable will show. */\n    @Input()\n    columns: any[] = [];\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the data actions column. */\n    @Input()\n    actions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Fallback image for rows where the thumbnail is missing. */\n    @Input()\n    fallbackThumbnail: string;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    contextMenu: boolean = false;\n\n    /** Toggles file drop support for rows (see\n     * [Upload directive](upload.directive.md) for further details).\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** The inline style to apply to every row. See\n     * [NgStyle](https://angular.io/docs/ts/latest/api/common/index/NgStyle-directive.html)\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row. */\n    @Input()\n    rowStyleClass: string = '';\n\n    /** Toggles the header. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Emitted when the user clicks a row. */\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted when the user double-clicks a row. */\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Flag that indicates if the datatable is in loading state and needs to show the\n     * loading template (see the docs to learn how to configure a loading template).\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Flag that indicates if the datatable should show the \"no permission\" template. */\n    @Input()\n    noPermission: boolean = false;\n\n    /**\n     * Should the items for the row actions menu be cached for reuse after they are loaded\n     * the first time?\n     */\n    @Input()\n    rowMenuCacheEnabled = true;\n\n    noContentTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    /** This array of fake rows fix the flex layout for the gallery view */\n    fakeRows = [];\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private subscriptions: Subscription[] = [];\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n    private dataRowsChanged: Subscription;\n\n    constructor(private elementRef: ElementRef,\n                differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>((observer) => this.clickObserver = observer)\n            .pipe(share());\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.datatableLayoutFix();\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n                this.resetSelection();\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n\n        if (this.isPropertyChanged(changes['sorting'])) {\n            this.setTableSorting(changes['sorting'].currentValue);\n        }\n\n        if (this.isPropertyChanged(changes['display'])) {\n            this.datatableLayoutFix();\n        }\n    }\n\n    ngDoCheck() {\n        let changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map((row) => new ObjectDataRow(row, row.isSelected));\n    }\n\n    convertToDataSorting(sorting: any[]): DataSorting {\n        if (sorting && sorting.length > 0) {\n            return new DataSorting(sorting[0], sorting[1]);\n        }\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        let singleClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length === 1)\n            );\n\n        this.singleClickStreamSub = singleClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            let event: DataRowEvent = dataRowEvents[0];\n            this.handleRowSelection(event.value, <MouseEvent | KeyboardEvent> event.event);\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        let multiClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length >= 2)\n            );\n\n        this.multiClickStreamSub = multiClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            let event: DataRowEvent = dataRowEvents[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n            this.singleClickStreamSub = null;\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n            this.multiClickStreamSub = null;\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.columns);\n        this.setTableSorting(this.sorting);\n        this.resetSelection();\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows: any[]) {\n        if (this.data) {\n            this.resetSelection();\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        let schema = [];\n        if (!this.columns || this.columns.length === 0) {\n            schema = this.getSchemaFromHtml();\n        } else {\n            schema = this.columns.concat(this.getSchemaFromHtml());\n        }\n\n        this.columns = schema;\n\n        if (this.data && this.columns && this.columns.length > 0) {\n            this.data.setColumns(this.columns);\n        }\n    }\n\n    private setTableSorting(sorting) {\n        if (this.data) {\n            this.data.setSorting(this.convertToDataSorting(sorting));\n        }\n    }\n\n    public getSchemaFromHtml(): any {\n        let schema = [];\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n    onRowClick(row: DataRow, mouseEvent: MouseEvent) {\n        if (mouseEvent) {\n            mouseEvent.preventDefault();\n        }\n\n        if (row) {\n            const dataRowEvent = new DataRowEvent(row, mouseEvent, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    onEnterKeyPressed(row: DataRow, e: KeyboardEvent) {\n        if (row) {\n            this.handleRowSelection(row, e);\n        }\n    }\n\n    private handleRowSelection(row: DataRow, e: KeyboardEvent | MouseEvent) {\n        if (this.data) {\n            if (this.isSingleSelectionMode()) {\n                this.resetSelection();\n                this.selectRow(row, true);\n                this.emitRowSelectionEvent('row-select', row);\n            }\n\n            if (this.isMultiSelectionMode()) {\n                const modifier = e && (e.metaKey || e.ctrlKey);\n                let newValue: boolean;\n                if (this.selection.length === 1) {\n                    newValue = !row.isSelected;\n                } else {\n                    newValue = modifier ? !row.isSelected : true;\n                }\n                const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                if (!modifier) {\n                    this.resetSelection();\n                }\n                this.selectRow(row, newValue);\n                this.emitRowSelectionEvent(domEventName, row);\n            }\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach((r) => r.isSelected = false);\n            }\n            this.selection = [];\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, event?: Event) {\n        if (event) {\n            event.preventDefault();\n        }\n        let dataRowEvent = new DataRowEvent(row, event, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent) {\n            keyboardEvent.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, keyboardEvent, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            let current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n            this.emitSortingChangedEvent(column.key, newDirection);\n        }\n    }\n\n    onSelectAllClick(matCheckboxChange: MatCheckboxChange) {\n        this.isSelectAllChecked = matCheckboxChange.checked;\n\n        if (this.multiselect) {\n            let rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], matCheckboxChange.checked);\n                }\n            }\n\n            const domEventName = matCheckboxChange.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MatCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event, row: DataRow) {\n        if (event) {\n            let element = <any> event.target;\n\n            if (this.fallbackThumbnail) {\n                element.src = this.fallbackThumbnail;\n            } else {\n                element.src = row.imageErrorResolver(event);\n            }\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            let value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            let value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '') : '';\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            let sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        let event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col?: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            let event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            if (!this.rowMenuCacheEnabled) {\n                return event.value.actions;\n            }\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    getFilename(row: DataRow): string {\n        return row.getValue('name');\n    }\n\n    getSortingKey(): string {\n        if (this.data.getSorting()) {\n            return this.data.getSorting().key;\n        }\n    }\n\n    selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    getSortableColumns() {\n        return this.data.getColumns().filter((column) => {\n            return column.sortable === true;\n        });\n    }\n\n    isEmpty() {\n        return this.data.getRows().length === 0;\n    }\n\n    isHeaderVisible() {\n        return !this.loading && !this.isEmpty() && !this.noPermission;\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    private emitSortingChangedEvent(key: string, direction: string) {\n        const domEvent = new CustomEvent('sorting-changed', {\n            detail: {\n                key,\n                direction\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribeClickStream();\n\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.dataRowsChanged) {\n            this.dataRowsChanged.unsubscribe();\n            this.dataRowsChanged = null;\n        }\n    }\n\n    datatableLayoutFix() {\n        const maxGalleryRows = 25;\n\n        if (this.display === 'gallery') {\n            for (let i = 0; i < maxGalleryRows; i++) {\n               this.fakeRows.push('');\n            }\n        } else {\n            this.fakeRows = [];\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport {\n    UserPreferencesService,\n    UserPreferenceValues\n} from '../../../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-date-cell',\n\n    template: `\n        <ng-container>\n            <span title=\"{{ tooltip | date:'medium' }}\" *ngIf=\"format === 'timeAgo' else standard_date\">\n                {{ value | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span title=\"{{ tooltip | date:format }}\">\n                {{ value | date:format }}\n            </span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {\n    currentLocale;\n\n    get format(): string {\n        if (this.column) {\n            return this.column.format || 'medium';\n        }\n        return 'medium';\n    }\n\n    constructor(userPreferenceService: UserPreferencesService) {\n        super();\n\n        if (userPreferenceService) {\n            userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .subscribe((locale) => {\n                    this.currentLocale = locale;\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styleUrls: ['./empty-list.component.scss'],\n    templateUrl: './empty-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\">{{ value | adfFileSize }}</span>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { PathInfoEntity } from '@alfresco/js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ displayText }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n\n    @Input()\n    link: any[];\n\n    @Input()\n    displayText: string = '';\n\n    /** @override */\n    ngOnInit() {\n        if (!this.value && this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(this.row, this.column);\n\n            if (path && path.name && path.elements) {\n                this.value = path;\n                this.displayText = path.name.split('/').pop();\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [ this.column.format, parent.id ];\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-loading-content-template, loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-content-template, no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-permission-template, no-permission-template'\n})\nexport class NoPermissionTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noPermissionTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The empty-folder-content selector will be deprecated as it has been replace by\n * adf-custom-empty-content-template.\n */\n@Directive({\n    selector: 'adf-custom-empty-content-template, empty-folder-content'\n})\n\nexport class CustomEmptyContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n    selector: 'adf-custom-loading-content-template'\n})\nexport class CustomLoadingContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The no-permission-content selector will be deprecated as it has been replace by\n * adf-custom-no-permission-template.\n */\n@Directive({\n    selector: 'adf-custom-no-permission-template, no-permission-content'\n})\nexport class CustomNoPermissionTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { ContextMenuModule } from '../context-menu/context-menu.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { DirectiveModule } from '../directives/directive.module';\nimport { DataTableCellComponent } from './components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './components/datatable/datatable.component';\nimport { DateCellComponent } from './components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './directives/no-content-template.directive';\nimport { NoPermissionTemplateDirective } from './directives/no-permission-template.directive';\nimport { CustomEmptyContentTemplateDirective } from './directives/custom-empty-content-template.directive';\nimport { CustomLoadingContentTemplateDirective } from './directives/custom-loading-template.directive';\nimport { CustomNoPermissionTemplateDirective } from './directives/custom-no-permission-template.directive';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild(),\n        ContextMenuModule,\n        PipeModule,\n        DirectiveModule\n    ],\n    declarations: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective\n    ],\n    exports: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective\n    ]\n})\nexport class DataTableModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataColumnListComponent } from './data-column-list.component';\nimport { DataColumnComponent } from './data-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ],\n    exports: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ]\n})\nexport class DataColumnModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { AboutComponent } from './about.component';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        AboutComponent\n    ],\n    exports: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewUtilService {\n    static TARGET = '_new';\n\n    /**\n     * Content groups based on categorization of files that can be viewed in the web browser. This\n     * implementation or grouping is tied to the definition the ng component: ViewerComponent\n     */\n        // tslint:disable-next-line:variable-name\n    static ContentGroup = {\n        IMAGE: 'image',\n        MEDIA: 'media',\n        PDF: 'pdf',\n        TEXT: 'text'\n    };\n\n    /**\n     * Based on ViewerComponent Implementation, this value is used to determine how many times we try\n     * to get the rendition of a file for preview, or printing.\n     */\n    maxRetries = 5;\n\n    /**\n     * Mime-type grouping based on the ViewerComponent.\n     */\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * This method takes a url to trigger the print dialog against, and the type of artifact that it\n     * is.\n     * This URL should be one that can be rendered in the browser, for example PDF, Image, or Text\n     */\n    printFile(url: string, type: string): void {\n        const pwa = window.open(url, ViewUtilService.TARGET);\n        if (pwa) {\n            // Because of the way chrome focus and close image window vs. pdf preview window\n            if (type === ViewUtilService.ContentGroup.IMAGE) {\n                pwa.onfocus = () => {\n                    setTimeout(() => {\n                        pwa.close();\n                    }, 500);\n                };\n            }\n\n            pwa.onload = () => {\n                pwa.print();\n            };\n        }\n    }\n\n    /**\n     * Launch the File Print dialog from anywhere other than the preview service, which resolves the\n     * rendition of the object that can be printed from a web browser.\n     * These are: images, PDF files, or PDF rendition of files.\n     * We also force PDF rendition for TEXT type objects, otherwise the default URL is to download.\n     * TODO there are different TEXT type objects, (HTML, plaintext, xml, etc. we should determine how these are handled)\n     */\n    printFileGeneric(objectId: string, mimeType: string): void {\n        const nodeId = objectId;\n        const type: string = this.getViewerTypeByMimeType(mimeType);\n\n        this.getRendition(nodeId, ViewUtilService.ContentGroup.PDF)\n            .then((value) => {\n                const url: string = this.getRenditionUrl(nodeId, type, (value ? true : false));\n                const printType = (type === ViewUtilService.ContentGroup.PDF\n                    || type === ViewUtilService.ContentGroup.TEXT)\n                    ? ViewUtilService.ContentGroup.PDF : type;\n                this.printFile(url, printType);\n            })\n            .catch((err) => {\n                this.logService.error('Error with Printing');\n                this.logService.error(err);\n            });\n    }\n\n    getRenditionUrl(nodeId: string, type: string, renditionExists: boolean): string {\n        return (renditionExists && type !== ViewUtilService.ContentGroup.IMAGE) ?\n            this.apiService.contentApi.getRenditionUrl(nodeId, ViewUtilService.ContentGroup.PDF) :\n            this.apiService.contentApi.getContentUrl(nodeId, false);\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        const rendition = await this.apiService.renditionsApi.getRendition(nodeId, renditionId);\n\n        if (this.maxRetries < retries) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'CREATED') {\n                return rendition;\n            } else {\n                retries += 1;\n                await this.wait(1000);\n                return await this.waitRendition(nodeId, renditionId, retries);\n            }\n        }\n    }\n\n    getViewerTypeByMimeType(mimeType: string): string {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    wait(ms: number): Promise<any> {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    async getRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        const renditionPaging: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n        let rendition: RenditionEntry = renditionPaging.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId });\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n        return new Promise<RenditionEntry>((resolve) => resolve(rendition));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-more-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-more-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerMoreActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-open-with',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-open-with' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerOpenWithComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-sidebar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-sidebar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerSidebarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@angular/common';\nimport {\n    Component, ContentChild, EventEmitter, HostListener, ElementRef,\n    Input, OnChanges, Output, SimpleChanges, TemplateRef,\n    ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { RenditionPaging, SharedLinkEntry, Node, RenditionEntry, NodeEntry } from '@alfresco/js-api';\nimport { BaseEvent } from '../../events';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { ViewerMoreActionsComponent } from './viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './viewer-open-with.component';\nimport { ViewerSidebarComponent } from './viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './viewer-toolbar.component';\nimport { Subscription } from 'rxjs';\nimport { ViewUtilService } from '../services/view-util.service';\n\n@Component({\n    selector: 'adf-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    host: { 'class': 'adf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ViewerComponent implements OnChanges, OnInit, OnDestroy {\n\n    @ContentChild(ViewerToolbarComponent)\n    toolbar: ViewerToolbarComponent;\n\n    @ContentChild(ViewerSidebarComponent)\n    sidebar: ViewerSidebarComponent;\n\n    @ContentChild(ViewerOpenWithComponent)\n    mnuOpenWith: ViewerOpenWithComponent;\n\n    @ContentChild(ViewerMoreActionsComponent)\n    mnuMoreActions: ViewerMoreActionsComponent;\n\n    /** If you want to load an external file that does not come from ACS you\n     * can use this URL to specify where to load the file from.\n     */\n    @Input()\n    urlFile = '';\n\n    /** Viewer to use with the `urlFile` address (`pdf`, `image`, `media`, `text`).\n     * Used when `urlFile` has no filename and extension.\n     */\n    @Input()\n    urlFileViewer: string = null;\n\n    /** Loads a Blob File */\n    @Input()\n    blobFile: Blob;\n\n    /** Node Id of the file to load. */\n    @Input()\n    nodeId: string = null;\n\n    /** Shared link id (to display shared file). */\n    @Input()\n    sharedLinkId: string = null;\n\n    /** If `true` then show the Viewer as a full page over the current content.\n     * Otherwise fit inside the parent div.\n     */\n    @Input()\n    overlayMode = false;\n\n    /** Hide or show the viewer */\n    @Input()\n    showViewer = true;\n\n    /** Hide or show the toolbar */\n    @Input()\n    showToolbar = true;\n\n    /** Specifies the name of the file when it is not available from the URL. */\n    @Input()\n    displayName: string;\n\n    /** Allows `back` navigation */\n    @Input()\n    allowGoBack = true;\n\n    /** Toggles downloading. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles printing. */\n    @Input()\n    allowPrint = false;\n\n    /** Toggles the 'Full Screen' feature. */\n    @Input()\n    allowFullScreen = true;\n\n    /** Toggles before/next navigation. You can use the arrow buttons to navigate\n     * between documents in the collection.\n     */\n    @Input()\n    allowNavigate = false;\n\n    /** Toggles the \"before\" (\"<\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateBefore = true;\n\n    /** Toggles the next (\">\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateNext = true;\n\n    /** Allow the left the sidebar. */\n    @Input()\n    allowLeftSidebar = false;\n\n    /** Allow the right sidebar. */\n    @Input()\n    allowRightSidebar = false;\n\n    /** Toggles PDF thumbnails. */\n    @Input()\n    allowThumbnails = true;\n\n    /** Toggles right sidebar visibility. Requires `allowRightSidebar` to be set to `true`. */\n    @Input()\n    showRightSidebar = false;\n\n    /** Toggles left sidebar visibility. Requires `allowLeftSidebar` to be set to `true`. */\n    @Input()\n    showLeftSidebar = false;\n\n    /** The template for the right sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarRightTemplate: TemplateRef<any> = null;\n\n    /** The template for the left sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarLeftTemplate: TemplateRef<any> = null;\n\n    /** The template for the pdf thumbnails. */\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    /** MIME type of the file content (when not determined by the filename extension). */\n    @Input()\n    mimeType: string;\n\n    /** Content filename. */\n    @Input()\n    fileName: string;\n\n    /** Number of times the Viewer will retry fetching content Rendition.\n     * There is a delay of at least one second between attempts.\n     */\n    @Input()\n    maxRetries = 10;\n\n    /** Emitted when user clicks the 'Back' button. */\n    @Output()\n    goBack = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Print' button. */\n    @Output()\n    print = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when the viewer is shown or hidden. */\n    @Output()\n    showViewerChange = new EventEmitter<boolean>();\n\n    /** Emitted when the filename extension changes. */\n    @Output()\n    extensionChange = new EventEmitter<string>();\n\n    /** Emitted when user clicks 'Navigate Before' (\"<\") button. */\n    @Output()\n    navigateBefore = new EventEmitter();\n\n    /** Emitted when user clicks 'Navigate Next' (\">\") button. */\n    @Output()\n    navigateNext = new EventEmitter();\n\n    /** Emitted when the shared link used is not valid. */\n    @Output()\n    invalidSharedLink = new EventEmitter();\n\n    viewerType = 'unknown';\n    isLoading = false;\n    node: NodeEntry;\n\n    extensionTemplates: { template: TemplateRef<any>, isVisible: boolean }[] = [];\n    externalExtensions: string[] = [];\n    urlFileContent: string;\n    otherMenu: any;\n    extension: string;\n    sidebarRightTemplateContext: { node: Node } = { node: null };\n    sidebarLeftTemplateContext: { node: Node } = { node: null };\n    fileTitle: string;\n\n    private cacheBusterNumber;\n\n    private subscriptions: Subscription[] = [];\n\n    // Extensions that are supported by the Viewer without conversion\n    private extensions = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],\n        media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],\n        text: ['txt', 'xml', 'js', 'html', 'json', 'ts', 'css', 'md'],\n        pdf: ['pdf']\n    };\n\n    // Mime types that are supported by the Viewer without conversion\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private viewUtils: ViewUtilService,\n                private logService: LogService,\n                private location: Location,\n                private el: ElementRef) {\n    }\n\n    isSourceDefined(): boolean {\n        return (this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId) ? true : false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.apiService.nodeUpdated.subscribe((node) => this.onNodeUpdated(node))\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private onNodeUpdated(node: Node) {\n        if (node && node.id === this.nodeId) {\n            this.generateCacheBusterNumber();\n            this.isLoading = true;\n            this.setUpNodeFile(node).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showViewer) {\n            if (!this.isSourceDefined()) {\n                throw new Error('A content source attribute value is missing.');\n            }\n            this.isLoading = true;\n\n            if (this.blobFile) {\n                this.setUpBlobData();\n                this.isLoading = false;\n            } else if (this.urlFile) {\n                this.setUpUrlFile();\n                this.isLoading = false;\n            } else if (this.nodeId) {\n                this.apiService.nodesApi.getNode(this.nodeId, { include: ['allowableOperations'] }).then(\n                    (node: NodeEntry) => {\n                        this.node = node;\n                        this.setUpNodeFile(node.entry).then(() => {\n                            this.isLoading = false;\n                        });\n                    },\n                    (error) => {\n                        this.isLoading = false;\n                        this.logService.error('This node does not exist');\n                    }\n                );\n            } else if (this.sharedLinkId) {\n\n                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then(\n                    (sharedLinkEntry: SharedLinkEntry) => {\n                        this.setUpSharedLinkFile(sharedLinkEntry);\n                        this.isLoading = false;\n                    },\n                    () => {\n                        this.isLoading = false;\n                        this.logService.error('This sharedLink does not exist');\n                        this.invalidSharedLink.next();\n                    });\n            }\n        }\n    }\n\n    private setUpBlobData() {\n        this.fileTitle = this.getDisplayName('Unknown');\n        this.mimeType = this.blobFile.type;\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n\n        this.allowDownload = false;\n        // TODO: wrap blob into the data url and allow downloading\n\n        this.extensionChange.emit(this.mimeType);\n        this.scrollTop();\n    }\n\n    private setUpUrlFile() {\n        let filenameFromUrl = this.getFilenameFromUrl(this.urlFile);\n        this.fileTitle = this.getDisplayName(filenameFromUrl);\n        this.extension = this.getFileExtension(filenameFromUrl);\n        this.urlFileContent = this.urlFile;\n\n        this.fileName = this.displayName;\n\n        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.scrollTop();\n    }\n\n    private async setUpNodeFile(data: Node) {\n        let setupNode;\n\n        if (data.content) {\n            this.mimeType = data.content.mimeType;\n        }\n\n        this.fileTitle = this.getDisplayName(data.name);\n\n        this.urlFileContent = this.apiService.contentApi.getContentUrl(data.id);\n        this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + this.cacheBusterNumber : this.urlFileContent;\n\n        this.extension = this.getFileExtension(data.name);\n\n        this.fileName = data.name;\n\n        this.viewerType = this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        if (this.viewerType === 'unknown') {\n            setupNode = this.displayNodeRendition(data.id);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.sidebarRightTemplateContext.node = data;\n        this.sidebarLeftTemplateContext.node = data;\n        this.scrollTop();\n\n        return setupNode;\n    }\n\n    private setUpSharedLinkFile(details: any) {\n        this.mimeType = details.entry.content.mimeType;\n        this.fileTitle = this.getDisplayName(details.entry.name);\n        this.extension = this.getFileExtension(details.entry.name);\n        this.fileName = details.entry.name;\n\n        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);\n\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByExtension(this.extension);\n        }\n\n        if (this.viewerType === 'unknown') {\n            this.displaySharedLinkRendition(this.sharedLinkId);\n        }\n\n        this.extensionChange.emit(this.extension);\n    }\n\n    toggleSidebar() {\n        this.showRightSidebar = !this.showRightSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarRightTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    toggleLeftSidebar() {\n        this.showLeftSidebar = !this.showLeftSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarLeftTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    private getDisplayName(name) {\n        return this.displayName || name;\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 1);\n    }\n\n    getViewerTypeByMimeType(mimeType: string) {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (let type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    getViewerTypeByExtension(extension: string) {\n        if (extension) {\n            extension = extension.toLowerCase();\n        }\n\n        if (this.isCustomViewerExtension(extension)) {\n            return 'custom';\n        }\n\n        if (this.extensions.image.indexOf(extension) >= 0) {\n            return 'image';\n        }\n\n        if (this.extensions.media.indexOf(extension) >= 0) {\n            return 'media';\n        }\n\n        if (this.extensions.text.indexOf(extension) >= 0) {\n            return 'text';\n        }\n\n        if (this.extensions.pdf.indexOf(extension) >= 0) {\n            return 'pdf';\n        }\n\n        return 'unknown';\n    }\n\n    onBackButtonClick() {\n        if (this.overlayMode) {\n            this.close();\n        } else {\n            const event = new BaseEvent<any>();\n            this.goBack.next(event);\n\n            if (!event.defaultPrevented) {\n                this.location.back();\n            }\n        }\n    }\n\n    onNavigateBeforeClick() {\n        this.navigateBefore.next();\n    }\n\n    onNavigateNextClick() {\n        this.navigateNext.next();\n    }\n\n    /**\n     * close the viewer\n     */\n    close() {\n        if (this.otherMenu) {\n            this.otherMenu.hidden = false;\n        }\n        this.showViewer = false;\n        this.showViewerChange.emit(this.showViewer);\n    }\n\n    /**\n     * get File name from url\n     *\n     * @param  url - url file\n     */\n    getFilenameFromUrl(url: string): string {\n        let anchor = url.indexOf('#');\n        let query = url.indexOf('?');\n        let end = Math.min(\n            anchor > 0 ? anchor : url.length,\n            query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf('/', end) + 1, end);\n    }\n\n    /**\n     * Get file extension from the string.\n     * Supports the URL formats like:\n     * http://localhost/test.jpg?cache=1000\n     * http://localhost/test.jpg#cache=1000\n     *\n     * @param fileName - file name\n     */\n    getFileExtension(fileName: string): string {\n        if (fileName) {\n            const match = fileName.match(/\\.([^\\./\\?\\#]+)($|\\?|\\#)/);\n            return match ? match[1] : null;\n        }\n        return null;\n    }\n\n    isCustomViewerExtension(extension: string): boolean {\n        const extensions = this.externalExtensions || [];\n\n        if (extension && extensions.length > 0) {\n            extension = extension.toLowerCase();\n            return extensions.indexOf(extension) >= 0;\n        }\n\n        return false;\n    }\n\n    /**\n     * Keyboard event listener\n     * @param  event\n     */\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n\n        // Esc\n        if (key === 27 && this.overlayMode) { // esc\n            this.close();\n        }\n\n        // Left arrow\n        if (key === 37 && this.canNavigateBefore) {\n            event.preventDefault();\n            this.onNavigateBeforeClick();\n        }\n\n        // Right arrow\n        if (key === 39 && this.canNavigateNext) {\n            event.preventDefault();\n            this.onNavigateNextClick();\n        }\n\n        // Ctrl+F\n        if (key === 70 && event.ctrlKey) {\n            event.preventDefault();\n            this.enterFullScreen();\n        }\n    }\n\n    printContent() {\n        if (this.allowPrint) {\n            const args = new BaseEvent();\n            this.print.next(args);\n\n            if (!args.defaultPrevented) {\n                this.viewUtils.printFileGeneric(this.nodeId, this.mimeType);\n            }\n        }\n    }\n\n    /**\n     * Triggers full screen mode with a main content area displayed.\n     */\n    enterFullScreen(): void {\n        if (this.allowFullScreen) {\n            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');\n            if (container) {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n        }\n    }\n\n    private async displayNodeRendition(nodeId: string) {\n        try {\n            const rendition = await this.resolveRendition(nodeId, 'pdf');\n            if (rendition) {\n                const renditionId = rendition.entry.id;\n\n                if (renditionId === 'pdf') {\n                    this.viewerType = 'pdf';\n                } else if (renditionId === 'imgpreview') {\n                    this.viewerType = 'image';\n                }\n\n                this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n            }\n        } catch (err) {\n            this.logService.error(err);\n        }\n    }\n\n    private async displaySharedLinkRendition(sharedId: string) {\n        try {\n            const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');\n            if (rendition.entry.status.toString() === 'CREATED') {\n                this.viewerType = 'pdf';\n                this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');\n            }\n        } catch (error) {\n            this.logService.error(error);\n            try {\n                const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');\n                if (rendition.entry.status.toString() === 'CREATED') {\n                    this.viewerType = 'image';\n                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');\n                }\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private async resolveRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        renditionId = renditionId.toLowerCase();\n\n        const supportedRendition: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n\n        let rendition: RenditionEntry = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        if (!rendition) {\n            renditionId = 'imgpreview';\n            rendition = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        }\n\n        if (rendition) {\n            const status: string = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId }).then(() => {\n                        this.viewerType = 'in_creation';\n                    });\n                    rendition = await this.waitRendition(nodeId, renditionId);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n\n        return rendition;\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        let currentRetry: number = 0;\n        return new Promise<RenditionEntry>((resolve, reject) => {\n            let intervalId = setInterval(() => {\n                currentRetry++;\n                if (this.maxRetries >= currentRetry) {\n                    this.apiService.renditionsApi.getRendition(nodeId, renditionId).then((rendition: RenditionEntry) => {\n                        const status: string = rendition.entry.status.toString();\n                        if (status === 'CREATED') {\n\n                            if (renditionId === 'pdf') {\n                                this.viewerType = 'pdf';\n                            } else if (renditionId === 'imgpreview') {\n                                this.viewerType = 'image';\n                            }\n\n                            this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n\n                            clearInterval(intervalId);\n                            return resolve(rendition);\n                        }\n                    }, () => {\n                        this.viewerType = 'error_in_creation';\n                        return reject();\n                    });\n                }\n            }, 1000);\n        });\n    }\n\n    private generateCacheBusterNumber() {\n        this.cacheBusterNumber = Date.now();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-img-viewer',\n    templateUrl: './imgViewer.component.html',\n    styleUrls: ['./imgViewer.component.scss'],\n    host: { 'class': 'adf-image-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ImgViewerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    showToolbar = true;\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    rotate: number = 0;\n    scaleX: number = 1.0;\n    scaleY: number = 1.0;\n    offsetX: number = 0;\n    offsetY: number = 0;\n    isDragged: boolean = false;\n\n    private drag = { x: 0, y: 0 };\n    private delta = { x: 0, y: 0 };\n\n    get transform(): string {\n        return `scale(${this.scaleX}, ${this.scaleY}) rotate(${this.rotate}deg) translate(${this.offsetX}px, ${this.offsetY}px)`;\n    }\n\n    get currentScaleText(): string {\n        return Math.round(this.scaleX * 100) + '%';\n    }\n\n    private element: HTMLElement;\n\n    constructor(\n        private contentService: ContentService,\n        private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.element = <HTMLElement> this.el.nativeElement.querySelector('#viewer-image');\n\n        if (this.element) {\n            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));\n            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));\n            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));\n            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.removeEventListener('mousedown', this.onMouseDown);\n            this.element.removeEventListener('mouseup', this.onMouseUp);\n            this.element.removeEventListener('mouseleave', this.onMouseLeave);\n            this.element.removeEventListener('mouseout', this.onMouseOut);\n            this.element.removeEventListener('mousemove', this.onMouseMove);\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        event.preventDefault();\n        this.isDragged = true;\n        this.drag = { x: event.pageX, y: event.pageY };\n    }\n\n    onMouseMove(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n\n            this.delta.x = event.pageX - this.drag.x;\n            this.delta.y = event.pageY - this.drag.y;\n\n            this.drag.x = event.pageX;\n            this.drag.y = event.pageY;\n\n            const scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);\n            const scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);\n\n            this.offsetX += (this.delta.x / scaleX);\n            this.offsetY += (this.delta.y / scaleY);\n        }\n    }\n\n    onMouseUp(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseLeave(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseOut(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    zoomIn() {\n        const ratio = +((this.scaleX + 0.2).toFixed(1));\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    zoomOut() {\n        let ratio = +((this.scaleX - 0.2).toFixed(1));\n        if (ratio < 0.2) {\n            ratio = 0.2;\n        }\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    rotateLeft() {\n        const angle = this.rotate - 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    rotateRight() {\n        const angle = this.rotate + 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    reset() {\n        this.rotate = 0;\n        this.scaleX = 1.0;\n        this.scaleY = 1.0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-media-player',\n    templateUrl: './mediaPlayer.component.html',\n    styleUrls: ['./mediaPlayer.component.scss'],\n    host: { 'class': 'adf-media-player' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class MediaPlayerComponent implements OnChanges {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    mimeType: string;\n\n    @Input()\n    nameFile: string;\n\n    constructor(private contentService: ContentService ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        let blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n}\n","/* tslint:disable:adf-license-banner  */\n\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n *\n * RenderingQueueServices rendering of the views for pages and thumbnails.\n *\n */\n@Injectable()\nexport class RenderingQueueServices {\n\n    renderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n    };\n\n    CLEANUP_TIMEOUT: number = 30000;\n\n    pdfViewer: any = null;\n    pdfThumbnailViewer: any = null;\n    onIdle: any = null;\n\n    highestPriorityPage: any = null;\n    idleTimeout: any = null;\n    printing: any = false;\n    isThumbnailViewEnabled: any = false;\n\n    /**\n     * @param pdfViewer\n     */\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param  view\n     */\n    isHighestPriority(view: any): boolean {\n        return this.highestPriorityPage === view.renderingId;\n    }\n\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering so check thumbnails.\n        if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n                return;\n            }\n        }\n\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), this.CLEANUP_TIMEOUT);\n        }\n    }\n\n    getHighestPriority(visible, views, scrolledDown) {\n        // The state has changed figure out which page has the highest priority to\n        // render next (if any).\n        // Priority:\n        // 1 visible pages\n        // 2 if last scrolled down page after the visible pages\n        // 2 if last scrolled up page before the visible pages\n        let visibleViews = visible.views;\n\n        let numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return false;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            let view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n\n        // All the visible views have rendered, try to render next/previous pages.\n        if (scrolledDown) {\n            let nextPageIndex = visible.last.id;\n            // ID's start at 1 so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        } else {\n            let previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n\n    /**\n     * @param view\n     */\n    isViewFinished(view): boolean {\n        return view.renderingState === this.renderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * false.\n     * @param view\n     */\n    renderView(view: any) {\n        let state = view.renderingState;\n        switch (state) {\n            case this.renderingStates.FINISHED:\n                return false;\n            case this.renderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case this.renderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case this.renderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                let continueRendering = function () {\n                    this.renderHighestPriority();\n                }.bind(this);\n                view.draw().then(continueRendering, continueRendering);\n                break;\n            default:\n                break;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n\ndeclare const pdfjsLib: any;\n\n@Component({\n    selector: 'adf-pdf-viewer-password-dialog',\n    templateUrl: './pdfViewer-password-dialog.html',\n    styleUrls: [ './pdfViewer-password-dialog.scss' ]\n})\nexport class PdfPasswordDialogComponent implements OnInit {\n    passwordFormControl: FormControl;\n\n    constructor(\n        private dialogRef: MatDialogRef<PdfPasswordDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n\n    isError(): boolean {\n        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;\n    }\n\n    isValid(): boolean {\n        return !this.passwordFormControl.hasError('required');\n    }\n\n    submit(): void {\n        this.dialogRef.close(this.passwordFormControl.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    TemplateRef,\n    HostListener,\n    Output,\n    Input,\n    OnChanges,\n    OnDestroy,\n    ViewEncapsulation,\n    EventEmitter,\n    SimpleChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { LogService } from '../../services/log.service';\nimport { RenderingQueueServices } from '../services/rendering-queue.services';\nimport { PdfPasswordDialogComponent } from './pdfViewer-password-dialog';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\ndeclare const pdfjsLib: any;\ndeclare const pdfjsViewer: any;\n\nexport interface PdfDocumentOptions {\n    url?: string;\n    data?: any;\n    withCredentials?: boolean;\n}\n\n@Component({\n    selector: 'adf-pdf-viewer',\n    templateUrl: './pdfViewer.component.html',\n    styleUrls: [\n        './pdfViewer.component.scss',\n        './pdfViewerHost.component.scss'\n    ],\n    providers: [RenderingQueueServices],\n    host: { 'class': 'adf-pdf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfViewerComponent implements OnChanges, OnDestroy {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    @Input()\n    showToolbar: boolean = true;\n\n    @Input()\n    allowThumbnails = false;\n\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    @Output()\n    rendered = new EventEmitter<any>();\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    loadingTask: any;\n    currentPdfDocument: any;\n    page: number;\n    displayPage: number;\n    totalPages: number;\n    loadingPercent: number;\n    pdfViewer: any;\n    documentContainer: any;\n    currentScaleMode: string = 'auto';\n    currentScale: number = 1;\n\n    MAX_AUTO_SCALE: number = 1.25;\n    DEFAULT_SCALE_DELTA: number = 1.1;\n    MIN_SCALE: number = 0.25;\n    MAX_SCALE: number = 10.0;\n\n    isPanelDisabled = true;\n    showThumbnails: boolean = false;\n    pdfThumbnailsContext: { viewer: any } = { viewer: null };\n    randomPdfId: string;\n\n    get currentScaleText(): string {\n        return Math.round(this.currentScale * 100) + '%';\n    }\n\n    constructor(\n        private dialog: MatDialog,\n        private renderingQueueServices: RenderingQueueServices,\n        private logService: LogService,\n        private appConfigService: AppConfigService) {\n        // needed to preserve \"this\" context\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onPagesLoaded = this.onPagesLoaded.bind(this);\n        this.onPageRendered = this.onPageRendered.bind(this);\n        this.randomPdfId = this.generateUuid();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n\n        if (blobFile && blobFile.currentValue) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const options = {\n                    data: reader.result,\n                    withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n                };\n                this.executePdf(options);\n            };\n            reader.readAsArrayBuffer(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            const options = {\n                url: urlFile.currentValue,\n                withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n            };\n            this.executePdf(options);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    executePdf(pdfOptions: PdfDocumentOptions) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n\n        this.loadingTask = pdfjsLib.getDocument(pdfOptions);\n\n        this.loadingTask.onPassword = (callback, reason) => {\n            this.onPdfPassword(callback, reason);\n        };\n\n        this.loadingTask.onProgress = (progressData) => {\n            let level = progressData.loaded / progressData.total;\n            this.loadingPercent = Math.round(level * 100);\n        };\n\n        this.loadingTask.then((pdfDocument) => {\n            this.currentPdfDocument = pdfDocument;\n            this.totalPages = pdfDocument.numPages;\n            this.page = 1;\n            this.displayPage = 1;\n            this.initPDFViewer(this.currentPdfDocument);\n\n            this.currentPdfDocument.getPage(1).then(() => {\n                this.scalePage('auto');\n            }, (error) => {\n                this.error.emit();\n            });\n\n        }, (error) => {\n            this.error.emit();\n        });\n    }\n\n    initPDFViewer(pdfDocument: any) {\n        const viewer: any = document.getElementById(`${this.randomPdfId}-viewer-viewerPdf`);\n        const container = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (viewer && container) {\n            this.documentContainer = container;\n\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('textlayerrendered', this.onPageRendered, true);\n\n            this.pdfViewer = new pdfjsViewer.PDFViewer({\n                container: this.documentContainer,\n                viewer: viewer,\n                renderingQueue: this.renderingQueueServices\n            });\n\n            this.renderingQueueServices.setViewer(this.pdfViewer);\n            this.pdfViewer.setDocument(pdfDocument);\n            this.pdfThumbnailsContext.viewer = this.pdfViewer;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentContainer) {\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('textlayerrendered', this.onPageRendered, true);\n        }\n\n        if (this.loadingTask) {\n            try {\n                this.loadingTask.destroy();\n            } catch {\n            }\n\n            this.loadingTask = null;\n        }\n    }\n\n    toggleThumbnails() {\n        this.showThumbnails = !this.showThumbnails;\n    }\n\n    /**\n     * Method to scale the page current support implementation\n     *\n     * @param scaleMode - new scale mode\n     */\n    scalePage(scaleMode) {\n        this.currentScaleMode = scaleMode;\n\n        if (this.pdfViewer) {\n\n            let viewerContainer = document.getElementById(`${this.randomPdfId}-viewer-main-container`);\n            let documentContainer = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n            let widthContainer;\n            let heightContainer;\n\n            if (viewerContainer && viewerContainer.clientWidth <= documentContainer.clientWidth) {\n                widthContainer = viewerContainer.clientWidth;\n                heightContainer = viewerContainer.clientHeight;\n            } else {\n                widthContainer = documentContainer.clientWidth;\n                heightContainer = documentContainer.clientHeight;\n            }\n\n            let currentPage = this.pdfViewer._pages[this.pdfViewer._currentPageNumber - 1];\n\n            let padding = 20;\n            let pageWidthScale = (widthContainer - padding) / currentPage.width * currentPage.scale;\n            let pageHeightScale = (heightContainer - padding) / currentPage.width * currentPage.scale;\n\n            let scale;\n\n            switch (this.currentScaleMode) {\n                case 'page-actual':\n                    scale = 1;\n                    break;\n                case 'page-width':\n                    scale = pageWidthScale;\n                    break;\n                case 'page-height':\n                    scale = pageHeightScale;\n                    break;\n                case 'page-fit':\n                    scale = Math.min(pageWidthScale, pageHeightScale);\n                    break;\n                case 'auto':\n                    let horizontalScale;\n                    if (this.isLandscape) {\n                        horizontalScale = Math.min(pageHeightScale, pageWidthScale);\n                    } else {\n                        horizontalScale = pageWidthScale;\n                    }\n                    scale = Math.min(this.MAX_AUTO_SCALE, horizontalScale);\n\n                    break;\n                default:\n                    this.logService.error('pdfViewSetScale: \\'' + scaleMode + '\\' is an unknown zoom value.');\n                    return;\n            }\n\n            this.setScaleUpdatePages(scale);\n        }\n    }\n\n    /**\n     * Update all the pages with the newScale scale\n     *\n     * @param newScale - new scale page\n     */\n    setScaleUpdatePages(newScale: number) {\n        if (!this.isSameScale(this.currentScale, newScale)) {\n            this.currentScale = newScale;\n\n            this.pdfViewer._pages.forEach(function (currentPage) {\n                currentPage.update(newScale);\n            });\n        }\n\n        this.pdfViewer.update();\n    }\n\n    /**\n     * Check if the request scale of the page is the same for avoid useless re-rendering\n     *\n     * @param oldScale - old scale page\n     * @param newScale - new scale page\n     *\n     */\n    isSameScale(oldScale: number, newScale: number): boolean {\n        return (newScale === oldScale);\n    }\n\n    /**\n     * Check if is a land scape view\n     *\n     * @param width\n     * @param height\n     */\n    isLandscape(width: number, height: number): boolean {\n        return (width > height);\n    }\n\n    /**\n     * Method triggered when the page is resized\n     */\n    onResize() {\n        this.scalePage(this.currentScaleMode);\n    }\n\n    /**\n     * toggle the fit page pdf\n     */\n    pageFit() {\n        if (this.currentScaleMode !== 'page-fit') {\n            this.scalePage('page-fit');\n        } else {\n            this.scalePage('auto');\n        }\n    }\n\n    /**\n     * zoom in page pdf\n     *\n     * @param ticks\n     */\n    zoomIn(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale * this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(this.MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < this.MAX_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * zoom out page pdf\n     *\n     * @param ticks\n     */\n    zoomOut(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale / this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(this.MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > this.MIN_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * load the previous page\n     */\n    previousPage() {\n        if (this.pdfViewer && this.page > 1) {\n            this.page--;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the next page\n     */\n    nextPage() {\n        if (this.pdfViewer && this.page < this.totalPages) {\n            this.page++;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the page in input\n     *\n     * @param page to load\n     */\n    inputPage(page: string) {\n        let pageInput = parseInt(page, 10);\n\n        if (!isNaN(pageInput) && pageInput > 0 && pageInput <= this.totalPages) {\n            this.page = pageInput;\n            this.displayPage = this.page;\n            this.pdfViewer.currentPageNumber = this.page;\n        } else {\n            this.displayPage = this.page;\n        }\n    }\n\n    /**\n     * Page Change Event\n     *\n     * @param event\n     */\n    onPageChange(event) {\n        this.page = event.pageNumber;\n        this.displayPage = event.pageNumber;\n    }\n\n    onPdfPassword(callback, reason) {\n        this.dialog\n            .open(PdfPasswordDialogComponent, {\n                width: '400px',\n                disableClose: true,\n                data: { reason }\n            })\n            .afterClosed().subscribe((password) => {\n            if (password) {\n                callback(password);\n            }\n        });\n    }\n\n    /**\n     * Page Rendered Event\n     */\n    onPageRendered() {\n        this.rendered.emit();\n    }\n\n    /**\n     * Pages Loaded Event\n     *\n     * @param event\n     */\n    onPagesLoaded(event) {\n        this.isPanelDisabled = false;\n    }\n\n    /**\n     * Keyboard Event Listener\n     * @param KeyboardEvent event\n     */\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        let key = event.keyCode;\n        if (key === 39) { // right arrow\n            this.nextPage();\n        } else if (key === 37) {// left arrow\n            this.previousPage();\n        }\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, Input, ContentChild, TemplateRef, HostListener, OnInit,\n    AfterViewInit, ElementRef, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-pdf-thumbnails',\n    templateUrl: './pdfViewer-thumbnails.component.html',\n    styleUrls: ['./pdfViewer-thumbnails.component.scss'],\n    host: { 'class': 'adf-pdf-thumbnails' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() pdfViewer: any;\n\n    virtualHeight: number = 0;\n    translateY: number = 0;\n    renderItems = [];\n    width: number = 91;\n    currentHeight: number = 0;\n\n    private items = [];\n    private margin: number = 15;\n    private itemHeight: number = 114 + this.margin;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.calculateItems();\n    }\n\n    constructor(private element: ElementRef) {\n        this.calculateItems = this.calculateItems.bind(this);\n        this.onPageChange = this.onPageChange.bind(this);\n    }\n\n    ngOnInit() {\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);\n        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);\n\n        this.setHeight(this.pdfViewer.currentPageNumber);\n        this.items = this.getPages();\n        this.calculateItems();\n\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.scrollInto(this.pdfViewer.currentPageNumber), 0);\n    }\n\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);\n    }\n\n    trackByFn(index: number, item: any): number {\n        return item.id;\n    }\n\n    isSelected(pageNum: number) {\n        return this.pdfViewer.currentPageNumber === pageNum;\n    }\n\n    goTo(pageNum: number) {\n        this.pdfViewer.currentPageNumber = pageNum;\n    }\n\n    scrollInto(item: any) {\n        if (this.items.length) {\n            const index: number = this.items.findIndex((element) => element.id === item);\n\n            if (index < 0 || index >= this.items.length) {\n                return;\n            }\n\n            this.element.nativeElement.scrollTop = index * this.itemHeight;\n\n            this.calculateItems();\n        }\n    }\n\n    getPages() {\n        return this.pdfViewer._pages.map((page) => ({\n            id: page.id,\n            getWidth: () => { return this.width; },\n            getHeight: () => { return this.currentHeight; },\n            getPage: () => this.pdfViewer.pdfDocument.getPage(page.id)\n        }));\n    }\n\n    private setHeight(id): number {\n        const height = this.pdfViewer.pdfDocument.getPage(id).then((page) => this.calculateHeight(page));\n        return height;\n    }\n\n    private calculateHeight(page) {\n        const viewport = page.getViewport(1);\n        const pageRatio = viewport.width / viewport.height;\n        const height = Math.floor(this.width / pageRatio);\n\n        this.currentHeight = height;\n        this.itemHeight = height + this.margin;\n    }\n\n    private calculateItems() {\n        const { element, viewPort, itemsInView } = this.getContainerSetup();\n\n        const indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;\n\n        const start = Math.floor(indexByScrollTop);\n\n        const end = Math.ceil(indexByScrollTop) + (itemsInView);\n\n        this.translateY = this.itemHeight * Math.ceil(start);\n        this.virtualHeight = this.itemHeight * this.items.length  - this.translateY;\n        this.renderItems = this.items.slice(start, end);\n    }\n\n    private getContainerSetup() {\n        const element = this.element.nativeElement;\n        const elementRec = element.getBoundingClientRect();\n        const itemsInView = Math.ceil(elementRec.height / this.itemHeight);\n        const viewPort = (this.itemHeight * this.items.length) / itemsInView;\n\n        return {\n            element,\n            viewPort,\n            itemsInView\n        };\n    }\n\n    private onPageChange(event) {\n        const index = this.renderItems.findIndex((element) => element.id === event.pageNumber);\n\n        if (index < 0) {\n            this.scrollInto(event.pageNumber);\n        }\n\n        if (index >= this.renderItems.length - 1) {\n            this.element.nativeElement.scrollTop += this.itemHeight;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-pdf-thumb',\n    templateUrl: './pdfViewer-thumb.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbComponent implements OnInit {\n\n    @Input()\n    page: any = null;\n\n    image$: Promise<string>;\n\n    constructor(private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.image$ = this.page.getPage().then((page) => this.getThumb(page));\n    }\n\n    private getThumb(page): Promise<string> {\n        const viewport = page.getViewport(1);\n\n        const pageRatio = viewport.width / viewport.height;\n        const canvas = this.getCanvas(pageRatio);\n        const scale = Math.min((canvas.height / viewport.height), (canvas.width / viewport.width));\n\n        return page.render({\n            canvasContext: canvas.getContext('2d'),\n            viewport: page.getViewport(scale)\n        })\n        .then(() => {\n            const imageSource = canvas.toDataURL();\n            return this.sanitizer.bypassSecurityTrustUrl(imageSource);\n        });\n    }\n\n    private getCanvas(pageRatio): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.page.getWidth();\n        canvas.height = this.page.getHeight();\n        return canvas;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\n\n@Component({\n    selector: 'adf-txt-viewer',\n    templateUrl: './txtViewer.component.html',\n    styleUrls: ['./txtViewer.component.scss'],\n    host: { 'class': 'adf-txt-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TxtViewerComponent implements OnChanges {\n\n    @Input()\n    urlFile: any;\n\n    @Input()\n    blobFile: Blob;\n\n    content: string | ArrayBuffer;\n\n    constructor(private http: HttpClient) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): Promise<any> {\n\n        let blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            return this.readBlob(blobFile.currentValue);\n        }\n\n        let urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            return this.getUrlContent(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    private getUrlContent(url: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.http.get(url, { responseType: 'text' }).subscribe((res) => {\n                this.content = res;\n                resolve();\n            }, (event) => {\n                reject(event);\n            });\n        });\n    }\n\n    private readBlob(blob: Blob): Promise<any> {\n        return new Promise((resolve, reject) => {\n            let reader = new FileReader();\n\n            reader.onload = () => {\n                this.content = reader.result;\n                resolve();\n            };\n\n            reader.onerror = (error: any) => {\n                reject(error);\n            };\n\n            reader.readAsText(blob);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-unknown-format',\n    templateUrl: 'unknown-format.component.html',\n    styleUrls: ['unknown-format.component.scss']\n})\nexport class UnknownFormatComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, Input, TemplateRef } from '@angular/core';\nimport { ViewerComponent } from '../components/viewer.component';\n\n@Directive({\n    selector: 'adf-viewer-extension'\n})\nexport class ViewerExtensionDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    urlFileContent: string;\n\n    @Input()\n    extension: string;\n\n    @Input()\n    supportedExtensions: string[];\n\n    templateModel: any;\n\n    constructor(private viewerComponent: ViewerComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.templateModel = { template: this.template, isVisible: false };\n\n        this.viewerComponent.extensionTemplates.push(this.templateModel);\n\n        this.viewerComponent.extensionChange.subscribe((fileExtension) => {\n            this.templateModel.isVisible = this.isVisible(fileExtension);\n        });\n\n        if (this.supportedExtensions instanceof Array) {\n            this.supportedExtensions.forEach((extension) => {\n                this.viewerComponent.externalExtensions.push(extension);\n            });\n        }\n    }\n\n    /**\n     * check if the current extension in the viewer is compatible with this extension checking against supportedExtensions\n     */\n    isVisible(fileExtension): boolean {\n        let supportedExtension: string;\n\n        if (this.supportedExtensions && (this.supportedExtensions instanceof Array)) {\n            supportedExtension = this.supportedExtensions.find((extension) => {\n                return extension.toLowerCase() === fileExtension;\n\n            });\n        }\n\n        return !!supportedExtension;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarDividerComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    /** Toolbar title. */\n    @Input()\n    title: string = '';\n\n    /** Toolbar color. Can be changed to empty value (default), `primary`, `accent` or `warn`. */\n    @Input()\n    color: string;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { ImgViewerComponent } from './components/imgViewer.component';\nimport { MediaPlayerComponent } from './components/mediaPlayer.component';\nimport { PdfViewerComponent } from './components/pdfViewer.component';\nimport { PdfPasswordDialogComponent } from './components/pdfViewer-password-dialog';\nimport { PdfThumbComponent } from './components/pdfViewer-thumb.component';\nimport { PdfThumbListComponent } from './components/pdfViewer-thumbnails.component';\nimport { TxtViewerComponent } from './components/txtViewer.component';\nimport { UnknownFormatComponent } from './components/unknown-format/unknown-format.component';\nimport { ViewerMoreActionsComponent } from './components/viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './components/viewer-open-with.component';\nimport { ViewerSidebarComponent } from './components/viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './components/viewer-toolbar.component';\nimport { ViewerComponent } from './components/viewer.component';\nimport { ViewerExtensionDirective } from './directives/viewer-extension.directive';\nimport { ViewerToolbarActionsComponent } from './components/viewer-toolbar-actions.component';\nimport { DirectiveModule } from '../directives/directive.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ToolbarModule,\n        PipeModule,\n        FlexLayoutModule,\n        DirectiveModule\n    ],\n    declarations: [\n        PdfPasswordDialogComponent,\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ],\n    entryComponents: [\n        PdfPasswordDialogComponent\n    ],\n    exports: [\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfPasswordDialogComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ]\n})\nexport class ViewerModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserRepresentation } from '@alfresco/js-api';\n\nexport class BpmUserModel implements UserRepresentation {\n    apps: any;\n    capabilities: string[];\n    company: string;\n    created: Date;\n    email: string;\n    externalId: string;\n    firstName: string;\n    lastName: string;\n    fullname: string;\n    groups: any;\n    id: number;\n    lastUpdate: Date;\n    latestSyncTimeStamp: Date;\n    password: string;\n    pictureId: number;\n    status: string;\n    tenantId: number;\n    tenantName: string;\n    tenantPictureId: number;\n    type: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.apps = input.apps;\n            this.capabilities = input.capabilities;\n            this.company = input.company;\n            this.created = input.created;\n            this.email = input.email;\n            this.externalId = input.externalId;\n            this.firstName = input.firstName;\n            this.lastName = input.lastName;\n            this.fullname = input.fullname;\n            this.groups = input.groups;\n            this.id = input.id;\n            this.lastUpdate = input.lastUpdate;\n            this.latestSyncTimeStamp = input.latestSyncTimeStamp;\n            this.password = input.password;\n            this.pictureId = input.pictureId;\n            this.status = input.status;\n            this.tenantId = input.tenantId;\n            this.tenantName = input.tenantName;\n            this.tenantPictureId = input.tenantPictureId;\n            this.type = input.type;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { BpmUserModel } from '../models/bpm-user.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserRepresentation } from '@alfresco/js-api';\n\n/**\n *\n * BPMUserService retrieve all the information of an Ecm user.\n *\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class BpmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about the current user.\n     * @returns User information object\n     */\n    getCurrentUserInfo(): Observable<BpmUserModel> {\n        return from(this.apiService.getInstance().activiti.profileApi.getProfile())\n            .pipe(\n                map((userRepresentation: UserRepresentation) => {\n                    return new BpmUserModel(userRepresentation);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the current user's profile image as a URL.\n     * @returns URL string\n     */\n    getCurrentUserProfileImage(): string {\n        return this.apiService.getInstance().activiti.profileApi.getProfilePictureUrl();\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Person } from '@alfresco/js-api';\nimport { EcmCompanyModel } from '../../models/ecm-company.model';\n\nexport class EcmUserModel implements Person {\n    id: string;\n    firstName: string;\n    lastName: string;\n    description: string;\n    avatarId: string;\n    email: string;\n    skypeId: string;\n    googleId: string;\n    instantMessageId: string;\n    jobTitle: string;\n    location: string;\n    company: EcmCompanyModel;\n    mobile: string;\n    telephone: string;\n    statusUpdatedAt: Date;\n    userStatus: string;\n    enabled: boolean;\n    emailNotificationsEnabled: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.firstName = obj && obj.firstName;\n        this.lastName = obj && obj.lastName;\n        this.description = obj && obj.description || null;\n        this.avatarId = obj && obj.avatarId || null;\n        this.email = obj && obj.email || null;\n        this.skypeId = obj && obj.skypeId;\n        this.googleId = obj && obj.googleId;\n        this.instantMessageId = obj && obj.instantMessageId;\n        this.jobTitle = obj && obj.jobTitle || null;\n        this.location = obj && obj.location || null;\n        this.company = obj && obj.company;\n        this.mobile = obj && obj.mobile;\n        this.telephone = obj && obj.telephone;\n        this.statusUpdatedAt = obj && obj.statusUpdatedAt;\n        this.userStatus = obj && obj.userStatus;\n        this.enabled = obj && obj.enabled;\n        this.emailNotificationsEnabled = obj && obj.emailNotificationsEnabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ContentService } from '../../services/content.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { EcmUserModel } from '../models/ecm-user.model';\nimport { PersonEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private contentService: ContentService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param userName Target username\n     * @returns User information\n     */\n    getUserInfo(userName: string): Observable<EcmUserModel> {\n        return from(this.apiService.getInstance().core.peopleApi.getPerson(userName))\n            .pipe(\n                map((personEntry: PersonEntry) => {\n                    return new EcmUserModel(personEntry.entry);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets information about the user who is currently logged-in.\n     * @returns User information as for getUserInfo\n     */\n    getCurrentUserInfo() {\n        return this.getUserInfo('-me-');\n    }\n\n    /**\n     * Returns a profile image as a URL.\n     * @param avatarId Target avatar\n     * @returns Image URL\n     */\n    getUserProfileImage(avatarId: string) {\n        if (avatarId) {\n            let nodeObj = {entry: {id: avatarId}};\n            return this.contentService.getContentUrl(nodeObj);\n        }\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class IdentityUserModel {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    username: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.email = obj.email || null;\n            this.username = obj.username || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtHelperService {\n\n    constructor() {}\n\n    /**\n     * Decodes a JSON web token into a JS object.\n     * @param token Token in encoded form\n     * @returns Decoded token data object\n     */\n    decodeToken(token): Object {\n        let parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        let decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    private urlBase64Decode(token): string {\n        let output = token.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return decodeURIComponent(escape(window.atob(output)));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { IdentityUserModel } from '../models/identity-user.model';\nimport { JwtHelperService } from '../../services/jwt-helper.service';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { IdentityRoleModel } from '../models/identity-role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IdentityUserService {\n\n    static USER_NAME = 'name';\n    static FAMILY_NAME = 'family_name';\n    static GIVEN_NAME = 'given_name';\n    static USER_EMAIL = 'email';\n    static USER_ACCESS_TOKEN = 'access_token';\n    static USER_PREFERRED_USERNAME = 'preferred_username';\n\n    constructor(\n        private helper: JwtHelperService,\n        private apiService: AlfrescoApiService,\n        private appConfigService: AppConfigService) {}\n\n    /**\n     * Gets the name and other basic details of the current user.\n     * @returns The user's details\n     */\n    getCurrentUserInfo(): IdentityUserModel {\n        const familyName = this.getValueFromToken<string>(IdentityUserService.FAMILY_NAME);\n        const givenName = this.getValueFromToken<string>(IdentityUserService.GIVEN_NAME);\n        const email = this.getValueFromToken<string>(IdentityUserService.USER_EMAIL);\n        const username = this.getValueFromToken<string>(IdentityUserService.USER_PREFERRED_USERNAME);\n        const user = { firstName: givenName, lastName: familyName, email: email, username: username };\n        return new IdentityUserModel(user);\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromToken<T>(key: string): T {\n        let value;\n        const token = localStorage.getItem(IdentityUserService.USER_ACCESS_TOKEN);\n        if (token) {\n            const tokenPayload = this.helper.decodeToken(token);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n\n    /**\n     * Find users based on search input.\n     * @param search Search query string\n     * @returns List of users\n     */\n    findUsersByName(search: string): Observable<any> {\n        if (search === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {search: search}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam,\n                    contentTypes, accepts, Object, null, null)\n                ));\n    }\n\n    /**\n     * Get client roles of a user for a particular client.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns List of client roles\n     */\n    getClientRoles(userId: string, clientId: string): Observable<any[]> {\n        const url = this.buildUserClientRoleMapping(userId, clientId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam,\n                    contentTypes, accepts, Object, null, null)\n                );\n    }\n\n    /**\n     * Checks whether user has access to a client app.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasClientApp(userId: string, clientId: string): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                if (clientRoles.length > 0) {\n                    return true;\n                }\n                return false;\n            })\n        );\n    }\n\n    /**\n     * Checks whether a user has any of the client app roles.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyClientAppRole(userId: string, clientId: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                let hasRole = false;\n                if (clientRoles.length > 0) {\n                    roleNames.forEach((roleName) => {\n                        const role = clientRoles.find((availableRole) => {\n                            return availableRole.name === roleName;\n                        });\n\n                        if (role) {\n                            hasRole = true;\n                            return;\n                        }\n                    });\n                }\n                return hasRole;\n            })\n        );\n    }\n\n    /**\n     * Gets the client ID for an application.\n     * @param applicationName Name of the application\n     * @returns Client ID string\n     */\n    getClientIdByApplicationName(applicationName: string): Observable<string> {\n        const url = this.buildGetClientsUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {clientId: applicationName}, bodyParam = {}, headerParams = {}, formParams = {},\n              contentTypes = ['application/json'], accepts = ['application/json'];\n        return from(this.apiService.getInstance()\n                        .oauth2Auth.callCustomApi(url, httpMethod, pathParams, queryParams, headerParams,\n                                              formParams, bodyParam, contentTypes,\n                                              accepts, Object, null, null)\n            ).pipe(\n                map((response: any[]) => {\n                    const clientId = response && response.length > 0 ? response[0].id : '';\n                    return clientId;\n                })\n            );\n    }\n\n    /**\n     * Checks if a user has access to an application.\n     * @param userId ID of the user\n     * @param applicationName Name of the application\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasApplicationAccess(userId: string, applicationName: string): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasClientApp(userId, clientId);\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has any application role.\n     * @param userId ID of the target user\n     * @param applicationName Name of the application\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyApplicationRole(userId: string, applicationName: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasAnyClientAppRole(userId, clientId, roleNames);\n            })\n        );\n    }\n\n    /**\n     * Gets details for all users.\n     * @returns Array of user info objects\n     */\n    getUsers(): Observable<IdentityUserModel[]> {\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, authNames = [], contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam, authNames,\n                    contentTypes, accepts, null, null)\n                ).pipe(\n                    map((response: IdentityUserModel[]) => {\n                        return response;\n                    })\n            );\n    }\n\n    /**\n     * Gets a list of roles for a user.\n     * @param userId ID of the user\n     * @returns Array of role info objects\n     */\n    getUserRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildRolesUrl(userId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam,\n                    contentTypes, accepts, Object, null, null)\n                ).pipe(\n                    map((response: IdentityRoleModel[]) => {\n                        return response;\n                    })\n            );\n    }\n\n    /**\n     * Gets an array of users (including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const users = await this.getUsers().toPromise();\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    /**\n     * Gets an array of users (not including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithoutCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const currentUser = this.getCurrentUserInfo();\n            let users = await this.getUsers().toPromise();\n\n            users = users.filter((user) => { return user.username !== currentUser.username; });\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    private async userHasAnyRole(userId: string, roleNames: string[]): Promise<boolean> {\n        const userRoles = await this.getUserRoles(userId).toPromise();\n        const hasAnyRole = roleNames.some((roleName) => {\n            const filteredRoles = userRoles.filter((userRole) => {\n                return userRole.name.toLocaleLowerCase() === roleName.toLocaleLowerCase();\n            });\n\n            return filteredRoles.length > 0;\n        });\n\n        return hasAnyRole;\n    }\n\n    /**\n     * Checks if a user has one of the roles from a list.\n     * @param userId ID of the target user\n     * @param roleNames Array of roles to check for\n     * @returns True if the user has one of the roles, false otherwise\n     */\n    checkUserHasRole(userId: string, roleNames: string[]): Observable<boolean>  {\n        return this.getUserRoles(userId).pipe(map((userRoles: IdentityRoleModel[]) => {\n            let hasRole = false;\n            if (userRoles && userRoles.length > 0) {\n                roleNames.forEach((roleName: string) => {\n                    const role = userRoles.find((userRole) => {\n                        return roleName === userRole.name;\n                    });\n                    if (role) {\n                        hasRole = true;\n                        return;\n                    }\n                });\n            }\n            return hasRole;\n        }));\n    }\n\n    private buildUserUrl(): any {\n        return `${this.appConfigService.get('identityHost')}/users`;\n    }\n\n    private buildUserClientRoleMapping(userId: string, clientId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/clients/${clientId}`;\n    }\n\n    private buildRolesUrl(userId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/realm/composite`;\n    }\n\n    private buildGetClientsUrl() {\n        return `${this.appConfigService.get('identityHost')}/clients`;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from './../models/bpm-user.model';\nimport { EcmUserModel } from './../models/ecm-user.model';\nimport { IdentityUserModel } from './../models/identity-user.model';\nimport { BpmUserService } from './../services/bpm-user.service';\nimport { EcmUserService } from './../services/ecm-user.service';\nimport { IdentityUserService } from '../services/identity-user.service';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'adf-userinfo',\n    styleUrls: ['./user-info.component.scss'],\n    templateUrl: './user-info.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserInfoComponent implements OnInit {\n\n    /** Custom path for the background banner image for ACS users. */\n    @Input()\n    ecmBackgroundImage: string = './assets/images/ecm-background.png';\n\n    /** Custom path for the background banner image for APS users. */\n    @Input()\n    bpmBackgroundImage: string = './assets/images/bpm-background.png';\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    /** Shows/hides the username next to the user info button. */\n    @Input()\n    showName: boolean = true;\n\n    /** When the username is shown, this defines its position relative to the user info button.\n     * Can be `right` or `left`.\n     */\n    @Input()\n    namePosition: string = 'right';\n\n    ecmUser$: Observable<EcmUserModel>;\n    bpmUser$: Observable<BpmUserModel>;\n    identityUser$: Observable<IdentityUserModel>;\n    selectedIndex: number;\n\n    constructor(private ecmUserService: EcmUserService,\n                private bpmUserService: BpmUserService,\n                private identityUserService: IdentityUserService,\n                private authService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getUserInfo();\n    }\n\n    getUserInfo() {\n        if (this.authService.isOauth()) {\n            this.loadIdentityUserInfo();\n        } else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {\n            this.loadEcmUserInfo();\n            this.loadBpmUserInfo();\n        } else if (this.authService.isEcmLoggedIn()) {\n            this.loadEcmUserInfo();\n        } else if (this.authService.isBpmLoggedIn()) {\n            this.loadBpmUserInfo();\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isLoggedIn();\n    }\n\n    loadEcmUserInfo(): void {\n        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();\n    }\n\n    loadBpmUserInfo() {\n        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();\n    }\n\n    loadIdentityUserInfo() {\n        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());\n    }\n\n    stopClosing(event) {\n        event.stopPropagation();\n    }\n\n    getEcmAvatar(avatarId: any ): string {\n        return this.ecmUserService.getUserProfileImage(avatarId);\n    }\n\n    getBpmUserImage(): string {\n        return this.bpmUserService.getCurrentUserProfileImage();\n    }\n\n    showOnRight(): boolean {\n        return this.namePosition === 'right';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class IdentityRoleModel {\n\n    id: string;\n    name: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { UserInfoComponent } from './components/user-info.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        UserInfoComponent\n    ],\n    exports: [\n        UserInfoComponent\n    ]\n})\nexport class UserInfoModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl, FormControl } from '@angular/forms';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Component({\n    selector: 'adf-host-settings',\n    templateUrl: 'host-settings.component.html',\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styleUrls: ['host-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent implements OnInit {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    /**\n     * Tells the component which provider options are available. Possible valid values\n     * are \"ECM\" (Content), \"BPM\" (Process) , \"ALL\" (Content and Process), 'OAUTH2' SSO.\n     */\n    @Input()\n    providers: string[] = ['BPM', 'ECM', 'ALL'];\n\n    showSelectProviders = true;\n\n    form: FormGroup;\n\n    /** Emitted when the URL is invalid. */\n    @Output()\n    error = new EventEmitter<string>();\n\n    /** Emitted when the user cancels the changes. */\n    @Output()\n    cancel = new EventEmitter<boolean>();\n\n    /** Emitted when the changes are successfully applied. */\n    @Output()\n    success = new EventEmitter<boolean>();\n\n    constructor(private formBuilder: FormBuilder,\n                private storageService: StorageService,\n                private alfrescoApiService: AlfrescoApiService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        if (this.providers.length === 1) {\n            this.showSelectProviders = false;\n        }\n\n        let providerSelected = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n        const authType = this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC');\n\n        this.form = this.formBuilder.group({\n            providersControl: [providerSelected, Validators.required],\n            authType: authType\n        });\n\n        this.addFormGroups();\n\n        if (authType === 'OAUTH') {\n            this.addOAuthFormGroup();\n            this.addIdentityHostFormControl();\n        }\n\n        this.form.get('authType').valueChanges.subscribe((value) => {\n            if (value === 'BASIC') {\n                this.form.removeControl('oauthConfig');\n                this.form.removeControl('identityHost');\n            } else {\n                this.addOAuthFormGroup();\n                this.addIdentityHostFormControl();\n            }\n        });\n\n        this.providersControl.valueChanges.subscribe(() => {\n            this.removeFormGroups();\n            this.addFormGroups();\n        });\n    }\n\n    private removeFormGroups() {\n        this.form.removeControl('bpmHost');\n        this.form.removeControl('ecmHost');\n    }\n\n    private addFormGroups() {\n        this.addBPMFormControl();\n        this.addECMFormControl();\n    }\n\n    private addOAuthFormGroup() {\n        const oauthFormGroup = this.createOAuthFormGroup();\n        this.form.addControl('oauthConfig', oauthFormGroup);\n    }\n\n    private addBPMFormControl() {\n        if ((this.isBPM() || this.isALL() || this.isOAUTH()) && !this.bpmHost) {\n            const bpmFormControl = this.createBPMFormControl();\n            this.form.addControl('bpmHost', bpmFormControl);\n        }\n    }\n\n    private addIdentityHostFormControl() {\n        const identityHostFormControl = this.createIdentityFormControl();\n        this.form.addControl('identityHost', identityHostFormControl);\n    }\n\n    private addECMFormControl() {\n        if ((this.isECM() || this.isALL()) && !this.ecmHost) {\n            const ecmFormControl = this.createECMFormControl();\n            this.form.addControl('ecmHost', ecmFormControl);\n        }\n    }\n\n    private createOAuthFormGroup(): AbstractControl {\n        let oauth = <OauthConfigModel> this.appConfig.get(AppConfigValues.OAUTHCONFIG, {});\n\n        return this.formBuilder.group({\n            host: [oauth.host, [Validators.required, Validators.pattern(this.HOST_REGEX)]],\n            clientId: [oauth.clientId, Validators.required],\n            redirectUri: [oauth.redirectUri, Validators.required],\n            redirectUriLogout: [oauth.redirectUriLogout],\n            scope: [oauth.scope, Validators.required],\n            secret: oauth.secret,\n            silentLogin: oauth.silentLogin,\n            implicitFlow: oauth.implicitFlow\n        });\n    }\n\n    private createBPMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.BPMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createIdentityFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.IDENTITY_HOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createECMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.ECMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    onCancel() {\n        this.cancel.emit(true);\n    }\n\n    onSubmit(values: any) {\n        this.storageService.setItem(AppConfigValues.PROVIDERS, values.providersControl);\n\n        if (this.isBPM()) {\n            this.saveBPMValues(values);\n        } else if (this.isECM()) {\n            this.saveECMValues(values);\n        } else if (this.isALL()) {\n            this.saveECMValues(values);\n            this.saveBPMValues(values);\n        }\n\n        if (this.isOAUTH()) {\n            this.saveOAuthValues(values);\n        }\n\n        this.storageService.setItem(AppConfigValues.AUTHTYPE, values.authType);\n\n        this.alfrescoApiService.reset();\n        this.alfrescoApiService.getInstance().invalidateSession();\n        this.success.emit(true);\n    }\n\n    private saveOAuthValues(values: any) {\n        this.storageService.setItem(AppConfigValues.OAUTHCONFIG, JSON.stringify(values.oauthConfig));\n        this.storageService.setItem(AppConfigValues.IDENTITY_HOST, values.identityHost);\n    }\n\n    private saveBPMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.BPMHOST, values.bpmHost);\n    }\n\n    private saveECMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.ECMHOST, values.ecmHost);\n    }\n\n    isBPM(): boolean {\n        return this.providersControl.value === 'BPM';\n    }\n\n    isECM(): boolean {\n        return this.providersControl.value === 'ECM';\n    }\n\n    isALL(): boolean {\n        return this.providersControl.value === 'ALL';\n    }\n\n    isOAUTH(): boolean {\n        return this.form.get('authType').value === 'OAUTH';\n    }\n\n    get providersControl(): AbstractControl {\n        return this.form.get('providersControl');\n    }\n\n    get bpmHost(): AbstractControl {\n        return this.form.get('bpmHost');\n    }\n\n    get ecmHost(): AbstractControl {\n        return this.form.get('ecmHost');\n    }\n\n    get host(): AbstractControl {\n        return this.oauthConfig.get('host');\n    }\n\n    get identityHost(): AbstractControl {\n        return this.form.get('identityHost');\n    }\n\n    get clientId(): AbstractControl {\n        return this.oauthConfig.get('clientId');\n    }\n\n    get scope(): AbstractControl {\n        return this.oauthConfig.get('scope');\n    }\n\n    get secretId(): AbstractControl {\n        return this.oauthConfig.get('secretId');\n    }\n\n    get implicitFlow(): AbstractControl {\n        return this.oauthConfig.get('implicitFlow');\n    }\n\n    get silentLogin(): AbstractControl {\n        return this.oauthConfig.get('silentLogin');\n    }\n\n    get redirectUri(): AbstractControl {\n        return this.oauthConfig.get('redirectUri');\n    }\n\n    get redirectUriLogout(): AbstractControl {\n        return this.oauthConfig.get('redirectUriLogout');\n    }\n\n    get oauthConfig(): AbstractControl {\n        return this.form.get('oauthConfig');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HostSettingsComponent } from './host-settings.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HostSettingsComponent\n    ],\n    exports: [\n        HostSettingsComponent\n    ]\n})\nexport class HostSettingsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation,\n    ChangeDetectorRef, OnDestroy, HostBinding\n} from '@angular/core';\n\nimport { Pagination } from '@alfresco/js-api';\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** An array of page sizes. */\n    @Input()\n    supportedPageSizes: number[];\n\n    /** Pagination object. */\n    @Input()\n    pagination: PaginationModel = PaginationComponent.DEFAULT_PAGINATION;\n\n    /** Emitted when pagination changes in any way. */\n    @Output()\n    change: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page number changes. */\n    @Output()\n    changePageNumber: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page size changes. */\n    @Output()\n    changePageSize: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the next page is requested. */\n    @Output()\n    nextPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the previous page is requested. */\n    @Output()\n    prevPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.pagination.maxItems = pagSize;\n        });\n    }\n\n    ngOnInit() {\n        if (!this.supportedPageSizes) {\n            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;\n        }\n\n        if (this.target) {\n            this.paginationSubscription = this.target.pagination.subscribe((pagination: PaginationModel) => {\n\n                if (pagination.count === 0 && !this.isFirstPage) {\n                    this.goPrevious();\n                }\n\n                this.pagination = pagination;\n                this.cdr.detectChanges();\n            });\n        }\n\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        return this.current === this.lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        return this.isLastPage ? this.current : this.current + 1;\n    }\n\n    get previous(): number {\n        return this.isFirstPage ? 1 : this.current - 1;\n    }\n\n    get hasItems(): boolean {\n        return this.pagination && this.pagination.count > 0;\n    }\n\n    @HostBinding('class.adf-pagination__empty')\n    get isEmpty(): boolean {\n        return !this.hasItems;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [start, end];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.next - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    goPrevious() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.previous - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (pageNumber - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.pagination.skipCount = 0;\n        this.userPreferencesService.paginationSize = maxItems;\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    handlePaginationEvent(action: string, params: PaginationModel) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const paginationModel: PaginationModel = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(paginationModel);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(paginationModel);\n        }\n\n        change.emit(params);\n\n        if (this.target) {\n            this.target.updatePagination(params);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnInit, Output, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { PaginationModel } from '../models/pagination.model';\nimport { RequestPaginationModel } from '../models/request-pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Pagination } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    templateUrl: './infinite-pagination.component.html',\n    styleUrls: ['./infinite-pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    _target: PaginatedComponent;\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    set target(target: PaginatedComponent) {\n        if (target) {\n            this._target = target;\n            this.paginationSubscription = target.pagination.subscribe((pagination: PaginationModel) => {\n                this.isLoading = false;\n                this.pagination = pagination;\n\n                if (!this.pagination.hasMoreItems) {\n                    this.pagination.hasMoreItems = false;\n                }\n\n                this.cdr.detectChanges();\n            });\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    /** Number of items that are added with each \"load more\" event. */\n    @Input()\n    pageSize: number;\n\n    /** Is a new page loading? */\n    @Input('loading')\n    isLoading: boolean = false;\n\n    /** Emitted when the \"Load More\" button is clicked. */\n    @Output()\n    loadMore: EventEmitter<RequestPaginationModel> = new EventEmitter<RequestPaginationModel>();\n\n    pagination: PaginationModel = InfinitePaginationComponent.DEFAULT_PAGINATION;\n\n    requestPaginationModel: RequestPaginationModel = {\n        skipCount: 0,\n        merge: true\n    };\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pageSize: number) => {\n            this.pageSize = this.pageSize || pageSize;\n            this.requestPaginationModel.maxItems = this.pageSize;\n        });\n    }\n\n    onLoadMore() {\n        this.requestPaginationModel.skipCount = 0;\n        this.requestPaginationModel.merge = false;\n\n        this.requestPaginationModel.maxItems += this.pageSize;\n\n        this.loadMore.next(this.requestPaginationModel);\n\n        if (this._target) {\n            this.isLoading = true;\n            this._target.updatePagination(<RequestPaginationModel> this.requestPaginationModel);\n        }\n    }\n\n    reset() {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = this.pageSize;\n\n        if (this._target) {\n            this._target.updatePagination(this.pagination);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { InfinitePaginationComponent } from './infinite-pagination.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    exports: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ]\n})\nexport class PaginationModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginErrorEvent {\n    constructor(public err: any) {}\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSubmitEvent {\n\n    private _values: any;\n    private _defaultPrevented: boolean = false;\n\n    get values(): any {\n        return this._values;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(_values: any) {\n        this._values = _values;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSuccessEvent {\n    constructor(\n        public token: any,\n        public username: string,\n        public password: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter,\n    Input, OnInit, Output, TemplateRef, ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LogService } from '../../services/log.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\nimport { LoginErrorEvent } from '../models/login-error.event';\nimport { LoginSubmitEvent } from '../models/login-submit.event';\nimport { LoginSuccessEvent } from '../models/login-success.event';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../../app-config/app-config.service';\nimport { OauthConfigModel } from '../../models/oauth-config.model';\n\nenum LoginSteps {\n    Landing = 0,\n    Checking = 1,\n    Welcome = 2\n}\n\ninterface ValidationMessage {\n    value: string;\n    params?: any;\n}\n\n@Component({\n    selector: 'adf-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-login'\n    }\n})\nexport class LoginComponent implements OnInit {\n    isPasswordShow: boolean = false;\n\n    /**\n     * Should the `Remember me` checkbox be shown? When selected, this\n     * option will remember the logged-in user after the browser is closed\n     * to avoid logging in repeatedly.\n     */\n    @Input()\n    showRememberMe: boolean = true;\n\n    /** Should the extra actions (`Need Help`, `Register`, etc) be shown? */\n    @Input()\n    showLoginActions: boolean = true;\n\n    /** Sets the URL of the NEED HELP link in the footer. */\n    @Input()\n    needHelpLink: string = '';\n\n    /** Sets the URL of the REGISTER link in the footer. */\n    @Input()\n    registerLink: string = '';\n\n    /** Path to a custom logo image. */\n    @Input()\n    logoImageUrl: string = './assets/images/alfresco-logo.svg';\n\n    /** Path to a custom background image. */\n    @Input()\n    backgroundImageUrl: string = './assets/images/background.svg';\n\n    /** The copyright text below the login box. */\n    @Input()\n    copyrightText: string = '\\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';\n\n    /** Custom validation rules for the login form. */\n    @Input()\n    fieldsValidation: any;\n\n    /** Route to redirect to on successful login. */\n    @Input()\n    successRoute: string = null;\n\n    /** Emitted when the login is successful. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    /** Emitted when the login fails. */\n    @Output()\n    error = new EventEmitter<LoginErrorEvent>();\n\n    /** Emitted when the login form is submitted. */\n    @Output()\n    executeSubmit = new EventEmitter<LoginSubmitEvent>();\n\n    implicitFlow: boolean = false;\n\n    form: FormGroup;\n    isError: boolean = false;\n    errorMsg: string;\n    actualLoginStep: any = LoginSteps.Landing;\n    LoginSteps: any = LoginSteps;\n    rememberMe: boolean = true;\n    formError: { [id: string]: string };\n    minLength: number = 2;\n    footerTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    data: any;\n\n    private _message: { [id: string]: { [id: string]: ValidationMessage } };\n\n    /**\n     * Constructor\n     * @param _fb\n     * @param authService\n     * @param translate\n     */\n    constructor(\n        private _fb: FormBuilder,\n        private authService: AuthenticationService,\n        private translateService: TranslationService,\n        private logService: LogService,\n        private router: Router,\n        private appConfig: AppConfigService,\n        private userPreferences: UserPreferencesService\n    ) {\n        this.initFormError();\n        this.initFormFieldsMessages();\n    }\n\n    ngOnInit() {\n        if (this.authService.isOauth()) {\n            let oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n            if (oauth && oauth.implicitFlow) {\n                this.implicitFlow = true;\n            }\n        }\n\n        if (this.hasCustomFieldsValidation()) {\n            this.form = this._fb.group(this.fieldsValidation);\n        } else {\n            this.initFormFieldsDefault();\n            this.initFormFieldsMessagesDefault();\n        }\n        this.form.valueChanges.subscribe((data) => this.onValueChanged(data));\n    }\n\n    submit() {\n        this.onSubmit(this.form.value);\n    }\n\n    /**\n     * Method called on submit form\n     * @param values\n     * @param event\n     */\n    onSubmit(values: any) {\n        this.disableError();\n        const args = new LoginSubmitEvent({\n            controls: { username: this.form.controls.username }\n        });\n        this.executeSubmit.emit(args);\n\n        if (args.defaultPrevented) {\n            return false;\n        } else {\n            this.performLogin(values);\n        }\n    }\n\n    implicitLogin() {\n        this.authService.ssoImplicitLogin();\n    }\n\n    /**\n     * The method check the error in the form and push the error in the formError object\n     * @param data\n     */\n    onValueChanged(data: any) {\n        this.disableError();\n        for (let field in this.formError) {\n            if (field) {\n                this.formError[field] = '';\n                let hasError =\n                    (this.form.controls[field].errors && data[field] !== '') ||\n                    (this.form.controls[field].dirty &&\n                        !this.form.controls[field].valid);\n                if (hasError) {\n                    for (let key in this.form.controls[field].errors) {\n                        if (key) {\n                            const message = this._message[field][key];\n                            if (message && message.value) {\n                                const translated = this.translateService.instant(message.value, message.params);\n                                this.formError[field] += translated;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private performLogin(values: any) {\n        this.actualLoginStep = LoginSteps.Checking;\n        this.authService\n            .login(values.username, values.password, this.rememberMe)\n            .subscribe(\n                (token: any) => {\n                    const redirectUrl = this.authService.getRedirect();\n\n                    this.actualLoginStep = LoginSteps.Welcome;\n                    this.userPreferences.setStoragePrefix(values.username);\n                    values.password = null;\n                    this.success.emit(\n                        new LoginSuccessEvent(token, values.username, null)\n                    );\n\n                    if (redirectUrl) {\n                        this.authService.setRedirect(null);\n                        this.router.navigateByUrl(redirectUrl);\n                    } else if (this.successRoute) {\n                        this.router.navigate([this.successRoute]);\n                    }\n                },\n                (err: any) => {\n                    this.actualLoginStep = LoginSteps.Landing;\n                    this.displayErrorMessage(err);\n                    this.isError = true;\n                    this.error.emit(new LoginErrorEvent(err));\n                },\n                () => this.logService.info('Login done')\n            );\n    }\n\n    /**\n     * Check and display the right error message in the UI\n     */\n    private displayErrorMessage(err: any): void {\n        if (\n            err.error &&\n            err.error.crossDomain &&\n            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1\n        ) {\n            this.errorMsg = err.error.message;\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('Invalid CSRF-token') !== -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('The system is currently in read-only mode') !==\n                -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';\n        } else {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';\n        }\n    }\n\n    /**\n     * Add a custom form error for a field\n     * @param field\n     * @param msg\n     */\n    public addCustomFormError(field: string, msg: string) {\n        this.formError[field] += msg;\n    }\n\n    /**\n     * Add a custom validation rule error for a field\n     * @param field\n     * @param ruleId - i.e. required | minlength | maxlength\n     * @param msg\n     */\n    addCustomValidationError(\n        field: string,\n        ruleId: string,\n        msg: string,\n        params?: any\n    ) {\n        this._message[field][ruleId] = {\n            value: msg,\n            params\n        };\n    }\n\n    /**\n     * Display and hide the password value.\n     */\n    toggleShowPassword() {\n        this.isPasswordShow = !this.isPasswordShow;\n    }\n\n    /**\n     * The method return if a field is valid or not\n     * @param field\n     */\n    isErrorStyle(field: AbstractControl) {\n        return !field.valid && field.dirty && !field.pristine;\n    }\n\n    /**\n     * Trim username\n     */\n    trimUsername(event: any) {\n        event.target.value = event.target.value.trim();\n    }\n\n    /**\n     * Default formError values\n     */\n    private initFormError() {\n        this.formError = {\n            username: '',\n            password: ''\n        };\n    }\n\n    /**\n     * Init form fields messages\n     */\n    private initFormFieldsMessages() {\n        this._message = {\n            username: {},\n            password: {}\n        };\n    }\n\n    /**\n     * Default form fields messages\n     */\n    private initFormFieldsMessagesDefault() {\n        this._message = {\n            username: {\n                required: {\n                   value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'\n                },\n                minLength: {\n                    value: 'LOGIN.MESSAGES.USERNAME-MIN',\n                    params: {\n                        get minLength() {\n                            return this.minLength;\n                        }\n                    }\n                }\n\n            },\n            password: {\n                required: {\n                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'\n                }\n            }\n        };\n    }\n\n    private initFormFieldsDefault() {\n        this.form = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Disable the error flag\n     */\n    private disableError() {\n        this.isError = false;\n        this.initFormError();\n    }\n\n    private hasCustomFieldsValidation(): boolean {\n        return this.fieldsValidation !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-header, login-header'\n})\nexport class LoginHeaderDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.headerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-footer, login-footer'\n})\nexport class LoginFooterDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.footerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginDialogComponentData } from './login-dialog-component-data.interface';\nimport { LoginDialogPanelComponent } from './login-dialog-panel.component';\n@Component({\n    selector: 'adf-login-dialog',\n    templateUrl: './login-dialog.component.html',\n    styleUrls: ['./login-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    buttonActionName = '';\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: LoginDialogComponentData) {\n        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';\n    }\n\n    close() {\n        this.data.logged.complete();\n    }\n\n    submitForm(): void {\n        this.loginPanel.submitForm();\n    }\n\n    onLoginSuccess(event: any) {\n        this.data.logged.next(event);\n        this.close();\n    }\n\n    isFormValid() {\n        return this.loginPanel ? this.loginPanel.isValid() : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { LoginSuccessEvent } from '../models/login-success.event';\n\n@Component({\n    selector: 'adf-login-dialog-panel',\n    templateUrl: './login-dialog-panel.component.html',\n    styleUrls: ['./login-dialog-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogPanelComponent {\n    /** Emitted when the login succeeds. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    @ViewChild('adfLogin')\n    login: LoginComponent;\n\n    submitForm(): void {\n        this.login.submit();\n    }\n\n    onLoginSuccess(event: LoginSuccessEvent) {\n        this.success.emit(event);\n    }\n\n    isValid() {\n        return this.login && this.login.form ? this.login.form.valid : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LoginComponent } from './components/login.component';\nimport { LoginFooterDirective } from './directives/login-footer.directive';\nimport { LoginHeaderDirective } from './directives/login-header.directive';\nimport { LoginDialogComponent } from './components/login-dialog.component';\nimport { LoginDialogPanelComponent } from './components/login-dialog-panel.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ],\n    entryComponents: [LoginDialogComponent, LoginDialogPanelComponent],\n    exports: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ]\n})\nexport class LoginModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserPreferencesService } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-language-menu',\n    templateUrl: 'language-menu.component.html'\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<any> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesConfigApp = this.appConfig.get<Array<any>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesConfigApp) {\n            this.languages = languagesConfigApp;\n        }\n    }\n\n    changeLanguage(lang: string) {\n        this.userPreference.locale = lang;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LanguageMenuComponent } from './language-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        LanguageMenuComponent\n    ],\n    exports: [\n        LanguageMenuComponent\n    ]\n})\nexport class LanguageMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    templateUrl: './info-drawer-layout.component.html',\n    styleUrls: ['./info-drawer-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-info-drawer-title], [info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[adf-info-drawer-buttons], [info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[adf-info-drawer-content], [info-drawer-content]' }) export class InfoDrawerContentDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    /** The title of the tab. */\n    @Input()\n    label: string = '';\n\n    /** Icon to render for the tab. */\n    @Input()\n    icon: string = null;\n\n    @ViewChild(TemplateRef)\n    content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    templateUrl: './info-drawer.component.html',\n    styleUrls: ['./info-drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    /** The title of the info drawer. */\n    @Input()\n    title: string|null = null;\n\n    /** The selected index tab. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Emitted when the currently active tab changes. */\n    @Output()\n    currentTab: EventEmitter<number> = new EventEmitter<number>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        this.currentTab.emit(event.index);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';\n\nexport function declarations() {\n    return [\n        InfoDrawerLayoutComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: declarations(),\n    exports: declarations()\n})\nexport class InfoDrawerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Input } from '@angular/core';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { DataColumnListComponent } from '../../data-column/data-column-list.component';\nimport { DataColumn } from './data-column.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\n\nexport abstract class DataTableSchema {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    /** Custom preset column schema in JSON format. */\n    @Input()\n    presetColumn: string;\n\n    columns: any;\n\n    private layoutPresets = {};\n\n    constructor(private appConfigService: AppConfigService,\n                protected presetKey: string,\n                protected presetsModel: any) { }\n\n    public createDatatableSchema(): void {\n        this.loadLayoutPresets();\n        if (!this.columns || this.columns.length === 0) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    public loadLayoutPresets(): void {\n        const externalSettings = this.appConfigService.get(this.presetKey, null);\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);\n        } else {\n            this.layoutPresets = this.presetsModel;\n        }\n    }\n\n    public mergeJsonAndHtmlSchema(): any {\n        let customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));\n        if (customSchemaColumns.length === 0) {\n            customSchemaColumns = this.getDefaultLayoutPreset();\n        }\n        return customSchemaColumns;\n    }\n\n    public getSchemaFromHtml(columnList: DataColumnListComponent): any {\n        let schema = [];\n        if (columnList && columnList.columns && columnList.columns.length > 0) {\n            schema = columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n   public getSchemaFromConfig(presetColumn: string): DataColumn[] {\n        return presetColumn ? (this.layoutPresets[presetColumn]).map((col) => new ObjectDataColumn(col)) : [];\n    }\n\n    private getDefaultLayoutPreset(): DataColumn[] {\n        return (this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    templateUrl: './card-view.component.html',\n    styleUrls: ['./card-view.component.scss']\n})\nexport class CardViewComponent {\n    /** (**required**) Items to show in the card view. */\n    @Input()\n    properties: CardViewItem [];\n\n    /** Toggles whether or not the items can be edited. */\n    @Input()\n    editable: boolean;\n\n    /** Toggles whether or not to show empty items in non-editable mode. */\n    @Input()\n    displayEmpty: boolean = true;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\nexport function transformKeyToObject(key: string, value): Object {\n    const objectLevels: string[] = key.split('.').reverse();\n\n    return objectLevels.reduce<{}>((previousValue, currentValue) => {\n        return { [currentValue]: previousValue};\n    }, value);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardViewUpdateService {\n\n    // Observable sources\n    private itemUpdatedSource = new Subject<UpdateNotification>();\n    private itemClickedSource = new Subject<ClickNotification>();\n\n    // Observable streams\n    public itemUpdated$ = <Observable<UpdateNotification>> this.itemUpdatedSource.asObservable();\n    public itemClicked$ = <Observable<ClickNotification>> this.itemClickedSource.asObservable();\n\n    update(property: CardViewBaseItemModel, newValue: any) {\n        this.itemUpdatedSource.next({\n            target: property,\n            changed: transformKeyToObject(property.key, newValue)\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClickedSource.next({\n            target: property\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { CardViewBoolItemModel } from '../../models/card-view-boolitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-boolitem.component.html',\n    styleUrls: ['./card-view-boolitem.component.scss']\n})\n\nexport class CardViewBoolItemComponent {\n\n    @Input()\n    property: CardViewBoolItemModel;\n\n    @Input()\n    editable: boolean;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    changed(change: MatCheckboxChange) {\n        this.cardViewUpdateService.update(this.property, change.checked );\n        this.property.value = change.checked;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MatDatetimepicker, DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../utils/moment-date-formats.model';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'adf-card-view-dateitem',\n    templateUrl: './card-view-dateitem.component.html',\n    styleUrls: ['./card-view-dateitem.component.scss']\n})\nexport class CardViewDateItemComponent implements OnInit {\n\n    public SHOW_FORMAT: string = 'MMM DD YY';\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('datetimePicker')\n    public datepicker: MatDatetimepicker<any>;\n\n    valueDate: Moment;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        (<MomentDateAdapter> this.dateAdapter).overrideDisplayFormat = this.SHOW_FORMAT;\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.SHOW_FORMAT);\n        }\n    }\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            let momentDate = moment(newDateValue.value, this.SHOW_FORMAT, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, momentDate.toDate());\n                this.property.value = momentDate.toDate();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    templateUrl: './card-view-mapitem.component.html',\n    styleUrls: ['./card-view-mapitem.component.scss']\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    templateUrl: './card-view-textitem.component.html',\n    styleUrls: ['./card-view-textitem.component.scss']\n})\nexport class CardViewTextItemComponent implements OnChanges {\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n    errorMessages: string[];\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {\n    }\n\n    ngOnChanges(): void {\n        this.editedValue = this.property.value;\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable(): boolean {\n        return this.property.clickable;\n    }\n\n    hasIcon(): boolean {\n        return !!this.property.icon;\n    }\n\n    hasErrors(): number {\n        return this.errorMessages && this.errorMessages.length;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            if (this.editorInput) {\n                this.editorInput.nativeElement.click();\n            }\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.value;\n        this.setEditMode(false);\n    }\n\n    update(): void {\n        if (this.property.isValid(this.editedValue)) {\n            this.cardViewUpdateService.update(this.property, this.editedValue);\n            this.property.value = this.editedValue;\n            this.setEditMode(false);\n        } else {\n            this.errorMessages = this.property.getValidationErrors(this.editedValue);\n        }\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-selectitem',\n    templateUrl: './card-view-selectitem.component.html',\n    styleUrls: ['./card-view-selectitem.component.scss']\n})\nexport class CardViewSelectItemComponent implements OnChanges {\n    @Input() property: CardViewSelectItemModel<string>;\n\n    @Input() editable: boolean = false;\n\n    @Input() options$: Observable<CardViewSelectItemOption<string>[]>;\n\n    value: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges(): void {\n        this.value = this.property.value;\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    getOptions(): Observable<CardViewSelectItemOption<string>[]> {\n        return this.options$ || this.property.options$;\n    }\n\n    onChange(event: MatSelectChange): void {\n        this.cardViewUpdateService.update(this.property, event.value);\n        this.property.value = event.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { CardViewKeyValuePairsItemModel } from '../../models/card-view.models';\nimport { CardViewKeyValuePairsItemType } from '../../interfaces/card-view.interfaces';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-keyvaluepairsitem.component.html',\n    styleUrls: ['./card-view-keyvaluepairsitem.component.scss']\n})\n\nexport class CardViewKeyValuePairsItemComponent implements OnChanges {\n\n    @Input()\n    property: CardViewKeyValuePairsItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    values: CardViewKeyValuePairsItemType[];\n    matTableValues: MatTableDataSource<CardViewKeyValuePairsItemType>;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.values = this.property.value || [];\n        this.matTableValues = new MatTableDataSource(this.values);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    add(): void {\n        this.values.push({ name: '', value: '' });\n    }\n\n    remove(index: number): void {\n        this.values.splice(index, 1);\n        this.save(true);\n    }\n\n    onBlur(value): void {\n        if (value.length) {\n            this.save();\n        }\n    }\n\n    save(remove?: boolean): void {\n        const validValues = this.values.filter((i) => i.name.length && i.value.length);\n\n        if (remove || validValues.length) {\n            this.cardViewUpdateService.update(this.property, validValues);\n            this.property.value = validValues;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getType(type: any): any {\n    return () => type;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Type } from '@angular/core';\nimport { getType } from './get-type';\n\nexport interface DynamicComponentModel { type: string; }\nexport type DynamicComponentResolveFunction = (model: DynamicComponentModel) => Type<{}>;\nexport class DynamicComponentResolver {\n    static fromType(type: Type<{}>): DynamicComponentResolveFunction {\n        return getType(type);\n    }\n}\n\nexport abstract class DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = undefined;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {};\n\n    /**\n     * Gets the currently active DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want\n     * @param defaultValue Default type returned for types that are not yet mapped\n     * @returns Resolver function\n     */\n    getComponentTypeResolver(type: string, defaultValue: Type<{}> = this.defaultValue): DynamicComponentResolveFunction {\n        if (type) {\n            return this.types[type] || DynamicComponentResolver.fromType(defaultValue);\n        }\n        return DynamicComponentResolver.fromType(defaultValue);\n    }\n\n    /**\n     * Sets or optionally replaces a DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want to set\n     * @param resolver The new resolver function\n     * @param override The new resolver will only replace an existing one if this parameter is true\n     */\n    setComponentTypeResolver(type: string, resolver: DynamicComponentResolveFunction, override: boolean = true) {\n        if (!type) {\n            throw new Error(`type is null or not defined`);\n        }\n\n        if (!resolver) {\n            throw new Error(`resolver is null or not defined`);\n        }\n\n        let existing = this.types[type];\n        if (existing && !override) {\n            throw new Error(`already mapped, use override option if you intend replacing existing mapping.`);\n        }\n\n        this.types[type] = resolver;\n    }\n\n    /**\n     * Finds the component type that is needed to render a form field.\n     * @param model Form field model for the field to render\n     * @param defaultValue Default type returned for field types that are not yet mapped.\n     * @returns Component type\n     */\n    resolveComponentType(model: DynamicComponentModel, defaultValue: Type<{}> = this.defaultValue): Type<{}> {\n        if (model) {\n            let resolver = this.getComponentTypeResolver(model.type, defaultValue);\n            return resolver(model);\n        }\n        return defaultValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';\nimport { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';\nimport { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardItemTypeService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = CardViewTextItemComponent;\n\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),\n        'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),\n        'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),\n        'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\nimport { CardItemTypeService } from '../../services/card-item-types.service';\nimport { CardViewContentProxyDirective } from '../../directives/card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private cardItemTypeService: CardItemTypeService,\n                private resolver: ComponentFactoryResolver) {\n        const dynamicLifeCycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifeCycleMethods.forEach((method) => {\n            this[method] = this.proxy.bind(this, method);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        Object.keys(changes)\n            .map((changeName) => [changeName, changes[changeName]])\n            .forEach(([inputParamName, simpleChange]: [string, SimpleChange]) => {\n                this.componentReference.instance[inputParamName] = simpleChange.currentValue;\n            });\n\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const factoryClass = this.cardItemTypeService.resolveComponentType(this.property);\n\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n        this.componentReference.instance.displayEmpty = this.displayEmpty;\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemIntValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.INT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemFloatValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.FLOAT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemProperties, CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: any;\n    editable: boolean;\n    clickable: boolean;\n    icon?: string;\n    validators?: CardViewItemValidator[];\n    data?: any;\n\n    constructor(cardViewItemProperties: CardViewItemProperties) {\n        this.label = cardViewItemProperties.label || '';\n        this.value = cardViewItemProperties.value;\n        this.key = cardViewItemProperties.key;\n        this.default = cardViewItemProperties.default;\n        this.editable = !!cardViewItemProperties.editable;\n        this.clickable = !!cardViewItemProperties.clickable;\n        this.icon = cardViewItemProperties.icon || '';\n        this.validators = cardViewItemProperties.validators || [];\n        this.data = cardViewItemProperties.data || null;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n\n    isValid(newValue: any): boolean {\n        if (!this.validators.length) {\n            return true;\n        }\n\n        return this.validators\n            .map((validator) => validator.isValid(newValue))\n            .reduce((isValidUntilNow, isValid) => isValidUntilNow && isValid, true);\n    }\n\n    getValidationErrors(value): string[] {\n        if (!this.validators.length) {\n            return [];\n        }\n\n        return this.validators.filter((validator) => !validator.isValid(value)).map((validator) => validator.message);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewBoolItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewBoolItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'bool';\n    value: boolean = false;\n    default: boolean;\n\n    constructor(cardViewBoolItemProperties: CardViewBoolItemProperties) {\n        super(cardViewBoolItemProperties);\n\n        if (cardViewBoolItemProperties.value !== undefined) {\n            this.value = !!JSON.parse(cardViewBoolItemProperties.value);\n        }\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.value;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewDateItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'date';\n    format: string = 'MMM DD YYYY';\n\n    constructor(cardViewDateItemProperties: CardViewDateItemProperties) {\n        super(cardViewDateItemProperties);\n\n        if (cardViewDateItemProperties.format) {\n            this.format = cardViewDateItemProperties.format;\n        }\n\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            return moment(this.value).format(this.format);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewDateItemModel } from './card-view-dateitem.model';\n\nexport class CardViewDatetimeItemModel extends CardViewDateItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'datetime';\n    format: string = 'MMM DD YYYY HH:mm';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewTextItemPipeProperty, CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'text';\n    multiline?: boolean;\n    pipes?: CardViewTextItemPipeProperty[];\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n        this.multiline = !!cardViewTextItemProperties.multiline ;\n        this.pipes = cardViewTextItemProperties.pipes || [];\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.applyPipes(this.value);\n        }\n    }\n\n    private applyPipes(displayValue) {\n        if (this.pipes.length) {\n            displayValue = this.pipes.reduce((accumulator, { pipe, params = [] }) => {\n                return pipe.transform(accumulator, ...params);\n            }, displayValue);\n        }\n\n        return displayValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemFloatValidator } from '..//validators/card-view.validators';\n\nexport class CardViewFloatItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'float';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemFloatValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseFloat(cardViewTextItemProperties.value);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemIntValidator } from '../validators/card-view.validators';\n\nexport class CardViewIntItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'int';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemIntValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseInt(cardViewTextItemProperties.value, 10);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewKeyValuePairsItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewKeyValuePairsItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'keyvaluepairs';\n\n    constructor(cardViewKeyValuePairsItemProperties: CardViewKeyValuePairsItemProperties) {\n        super(cardViewKeyValuePairsItemProperties);\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewSelectItemProperties, CardViewSelectItemOption } from '../interfaces/card-view.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport class CardViewSelectItemModel<T> extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'select';\n    options$: Observable<CardViewSelectItemOption<T>[]>;\n\n    constructor(cardViewSelectItemProperties: CardViewSelectItemProperties<T>) {\n        super(cardViewSelectItemProperties);\n\n        this.options$ = cardViewSelectItemProperties.options$;\n    }\n\n    get displayValue() {\n        return this.options$.pipe(\n            switchMap((options) => {\n                const option = options.find((o) => o.key === this.value);\n                return of(option ? option.label : '');\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatSelectModule\n} from '@angular/material';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CardViewContentProxyDirective } from './directives/card-view-content-proxy.directive';\nimport { CardViewComponent } from './components/card-view/card-view.component';\nimport { CardViewBoolItemComponent } from './components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewDateItemComponent } from './components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './components/card-view-item-dispatcher/card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './components/card-view-textitem/card-view-textitem.component';\nimport { CardViewKeyValuePairsItemComponent } from './components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { CardViewSelectItemComponent } from './components/card-view-selectitem/card-view-selectitem.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        TranslateModule.forChild(),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewKeyValuePairsItemComponent,\n        CardViewSelectItemComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective\n    ],\n    entryComponents: [\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ]\n})\nexport class CardViewModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from '../services/storage.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable()\nexport class DebugAppConfigService extends AppConfigService {\n    constructor(private storage: StorageService, http: HttpClient) {\n        super(http);\n    }\n\n    /** @override */\n    get<T>(key: string, defaultValue?: T): T {\n        if (key === AppConfigValues.OAUTHCONFIG) {\n            return <T> (JSON.parse(this.storage.getItem(key)) || super.get<T>(key, defaultValue));\n        } else {\n            return <T> (<any> this.storage.getItem(key) || super.get<T>(key, defaultValue));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\n\n@Pipe({\n    name: 'adfAppConfig'\n})\nexport class AppConfigPipe implements PipeTransform {\n    constructor(private config: AppConfigService) {}\n\n    transform(value: string, fallback: any): any {\n        return this.config.get(value, fallback);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppConfigPipe } from './app-config.pipe';\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    declarations: [\n        AppConfigPipe\n    ],\n    exports: [\n        AppConfigPipe\n    ]\n})\nexport class AppConfigModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\n\nexport class FormEvent {\n\n    private isDefaultPrevented: boolean = false;\n\n    readonly form: FormModel;\n\n    constructor(form: FormModel) {\n        this.form = form;\n    }\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormErrorEvent extends FormEvent {\n\n    readonly error: any;\n\n    constructor(form: FormModel, error: any) {\n        super(form);\n        this.error = error;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormFieldEvent extends FormEvent {\n\n    readonly field: FormFieldModel;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form);\n        this.field = field;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateFormFieldEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\nimport { FormFieldModel } from '../components/widgets/core/form-field.model';\n\nexport class ValidateFormEvent extends FormEvent {\n\n    isValid = true;\n    errorsField: FormFieldModel[] = [];\n\n    constructor(form: FormModel) {\n        super(form);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicRowValidationSummary } from '../components/widgets/dynamic-table/dynamic-row-validation-summary.model';\nimport { DynamicTableRow } from '../components/widgets/dynamic-table/dynamic-table-row.model';\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateDynamicTableRowEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel,\n                field: FormFieldModel,\n                public row: DynamicTableRow,\n                public summary: DynamicRowValidationSummary) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmModelService {\n\n    public static MODEL_NAMESPACE: string = 'activitiForms';\n    public static MODEL_NAME: string = 'activitiFormsModel';\n    public static TYPE_MODEL: string = 'cm:folder';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchActivitiEcmModel().subscribe(\n                (model) => {\n                    if (!model) {\n                        this.createActivitiEcmModel(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    } else {\n                        this.saveFomType(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n\n    }\n\n    searchActivitiEcmModel() {\n        return this.getEcmModels().pipe(map(function (ecmModels: any) {\n            return ecmModels.list.entries.find((model) => model.entry.name === EcmModelService.MODEL_NAME);\n        }));\n    }\n\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmModel(EcmModelService.MODEL_NAME, EcmModelService.MODEL_NAMESPACE).subscribe(\n                (model) => {\n                    this.logService.info('model created', model);\n                    this.activeEcmModel(EcmModelService.MODEL_NAME).subscribe(\n                        (modelActive) => {\n                            this.logService.info('model active', modelActive);\n                            this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                                observer.next(typeCreated);\n                                observer.complete();\n                            });\n                        },\n                        (err) => this.handleError(err)\n                    );\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    saveFomType(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                (ecmType) => {\n                    this.logService.info('custom types', ecmType);\n                    if (!ecmType) {\n                        this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                            observer.next(typeCreated);\n                            observer.complete();\n                        });\n                    } else {\n                        observer.next(ecmType);\n                        observer.complete();\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    public createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmType(formName, EcmModelService.MODEL_NAME, EcmModelService.TYPE_MODEL).subscribe(\n                (typeCreated) => {\n                    this.logService.info('type Created', typeCreated);\n                    this.addPropertyToAType(EcmModelService.MODEL_NAME, formName, form).subscribe(\n                        (propertyAdded) => {\n                            this.logService.info('property Added', propertyAdded);\n                            observer.next(typeCreated);\n                            observer.complete();\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    public searchEcmType(typeName: string, modelName: string): Observable<any> {\n        return this.getEcmType(modelName).pipe(map(function (customTypes: any) {\n            return customTypes.list.entries.find((type) => type.entry.prefixedName === typeName || type.entry.title === typeName);\n        }));\n    }\n\n    public activeEcmModel(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmModel(modelName: string, nameSpace: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmModels(): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomModel())\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmType(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmType(typeName: string, modelName: string, parentType: string): Observable<any> {\n        let name = this.cleanNameType(typeName);\n\n        return from(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, ''))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public addPropertyToAType(modelName: string, typeName: string, formFields: any) {\n        let name = this.cleanNameType(typeName);\n\n        let properties = [];\n        if (formFields && formFields.values) {\n            for (let key in formFields.values) {\n                if (key) {\n                    properties.push({\n                        name: key,\n                        title: key,\n                        description: key,\n                        dataType: 'd:text',\n                        multiValued: false,\n                        mandatory: false,\n                        mandatoryEnforced: false\n                    });\n                }\n            }\n        }\n\n        return from(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n\n    }\n\n    cleanNameType(name: string): string {\n        let cleanName = name;\n        if (name.indexOf(':') !== -1) {\n            cleanName = name.split(':')[1];\n        }\n        return cleanName.replace(/[^a-zA-Z ]/g, '');\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    handleError(err: any): any {\n        this.logService.error(err);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormSaveRepresentation } from '@alfresco/js-api';\n\nexport class FormDefinitionModel extends FormSaveRepresentation {\n    reusable: boolean = false;\n    newVersion: boolean = false;\n    formRepresentation: any;\n    formImageBase64: string = '';\n\n    constructor(id: string, name: any, lastUpdatedByFullName: string, lastUpdated: string, metadata: any) {\n        super();\n        this.formRepresentation = {\n            id: id,\n            name: name,\n            description: '',\n            version: 1,\n            lastUpdatedBy: 1,\n            lastUpdatedByFullName: lastUpdatedByFullName,\n            lastUpdated: lastUpdated,\n            stencilSetId: 0,\n            referenceId: null,\n            formDefinition: {\n                fields: [{\n                    name: 'Label',\n                    type: 'container',\n                    fieldType: 'ContainerRepresentation',\n                    numberOfColumns: 2,\n                    required: false,\n                    readOnly: false,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: -1,\n                    col: -1,\n                    fields: {'1': this.metadataToFields(metadata)}\n                }],\n                gridsterForm: false,\n                javascriptEvents: [],\n                metadata: {},\n                outcomes: [],\n                className: '',\n                style: '',\n                tabs: [],\n                variables: []\n            }\n        };\n    }\n\n    private metadataToFields(metadata: any): any[] {\n        let fields = [];\n        if (metadata) {\n            metadata.forEach(function(property) {\n                if (property) {\n                    let field = {\n                        type: 'text',\n                        id: property.name,\n                        name: property.name,\n                        required: false,\n                        readOnly: false,\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        colspan: 1,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        layout: {\n                            colspan: 1,\n                            row: -1,\n                            column: -1\n                        }\n                    };\n                    fields.push(field);\n                }\n            });\n        }\n\n        return fields;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nexport class FormFieldTypes {\n    static CONTAINER: string = 'container';\n    static GROUP: string = 'group';\n    static DYNAMIC_TABLE: string = 'dynamic-table';\n    static TEXT: string = 'text';\n    static MULTILINE_TEXT: string = 'multi-line-text';\n    static DROPDOWN: string = 'dropdown';\n    static HYPERLINK: string = 'hyperlink';\n    static RADIO_BUTTONS: string = 'radio-buttons';\n    static DISPLAY_VALUE: string = 'readonly';\n    static READONLY_TEXT: string = 'readonly-text';\n    static UPLOAD: string = 'upload';\n    static TYPEAHEAD: string = 'typeahead';\n    static FUNCTIONAL_GROUP: string = 'functional-group';\n    static PEOPLE: string = 'people';\n    static BOOLEAN: string = 'boolean';\n    static NUMBER: string = 'integer';\n    static DATE: string = 'date';\n    static AMOUNT: string = 'amount';\n    static DOCUMENT: string = 'document';\n    static DATETIME: string = 'datetime';\n    static ATTACH_FOLDER: string = 'select-folder';\n\n    static READONLY_TYPES: string[] = [\n        FormFieldTypes.HYPERLINK,\n        FormFieldTypes.DISPLAY_VALUE,\n        FormFieldTypes.READONLY_TEXT\n    ];\n\n    static isReadOnlyType(type: string) {\n        return FormFieldTypes.READONLY_TYPES.indexOf(type) > -1;\n    }\n\n    static isContainerType(type: string) {\n        return type === FormFieldTypes.CONTAINER || type === FormFieldTypes.GROUP;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormModel } from './form.model';\n\nexport abstract class FormWidgetModel {\n\n    readonly fieldType: string;\n    readonly id: string;\n    readonly name: string;\n    readonly type: string;\n    readonly tab: string;\n\n    readonly form: FormModel;\n    readonly json: any;\n\n    constructor(form: FormModel, json: any) {\n        this.form = form;\n        this.json = json;\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this.tab = json.tab;\n        }\n    }\n}\n\nexport interface FormWidgetModelCache<T extends FormWidgetModel> {\n    [key: string]: T;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\n\nexport class ContainerColumnModel {\n\n    size: number = 12;\n    fields: FormFieldModel[] = [];\n    colspan: number = 1;\n    rowspan: number = 1;\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nexport class ErrorMessageModel {\n\n    message: string = '';\n    attributes: Map<string, string> = null;\n\n    constructor(obj?: any) {\n        this.message = obj && obj.message ? obj.message : '';\n        this.attributes = new Map();\n    }\n\n    isActive() {\n        return this.message ? true : false;\n    }\n\n    getAttributesAsJsonObj() {\n        let result = {};\n        if (this.attributes.size > 0) {\n            let obj = Object.create(null);\n            this.attributes.forEach((value, key) => {\n                obj[key] = value;\n            });\n            result = JSON.stringify(obj);\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\n\nexport interface FormFieldValidator {\n\n    isSupported(field: FormFieldModel): boolean;\n    validate(field: FormFieldModel): boolean;\n\n}\n\nexport class RequiredFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT,\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.BOOLEAN,\n        FormFieldTypes.TYPEAHEAD,\n        FormFieldTypes.DROPDOWN,\n        FormFieldTypes.PEOPLE,\n        FormFieldTypes.FUNCTIONAL_GROUP,\n        FormFieldTypes.RADIO_BUTTONS,\n        FormFieldTypes.UPLOAD,\n        FormFieldTypes.AMOUNT,\n        FormFieldTypes.DYNAMIC_TABLE,\n        FormFieldTypes.DATE,\n        FormFieldTypes.DATETIME,\n        FormFieldTypes.ATTACH_FOLDER\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.required;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n\n            if (field.type === FormFieldTypes.DROPDOWN) {\n                if (field.hasEmptyValue && field.emptyOption) {\n                    if (field.value === field.emptyOption.id) {\n                        return false;\n                    }\n                }\n            }\n\n            if (field.type === FormFieldTypes.RADIO_BUTTONS) {\n                let option = field.options.find((opt) => opt.id === field.value);\n                return !!option;\n            }\n\n            if (field.type === FormFieldTypes.UPLOAD) {\n                return field.value && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.DYNAMIC_TABLE) {\n                return field.value && field.value instanceof Array && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.BOOLEAN) {\n                return field.value ? true : false;\n            }\n\n            if (field.value === null || field.value === undefined || field.value === '') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nexport class NumberFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    static isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (field.value === null ||\n                field.value === undefined ||\n                field.value === '') {\n                return true;\n            }\n            let valueStr = '' + field.value;\n            let pattern = new RegExp(/^-?\\d+$/);\n            if (field.enableFractions) {\n                pattern = new RegExp(/^-?[0-9]+(\\.[0-9]{1,2})?$/);\n            }\n            if (valueStr.match(pattern)) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_NUMBER';\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class DateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    // Validates that the input string is a valid date formatted as <dateFormat> (default D-M-YYYY)\n    static isValidDate(inputDate: string, dateFormat: string = 'D-M-YYYY'): boolean {\n        if (inputDate) {\n            let d = moment(inputDate, dateFormat, true);\n            return d.isValid();\n        }\n\n        return false;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (DateFieldValidator.isValidDate(field.value, field.dateDisplayFormat)) {\n                return true;\n            }\n            field.validationSummary.message = field.dateDisplayFormat;\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinDateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDate(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDate(field: FormFieldModel, dateFormat: string): boolean {\n        const MIN_DATE_FORMAT = 'DD-MM-YYYY';\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n        let min = moment(field.minValue, MIN_DATE_FORMAT);\n\n        if (fieldValueData.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateFieldValidator implements FormFieldValidator {\n\n    MAX_DATE_FORMAT = 'DD-MM-YYYY';\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                return false;\n            }\n\n            // remove time and timezone info\n            let d;\n            if (typeof field.value === 'string') {\n                d = moment(field.value.split('T')[0], dateFormat);\n            } else {\n                d = field.value;\n            }\n            let max = moment(field.maxValue, this.MAX_DATE_FORMAT);\n\n            if (d.isAfter(max)) {\n                field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n                field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).toLocaleUpperCase());\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport class MinDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MIN_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        let min = moment(field.minValue, this.MIN_DATETIME_FORMAT);\n\n        if (fieldValueDate.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MAX_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        let max = moment(field.maxValue, this.MAX_DATETIME_FORMAT);\n\n        if (fieldValueDate.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MinLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.minLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length >= field.minLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.AT_LEAST_LONG`;\n            field.validationSummary.attributes.set('minLength', field.minLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MaxLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.maxLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length <= field.maxLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NO_LONGER_THAN`;\n            field.validationSummary.attributes.set('maxLength', field.maxLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.minValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            let value: number = +field.value;\n            let minValue: number = +field.minValue;\n\n            if (value >= minValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', field.minValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class MaxValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.maxValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            let value: number = +field.value;\n            let maxValue: number = +field.maxValue;\n\n            if (value <= maxValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', field.maxValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class RegExFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport class FixedValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TYPEAHEAD\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    hasValidNameOrValidId(field: FormFieldModel): boolean {\n        return this.hasValidName(field) || this.hasValidId(field);\n    }\n\n    hasValidName(field: FormFieldModel) {\n        return field.options.find((item) => item.name && item.name.toLocaleLowerCase() === field.value.toLocaleLowerCase()) ? true : false;\n    }\n\n    hasValidId(field: FormFieldModel) {\n        return field.options[field.value - 1] ? true : false;\n    }\n\n    hasStringValue(field: FormFieldModel) {\n        return field.value && typeof field.value === 'string';\n    }\n\n    hasOptions(field: FormFieldModel) {\n        return field.options && field.options.length > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (this.hasStringValue(field) && this.hasOptions(field) && !this.hasValidNameOrValidId(field)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport const FORM_FIELD_VALIDATORS = [\n    new RequiredFieldValidator(),\n    new NumberFieldValidator(),\n    new MinLengthFieldValidator(),\n    new MaxLengthFieldValidator(),\n    new MinValueFieldValidator(),\n    new MaxValueFieldValidator(),\n    new RegExFieldValidator(),\n    new DateFieldValidator(),\n    new MinDateFieldValidator(),\n    new MaxDateFieldValidator(),\n    new FixedValueFieldValidator(),\n    new MinDateTimeFieldValidator(),\n    new MaxDateTimeFieldValidator()\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\nimport moment from 'moment-es6';\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { ContainerColumnModel } from './container-column.model';\nimport { ErrorMessageModel } from './error-message.model';\nimport { FormFieldMetadata } from './form-field-metadata';\nimport { FormFieldOption } from './form-field-option';\nimport { FormFieldTypes } from './form-field-types';\nimport { NumberFieldValidator } from './form-field-validator';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\n// Maps to FormFieldRepresentation\nexport class FormFieldModel extends FormWidgetModel {\n\n    private _value: string;\n    private _readOnly: boolean = false;\n    private _isValid: boolean = true;\n    private _required: boolean = false;\n\n    readonly defaultDateFormat: string = 'D-M-YYYY';\n    readonly defaultDateTimeFormat: string = 'D-M-YYYY hh:mm A';\n\n    // model members\n    fieldType: string;\n    id: string;\n    name: string;\n    type: string;\n    overrideId: boolean;\n    tab: string;\n    rowspan: number = 1;\n    colspan: number = 1;\n    placeholder: string = null;\n    minLength: number = 0;\n    maxLength: number = 0;\n    minValue: string;\n    maxValue: string;\n    regexPattern: string;\n    options: FormFieldOption[] = [];\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n    hasEmptyValue: boolean;\n    className: string;\n    optionType: string;\n    params: FormFieldMetadata = {};\n    hyperlinkUrl: string;\n    displayText: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel = null;\n    enableFractions: boolean = false;\n    currency: string = null;\n    dateDisplayFormat: string = this.dateDisplayFormat || this.defaultDateFormat;\n\n    // container model members\n    numberOfColumns: number = 1;\n    fields: FormFieldModel[] = [];\n    columns: ContainerColumnModel[] = [];\n\n    // util members\n    emptyOption: FormFieldOption;\n    validationSummary: ErrorMessageModel;\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(v: any) {\n        this._value = v;\n        this.updateForm();\n    }\n\n    get readOnly(): boolean {\n        if (this.form && this.form.readOnly) {\n            return true;\n        }\n        return this._readOnly;\n    }\n\n    set readOnly(readOnly: boolean) {\n        this._readOnly = readOnly;\n        this.updateForm();\n    }\n\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = value;\n        this.updateForm();\n    }\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    validate(): boolean {\n        this.validationSummary = new ErrorMessageModel();\n\n        if (!this.readOnly) {\n            let validators = this.form.fieldValidators || [];\n            for (let validator of validators) {\n                if (!validator.validate(this)) {\n                    this._isValid = false;\n                    return this._isValid;\n                }\n            }\n        }\n\n        this._isValid = true;\n        return this._isValid;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this._required = <boolean> json.required;\n            this._readOnly = <boolean> json.readOnly || json.type === 'readonly';\n            this.overrideId = <boolean> json.overrideId;\n            this.tab = json.tab;\n            this.restUrl = json.restUrl;\n            this.restResponsePath = json.restResponsePath;\n            this.restIdProperty = json.restIdProperty;\n            this.restLabelProperty = json.restLabelProperty;\n            this.colspan = <number> json.colspan;\n            this.minLength = <number> json.minLength || 0;\n            this.maxLength = <number> json.maxLength || 0;\n            this.minValue = json.minValue;\n            this.maxValue = json.maxValue;\n            this.regexPattern = json.regexPattern;\n            this.options = <FormFieldOption[]> json.options || [];\n            this.hasEmptyValue = <boolean> json.hasEmptyValue;\n            this.className = json.className;\n            this.optionType = json.optionType;\n            this.params = <FormFieldMetadata> json.params || {};\n            this.hyperlinkUrl = json.hyperlinkUrl;\n            this.displayText = json.displayText;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n            this.enableFractions = <boolean> json.enableFractions;\n            this.currency = json.currency;\n            this.dateDisplayFormat = json.dateDisplayFormat || this.getDefaultDateFormat(json);\n            this._value = this.parseValue(json);\n            this.validationSummary = new ErrorMessageModel();\n\n            if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {\n                this.placeholder = json.placeholder;\n            }\n\n            if (FormFieldTypes.isReadOnlyType(json.type)) {\n                if (json.params && json.params.field) {\n                    if (form.processVariables) {\n                        const processVariable = this.getProcessVariableValue(json.params.field, form);\n                        if (processVariable) {\n                            this.value = processVariable;\n                        }\n                    } else if (json.params.field.responseVariable) {\n                        const formVariable = this.getVariablesValue(json.params.field.name, form);\n                        if (formVariable) {\n                            this.value = formVariable;\n                        }\n                    }\n                }\n            }\n\n            if (FormFieldTypes.isContainerType(json.type)) {\n                this.containerFactory(json, form);\n            }\n        }\n\n        if (this.hasEmptyValue && this.options && this.options.length > 0) {\n            this.emptyOption = this.options[0];\n        }\n\n        this.updateForm();\n    }\n\n    private getDefaultDateFormat(jsonField: any): string {\n        let originalType = jsonField.type;\n        if (FormFieldTypes.isReadOnlyType(jsonField.type) &&\n            jsonField.params &&\n            jsonField.params.field) {\n            originalType = jsonField.params.field.type;\n        }\n        return originalType === FormFieldTypes.DATETIME ? this.defaultDateTimeFormat : this.defaultDateFormat;\n    }\n\n    private isTypeaheadFieldType(type: string): boolean {\n        return type === 'typeahead' ? true : false;\n    }\n\n    private getFieldNameWithLabel(name: string): string {\n        return name += '_LABEL';\n    }\n\n    private getProcessVariableValue(field: any, form: FormModel) {\n        let fieldName = field.name;\n        if (this.isTypeaheadFieldType(field.type)) {\n            fieldName = this.getFieldNameWithLabel(field.id);\n        }\n        return this.findProcessVariableValue(fieldName, form);\n    }\n\n    private getVariablesValue(variableName: string, form: FormModel) {\n        let variable = form.json.variables.find((currentVariable) => {\n            return currentVariable.name === variableName;\n        });\n\n        if (variable) {\n            if (variable.type === 'boolean') {\n                return JSON.parse(variable.value);\n            }\n\n            return variable.value;\n        }\n\n        return null;\n    }\n\n    private findProcessVariableValue(variableName: string, form: FormModel) {\n        if (form.processVariables) {\n            const variable = form.processVariables.find((currentVariable) => {\n                return currentVariable.name === variableName;\n            });\n\n            if (variable) {\n                return variable.type === 'boolean' ? JSON.parse(variable.value) : variable.value;\n            }\n        }\n\n        return undefined;\n    }\n\n    private containerFactory(json: any, form: FormModel): void {\n        this.numberOfColumns = <number> json.numberOfColumns || 1;\n\n        this.fields = json.fields;\n\n        this.rowspan = 1;\n        this.colspan = 1;\n\n        if (json.fields) {\n            for (let currentField in json.fields) {\n                if (json.fields.hasOwnProperty(currentField)) {\n                    let col = new ContainerColumnModel();\n\n                    let fields: FormFieldModel[] = (json.fields[currentField] || []).map((f) => new FormFieldModel(form, f));\n                    col.fields = fields;\n                    col.rowspan = json.fields[currentField].length;\n\n                    col.fields.forEach((colFields: any) => {\n                        this.colspan = colFields.colspan > this.colspan ? colFields.colspan : this.colspan;\n                    });\n\n                    this.rowspan = this.rowspan < col.rowspan ? col.rowspan : this.rowspan;\n                    this.columns.push(col);\n                }\n            }\n        }\n    }\n\n    parseValue(json: any): any {\n        let value = json.value;\n\n        /*\n         This is needed due to Activiti issue related to reading dropdown values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.DROPDOWN) {\n            if (json.hasEmptyValue && json.options) {\n                let options = <FormFieldOption[]> json.options || [];\n                if (options.length > 0) {\n                    let emptyOption = json.options[0];\n                    if (value === '' || value === emptyOption.id || value === emptyOption.name) {\n                        value = emptyOption.id;\n                    } else if (value.id && value.name) {\n                        value = value.id;\n                    }\n                }\n            }\n        }\n\n        /*\n         This is needed due to Activiti issue related to reading radio button values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.RADIO_BUTTONS) {\n            // Activiti has a bug with default radio button value where initial selection passed as `name` value\n            // so try resolving current one with a fallback to first entry via name or id\n            // TODO: needs to be reported and fixed at Activiti side\n            let entry: FormFieldOption[] = this.options.filter((opt) =>\n                opt.id === value || opt.name === value || (value && (opt.id === value.id || opt.name === value.name)));\n            if (entry.length > 0) {\n                value = entry[0].id;\n            }\n        }\n\n        /*\n         This is needed due to Activiti displaying/editing dates in d-M-YYYY format\n         but storing on server in ISO8601 format (i.e. 2013-02-04T22:44:30.652Z)\n         */\n        if (this.isDateField(json) || this.isDateTimeField(json)) {\n            if (value) {\n                let dateValue;\n                if (NumberFieldValidator.isNumber(value)) {\n                    dateValue = moment(value);\n                } else {\n                    dateValue = this.isDateTimeField(json) ? moment(value, 'YYYY-MM-DD hh:mm A') : moment(value.split('T')[0], 'YYYY-M-D');\n                }\n                if (dateValue && dateValue.isValid()) {\n                    value = dateValue.format(this.dateDisplayFormat);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    updateForm() {\n        if (!this.form) {\n            return;\n        }\n\n        switch (this.type) {\n            case FormFieldTypes.DROPDOWN:\n                /*\n                 This is needed due to Activiti reading dropdown values as string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                if (this.value === 'empty' || this.value === '') {\n                    this.form.values[this.id] = {};\n                } else {\n                    let entry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                    if (entry.length > 0) {\n                        this.form.values[this.id] = entry[0];\n                    }\n                }\n                break;\n            case FormFieldTypes.RADIO_BUTTONS:\n                /*\n                 This is needed due to Activiti issue related to reading radio button values as value string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                let rbEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                if (rbEntry.length > 0) {\n                    this.form.values[this.id] = rbEntry[0];\n                }\n                break;\n            case FormFieldTypes.UPLOAD:\n                if (this.value && this.value.length > 0) {\n                    this.form.values[this.id] = this.value.map((elem) => elem.id).join(',');\n                } else {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.TYPEAHEAD:\n                let taEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value || opt.name === this.value);\n                if (taEntry.length > 0) {\n                    this.form.values[this.id] = taEntry[0];\n                } else if (this.options.length > 0) {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.DATE:\n                let dateValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateValue && dateValue.isValid()) {\n                    this.form.values[this.id] = `${dateValue.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.DATETIME:\n                const dateTimeValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateTimeValue && dateTimeValue.isValid()) {\n                    /* cspell:disable-next-line */\n                    this.form.values[this.id] = dateTimeValue.format('YYYY-MM-DDTHH:mm:ssZ');\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.NUMBER:\n                this.form.values[this.id] = parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.AMOUNT:\n                this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);\n                break;\n            default:\n                if (!FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {\n                    this.form.values[this.id] = this.value;\n                }\n        }\n\n        this.form.onFormFieldChanged(this);\n    }\n\n    /**\n     * Skip the invalid field type\n     * @param type\n     */\n    isInvalidFieldType(type: string) {\n        if (type === 'container') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getOptionName(): string {\n        let option: FormFieldOption = this.options.find((opt) => opt.id === this.value);\n        return option ? option.name : null;\n    }\n\n    hasOptions() {\n        return this.options && this.options.length > 0;\n    }\n\n    private isDateField(json: any) {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATE ) ||\n                json.type === FormFieldTypes.DATE;\n    }\n\n    private isDateTimeField(json: any): boolean {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATETIME) ||\n                json.type === FormFieldTypes.DATETIME;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\nimport { FormWidgetModel } from './form-widget.model';\n\nexport class ContainerModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n\n    get isVisible(): boolean {\n        return this.field.isVisible;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field.form, field.json);\n\n        if (field) {\n            this.field = field;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class FormOutcomeModel extends FormWidgetModel {\n\n    static SAVE_ACTION: string = 'SAVE';            // Activiti 'Save' action name\n    static COMPLETE_ACTION: string = 'COMPLETE';    // Activiti 'Complete' action name\n    static START_PROCESS_ACTION: string = 'START PROCESS';    // Activiti 'Start Process' action name\n\n    isSystem: boolean = false;\n    isSelected: boolean = false;\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.isSystem = json.isSystem ? true : false;\n            this.isSelected = form && json.name === form.selectedOutcome ? true : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class TabModel extends FormWidgetModel {\n\n    title: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel;\n\n    fields: FormWidgetModel[] = [];\n\n    hasContent(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.title = json.title;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldEvent } from './../../../events/form-field.event';\nimport { ValidateFormFieldEvent } from './../../../events/validate-form-field.event';\nimport { ValidateFormEvent } from './../../../events/validate-form.event';\nimport { FormService } from './../../../services/form.service';\nimport { ContainerModel } from './container.model';\nimport { FormFieldTemplates } from './form-field-templates';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\nimport { FormOutcomeModel } from './form-outcome.model';\nimport { FormValues } from './form-values';\nimport { FormWidgetModel, FormWidgetModelCache } from './form-widget.model';\nimport { TabModel } from './tab.model';\n\nimport {\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator\n} from './form-field-validator';\n\nexport class FormModel {\n\n    static UNSET_TASK_NAME: string = 'Nameless task';\n    static SAVE_OUTCOME: string = '$save';\n    static COMPLETE_OUTCOME: string = '$complete';\n    static START_PROCESS_OUTCOME: string = '$startProcess';\n\n    readonly id: number;\n    readonly name: string;\n    readonly taskId: string;\n    readonly taskName: string = FormModel.UNSET_TASK_NAME;\n    processDefinitionId: string;\n    private _isValid: boolean = true;\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    className: string;\n    readOnly: boolean = false;\n    tabs: TabModel[] = [];\n    /** Stores root containers */\n    fields: FormWidgetModel[] = [];\n    outcomes: FormOutcomeModel[] = [];\n    customFieldTemplates: FormFieldTemplates = {};\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n    readonly selectedOutcome: string;\n\n    values: FormValues = {};\n    processVariables: any;\n\n    readonly json: any;\n\n    hasTabs(): boolean {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    hasOutcomes(): boolean {\n        return this.outcomes && this.outcomes.length > 0;\n    }\n\n    constructor(json?: any, formValues?: FormValues, readOnly: boolean = false, protected formService?: FormService) {\n        this.readOnly = readOnly;\n\n        if (json) {\n            this.json = json;\n\n            this.id = json.id;\n            this.name = json.name;\n            this.taskId = json.taskId;\n            this.taskName = json.taskName || json.name || FormModel.UNSET_TASK_NAME;\n            this.processDefinitionId = json.processDefinitionId;\n            this.customFieldTemplates = json.customFieldTemplates || {};\n            this.selectedOutcome = json.selectedOutcome || {};\n            this.className = json.className || '';\n\n            let tabCache: FormWidgetModelCache<TabModel> = {};\n\n            this.processVariables = json.processVariables;\n\n            this.tabs = (json.tabs || []).map((t) => {\n                let model = new TabModel(this, t);\n                tabCache[model.id] = model;\n                return model;\n            });\n\n            this.fields = this.parseRootFields(json);\n\n            if (formValues) {\n                this.loadData(formValues);\n            }\n\n            for (let i = 0; i < this.fields.length; i++) {\n                let field = this.fields[i];\n                if (field.tab) {\n                    let tab = tabCache[field.tab];\n                    if (tab) {\n                        tab.fields.push(field);\n                    }\n                }\n            }\n\n            if (json.fields) {\n                let saveOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.SAVE_OUTCOME,\n                    name: 'SAVE',\n                    isSystem: true\n                });\n                let completeOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.COMPLETE_OUTCOME,\n                    name: 'COMPLETE',\n                    isSystem: true\n                });\n                let startProcessOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.START_PROCESS_OUTCOME,\n                    name: 'START PROCESS',\n                    isSystem: true\n                });\n\n                let customOutcomes = (json.outcomes || []).map((obj) => new FormOutcomeModel(this, obj));\n\n                this.outcomes = [saveOutcome].concat(\n                    customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]\n                );\n            }\n        }\n\n        this.validateForm();\n    }\n\n    onFormFieldChanged(field: FormFieldModel) {\n        this.validateField(field);\n        if (this.formService) {\n            this.formService.formFieldValueChanged.next(new FormFieldEvent(this, field));\n        }\n    }\n\n    getFieldById(fieldId: string): FormFieldModel {\n        return this.getFormFields().find((field) => field.id === fieldId);\n    }\n\n    // TODO: consider evaluating and caching once the form is loaded\n    getFormFields(): FormFieldModel[] {\n        let formFieldModel: FormFieldModel[] = [];\n\n        for (let i = 0; i < this.fields.length; i++) {\n            let field = this.fields[i];\n\n            if (field instanceof ContainerModel) {\n                let container = <ContainerModel> field;\n                formFieldModel.push(container.field);\n\n                container.field.columns.forEach((column) => {\n                    formFieldModel.push(...column.fields);\n                });\n            }\n        }\n\n        return formFieldModel;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    /**\n     * Validates entire form and all form fields.\n     *\n     * @memberof FormModel\n     */\n    validateForm(): void {\n        const validateFormEvent: any = new ValidateFormEvent(this);\n\n        let errorsField: FormFieldModel[] = [];\n\n        let fields = this.getFormFields();\n        for (let i = 0; i < fields.length; i++) {\n            if (!fields[i].validate()) {\n                errorsField.push(fields[i]);\n            }\n        }\n\n        this._isValid = errorsField.length > 0 ? false : true;\n\n        if (this.formService) {\n            validateFormEvent.isValid = this._isValid;\n            validateFormEvent.errorsField = errorsField;\n            this.formService.validateForm.next(validateFormEvent);\n        }\n\n    }\n\n    /**\n     * Validates a specific form field, triggers form validation.\n     *\n     * @param field Form field to validate.\n     * @memberof FormModel\n     */\n    validateField(field: FormFieldModel): void {\n        if (!field) {\n            return;\n        }\n\n        const validateFieldEvent = new ValidateFormFieldEvent(this, field);\n\n        if (this.formService) {\n            this.formService.validateFormField.next(validateFieldEvent);\n        }\n\n        if (!validateFieldEvent.isValid) {\n            this._isValid = false;\n            return;\n        }\n\n        if (validateFieldEvent.defaultPrevented) {\n            return;\n        }\n\n        if (!field.validate()) {\n            this._isValid = false;\n        }\n\n        this.validateForm();\n    }\n\n    // Activiti supports 3 types of root fields: container|group|dynamic-table\n    private parseRootFields(json: any): FormWidgetModel[] {\n        let fields = [];\n\n        if (json.fields) {\n            fields = json.fields;\n        } else if (json.formDefinition && json.formDefinition.fields) {\n            fields = json.formDefinition.fields;\n        }\n\n        let formWidgetModel: FormWidgetModel[] = [];\n\n        for (let field of fields) {\n            if (field.type === FormFieldTypes.DISPLAY_VALUE) {\n                // workaround for dynamic table on a completed/readonly form\n                if (field.params) {\n                    let originalField = field.params['field'];\n                    if (originalField.type === FormFieldTypes.DYNAMIC_TABLE) {\n                        formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n                    }\n                }\n            } else {\n                formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n            }\n        }\n\n        return formWidgetModel;\n    }\n\n    // Loads external data and overrides field values\n    // Typically used when form definition and form data coming from different sources\n    private loadData(formValues: FormValues) {\n        for (let field of this.getFormFields()) {\n            if (formValues[field.id]) {\n                field.json.value = formValues[field.id];\n                field.value = field.parseValue(field.json);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormOutcomeModel } from './form-outcome.model';\n\nexport class FormOutcomeEvent {\n\n    private _outcome: FormOutcomeModel;\n    private _defaultPrevented: boolean = false;\n\n    get outcome(): FormOutcomeModel {\n        return this._outcome;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(outcome: FormOutcomeModel) {\n        this._outcome = outcome;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n import { RelatedContentRepresentation } from '@alfresco/js-api';\n\n export class ContentLinkModel implements RelatedContentRepresentation {\n\n    contentAvailable: boolean;\n    created: Date;\n    createdBy: any;\n    id: number;\n    link: boolean;\n    mimeType: string;\n    name: string;\n    previewStatus: string;\n    relatedContent: boolean;\n    simpleType: string;\n    thumbnailUrl: string;\n    contentRawUrl: string;\n    contentBlob: Blob;\n    thumbnailStatus: string;\n\n    constructor(obj?: any) {\n        this.contentAvailable = obj && obj.contentAvailable;\n        this.created = obj && obj.created;\n        this.createdBy = obj && obj.createdBy || {};\n        this.id = obj && obj.id;\n        this.link = obj && obj.link;\n        this.mimeType = obj && obj.mimeType;\n        this.name = obj && obj.name;\n        this.previewStatus = obj && obj.previewStatus;\n        this.relatedContent = obj && obj.relatedContent;\n        this.simpleType = obj && obj.simpleType;\n        this.thumbnailStatus = obj && obj.thumbnailStatus;\n    }\n\n    hasPreviewStatus(): boolean {\n        return this.previewStatus === 'supported' ? true : false;\n    }\n\n    isTypeImage(): boolean {\n        return this.simpleType === 'image' ? true : false;\n    }\n\n    isTypePdf(): boolean {\n        return this.simpleType === 'pdf' ? true : false;\n    }\n\n    isTypeDoc(): boolean {\n        return this.simpleType === 'word' || this.simpleType === 'content' ? true : false;\n    }\n\n    isThumbnailReady(): boolean {\n        return this.thumbnailStatus === 'created';\n    }\n\n    isThumbnailSupported(): boolean {\n        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { UserProcessModel } from '../../models';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, of, throwError } from 'rxjs';\nimport { FormDefinitionModel } from '../models/form-definition.model';\nimport { ContentLinkModel } from './../components/widgets/core/content-link.model';\nimport { GroupModel } from './../components/widgets/core/group.model';\nimport { FormModel, FormOutcomeEvent, FormOutcomeModel, FormValues } from './../components/widgets/core/index';\nimport {\n    FormErrorEvent, FormEvent, FormFieldEvent,\n    ValidateDynamicTableRowEvent, ValidateFormEvent, ValidateFormFieldEvent\n} from './../events/index';\nimport { EcmModelService } from './ecm-model.service';\nimport { map, catchError, switchMap, combineAll, defaultIfEmpty } from 'rxjs/operators';\nimport {\n    Activiti,\n    CompleteFormRepresentation,\n    SaveFormRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    formLoaded = new Subject<FormEvent>();\n    formDataRefreshed = new Subject<FormEvent>();\n    formFieldValueChanged = new Subject<FormFieldEvent>();\n    formEvents = new Subject<Event>();\n    taskCompleted = new Subject<FormEvent>();\n    taskCompletedError = new Subject<FormErrorEvent>();\n    taskSaved = new Subject<FormEvent>();\n    taskSavedError = new Subject<FormErrorEvent>();\n    formContentClicked = new Subject<ContentLinkModel>();\n\n    validateForm = new Subject<ValidateFormEvent>();\n    validateFormField = new Subject<ValidateFormFieldEvent>();\n    validateDynamicTableRow = new Subject<ValidateDynamicTableRowEvent>();\n\n    executeOutcome = new Subject<FormOutcomeEvent>();\n\n    constructor(private ecmModelService: EcmModelService,\n                private apiService: AlfrescoApiService,\n                protected logService: LogService) {\n    }\n\n    private get taskApi(): Activiti.TaskApi {\n        return this.apiService.getInstance().activiti.taskApi;\n    }\n\n    private get modelsApi(): Activiti.ModelsApi {\n        return this.apiService.getInstance().activiti.modelsApi;\n    }\n\n    private get editorApi(): Activiti.EditorApi {\n        return this.apiService.getInstance().activiti.editorApi;\n    }\n\n    private get processApi(): Activiti.ProcessApi {\n        return this.apiService.getInstance().activiti.processApi;\n    }\n\n    private get processInstanceVariablesApi(): Activiti.ProcessInstanceVariablesApi {\n        return this.apiService.getInstance().activiti.processInstanceVariablesApi;\n    }\n\n    private get usersWorkflowApi(): Activiti.UsersWorkflowApi {\n        return this.apiService.getInstance().activiti.usersWorkflowApi;\n    }\n\n    private get groupsApi(): Activiti.GroupsApi {\n        return this.apiService.getInstance().activiti.groupsApi;\n    }\n\n    /**\n     * Parses JSON data to create a corresponding Form model.\n     * @param json JSON to create the form\n     * @param data Values for the form fields\n     * @param readOnly Should the form fields be read-only?\n     * @returns Form model created from input data\n     */\n    parseForm(json: any, data?: FormValues, readOnly: boolean = false): FormModel {\n        if (json) {\n            let form = new FormModel(json, data, readOnly, this);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(form, {\n                        id: '$custom',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Creates a Form with a field for each metadata property.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createFormFromANode(formName: string): Observable<any> {\n        return new Observable((observer) => {\n            this.createForm(formName).subscribe(\n                (form) => {\n                    this.ecmModelService.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                        (customType) => {\n                            let formDefinitionModel = new FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);\n                            from(\n                                this.editorApi.saveForm(form.id, formDefinitionModel)\n                            ).subscribe((formData) => {\n                                observer.next(formData);\n                                observer.complete();\n                            }, (err) => this.handleError(err));\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    /**\n     * Create a Form.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createForm(formName: string): Observable<any> {\n        let dataModel = {\n            name: formName,\n            description: '',\n            modelType: 2,\n            stencilSet: 0\n        };\n\n        return from(\n            this.modelsApi.createModel(dataModel)\n        );\n    }\n\n    /**\n     * Saves a form.\n     * @param formId ID of the form to save\n     * @param formModel Model data for the form\n     * @returns Data for the saved form\n     */\n    saveForm(formId: number, formModel: FormDefinitionModel): Observable<any> {\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Searches for a form by name.\n     * @param name The form name to search for\n     * @returns Form model(s) matching the search name\n     */\n    searchFrom(name: string): Observable<any> {\n        let opts = {\n            'modelType': 2\n        };\n\n        return from(\n            this.modelsApi.getModels(opts)\n        )\n            .pipe(\n                map(function (forms: any) {\n                    return forms.data.find((formData) => formData.name === name);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the forms.\n     * @returns List of form models\n     */\n    getForms(): Observable<any> {\n        let opts = {\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions.\n     * @returns List of process definitions\n     */\n    getProcessDefinitions(): Observable<any> {\n        return from(this.processApi.getProcessDefinitions({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets instance variables for a process.\n     * @param processInstanceId ID of the target process\n     * @returns List of instance variable information\n     */\n    getProcessVariablesById(processInstanceId: string): Observable<any[]> {\n        return from(this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks.\n     * @returns List of tasks\n     */\n    getTasks(): Observable<any> {\n        return from(this.taskApi.listTasks({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task.\n     * @param taskId Task Id\n     * @returns Task info\n     */\n    getTask(taskId: string): Observable<any> {\n        return from(this.taskApi.getTask(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Saves a task form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @returns Null response when the operation is complete\n     */\n    saveTaskForm(taskId: string, formValues: FormValues): Observable<any> {\n        let saveFormRepresentation = <SaveFormRepresentation> { values: formValues };\n\n        return from(this.taskApi.saveTaskForm(taskId, saveFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Completes a Task Form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @param outcome Form Outcome\n     * @returns Null response when the operation is complete\n     */\n    completeTaskForm(taskId: string, formValues: FormValues, outcome?: string): Observable<any> {\n        let completeFormRepresentation: any = <CompleteFormRepresentation> { values: formValues };\n        if (outcome) {\n            completeFormRepresentation.outcome = outcome;\n        }\n\n        return from(this.taskApi.completeTaskForm(taskId, completeFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form related to a task.\n     * @param taskId ID of the target task\n     * @returns Form definition\n     */\n    getTaskForm(taskId: string): Observable<any> {\n        return from(this.taskApi.getTaskForm(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param formId ID of the target form\n     * @returns Form definition\n     */\n    getFormDefinitionById(formId: number): Observable<any> {\n        return from(this.editorApi.getForm(formId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the form definition with a given name.\n     * @param name The form name\n     * @returns Form definition\n     */\n    getFormDefinitionByName(name: string): Observable<any> {\n        let opts = {\n            'filter': 'myReusableForms',\n            'filterText': name,\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.getFormId),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form instance for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstanceStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a process instance.\n     * @param processId ID of the process to get\n     * @returns Process instance\n     */\n    getProcessInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstance(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form definition for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormDefinition(processId: string): Observable<any> {\n        return from(this.processApi.getProcessDefinitionStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValues(taskId: string, field: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValues(taskId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValuesByProcessId(processDefinitionId: string, field: string): Observable<any> {\n        return from(this.processApi.getRestFieldValues(processDefinitionId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumnByProcessId(processDefinitionId: string, field: string, column?: string): Observable<any> {\n        return from(this.processApi.getRestTableFieldValues(processDefinitionId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumn(taskId: string, field: string, column?: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValuesColumn(taskId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a URL for the profile picture of a user.\n     * @param userId ID of the target user\n     * @returns URL string\n     */\n    getUserProfileImageApi(userId: number): string {\n        return this.apiService.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Gets a list of workflow users.\n     * @param filter Filter to select specific users\n     * @param groupId Group ID for the search\n     * @returns Array of users\n     */\n    getWorkflowUsers(filter: string, groupId?: string): Observable<UserProcessModel[]> {\n        let option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.usersWorkflowApi.getUsers(option))\n            .pipe(\n                switchMap((response: any) => <UserProcessModel[]> response.data || []),\n                map((user: any) => {\n                    user.userImage = this.getUserProfileImageApi(user.id);\n                    return of(user);\n                }),\n                combineAll(),\n                defaultIfEmpty([]),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of groups in a workflow.\n     * @param filter Filter to select specific groups\n     * @param groupId Group ID for the search\n     * @returns Array of groups\n     */\n    getWorkflowGroups(filter: string, groupId?: string): Observable<GroupModel[]> {\n        let option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.groupsApi.getGroups(option))\n            .pipe(\n                map((response: any) => <GroupModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the ID of a form.\n     * @param form Object representing a form\n     * @returns ID string\n     */\n    getFormId(form: any): string {\n        let result = null;\n\n        if (form && form.data && form.data.length > 0) {\n            result = form.data[0].id;\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates a JSON representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Error message\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = FormService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : FormService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class NodeMetadata {\n    metadata: any;\n    nodeType: string;\n\n    constructor(metadata: any, nodeType: string) {\n        this.metadata = metadata;\n        this.nodeType = nodeType;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { NodeMetadata } from '../models/node-metadata.model';\nimport { map } from 'rxjs/operators';\nimport { AlfrescoApiCompatibility, NodeEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Get the metadata and the nodeType for a nodeId cleaned by the prefix.\n     * @param nodeId ID of the target node\n     * @returns Node metadata\n     */\n    public getNodeMetadata(nodeId: string): Observable<NodeMetadata> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId))\n            .pipe(map(this.cleanMetadataFromSemicolon));\n    }\n\n    /**\n     * Create a new Node from form metadata.\n     * @param path Path to the node\n     * @param nodeType Node type\n     * @param name Node name\n     * @param nameSpace Namespace for properties\n     * @param data Property data to store in the node under namespace\n     * @returns The created node\n     */\n    public createNodeMetadata(nodeType: string, nameSpace: any, data: any, path: string, name?: string): Observable<NodeEntry> {\n        let properties = {};\n        for (let key in data) {\n            if (data[key]) {\n                properties[nameSpace + ':' + key] = data[key];\n            }\n        }\n\n        return this.createNode(name || this.generateUuid(), nodeType, properties, path);\n    }\n\n    /**\n     * Create a new Node from form metadata\n     * @param name Node name\n     * @param nodeType Node type\n     * @param properties Node body properties\n     * @param path Path to the node\n     * @returns The created node\n     */\n    public createNode(name: string, nodeType: string, properties: any, path: string): Observable<NodeEntry> {\n        let body = {\n            name: name,\n            nodeType: nodeType,\n            properties: properties,\n            relativePath: path\n        };\n\n        let apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.nodes.addNode('-root-', body, {}));\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    private cleanMetadataFromSemicolon(nodeEntry: NodeEntry): NodeMetadata {\n        let metadata = {};\n\n        if (nodeEntry && nodeEntry.entry.properties) {\n            for (let key in nodeEntry.entry.properties) {\n                if (key) {\n                    if (key.indexOf(':') !== -1) {\n                        metadata [key.split(':')[1]] = nodeEntry.entry.properties[key];\n                    } else {\n                        metadata [key] = nodeEntry.entry.properties[key];\n                    }\n                }\n            }\n        }\n\n        return new NodeMetadata(metadata, nodeEntry.entry.nodeType);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { Observable, from, throwError } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel } from '../models/widget-visibility.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetVisibilityService {\n\n    private processVarList: TaskProcessVariableModel[];\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public refreshVisibility(form: FormModel) {\n        if (form && form.tabs && form.tabs.length > 0) {\n            form.tabs.map((tabModel) => this.refreshEntityVisibility(tabModel));\n        }\n\n        if (form) {\n            form.getFormFields().map((field) => this.refreshEntityVisibility(field));\n        }\n    }\n\n    refreshEntityVisibility(element: FormFieldModel | TabModel) {\n        let visible = this.evaluateVisibility(element.form, element.visibilityCondition);\n        element.isVisible = visible;\n    }\n\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        let isLeftFieldPresent = visibilityObj && ( visibilityObj.leftFormFieldId || visibilityObj.leftRestResponseId );\n        if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {\n            return true;\n        } else {\n            return this.isFieldVisible(form, visibilityObj);\n        }\n    }\n\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        let leftValue = this.getLeftValue(form, visibilityObj);\n        let rightValue = this.getRightValue(form, visibilityObj);\n        let actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);\n        if (visibilityObj.nextCondition) {\n            return this.evaluateLogicalOperation(\n                visibilityObj.nextConditionOperator,\n                actualResult,\n                this.isFieldVisible(form, visibilityObj.nextCondition)\n            );\n        } else {\n            return actualResult;\n        }\n    }\n\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let leftValue = '';\n        if (visibilityObj.leftRestResponseId && visibilityObj.leftRestResponseId !== 'null') {\n            leftValue = this.getVariableValue(form, visibilityObj.leftRestResponseId, this.processVarList);\n        } else if (visibilityObj.leftFormFieldId) {\n            leftValue = this.getFormValue(form, visibilityObj.leftFormFieldId);\n            leftValue = leftValue ? leftValue : this.getVariableValue(form, visibilityObj.leftFormFieldId, this.processVarList);\n        }\n        return leftValue;\n    }\n\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let valueFound = '';\n        if (visibilityObj.rightRestResponseId) {\n            valueFound = this.getVariableValue(form, visibilityObj.rightRestResponseId, this.processVarList);\n        } else if (visibilityObj.rightFormFieldId) {\n            valueFound = this.getFormValue(form, visibilityObj.rightFormFieldId);\n        } else {\n            if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {\n                valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';\n            } else {\n                valueFound = visibilityObj.rightValue;\n            }\n        }\n        return valueFound;\n    }\n\n    getFormValue(form: FormModel, fieldId: string) {\n        let value = this.getFieldValue(form.values, fieldId);\n\n        if (!value) {\n            value = this.searchValueInForm(form, fieldId);\n        }\n\n        return value;\n    }\n\n    getFieldValue(valueList: any, fieldId: string) {\n        let dropDownFilterByName, valueFound;\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            dropDownFilterByName = fieldId.substring(0, fieldId.length - 6);\n            if (valueList[dropDownFilterByName]) {\n                valueFound = valueList[dropDownFilterByName].name;\n            }\n        } else if (valueList[fieldId] && valueList[fieldId].id) {\n            valueFound = valueList[fieldId].id;\n        } else {\n            valueFound = valueList[fieldId];\n        }\n        return valueFound;\n    }\n\n    searchValueInForm(form: FormModel, fieldId: string) {\n        let fieldValue = '';\n        form.getFormFields().forEach((formField: FormFieldModel) => {\n            if (this.isSearchedField(formField, fieldId)) {\n                fieldValue = this.getObjectValue(formField, fieldId);\n                if (!fieldValue) {\n                    if (formField.value && formField.value.id) {\n                        fieldValue = formField.value.id;\n                    } else {\n                        fieldValue = formField.value;\n                    }\n                }\n            }\n        });\n\n        return fieldValue;\n    }\n\n    private getObjectValue(field: FormFieldModel, fieldId: string) {\n        let value = '';\n        if (field.value && field.value.name) {\n            value = field.value.name;\n        } else if (field.options) {\n            let option = field.options.find((opt) => opt.id === field.value);\n            if (option) {\n                value = this.getValueFromOption(fieldId, option);\n            }\n        }\n        return value;\n    }\n\n    private getValueFromOption(fieldId: string, option): string {\n        let optionValue = '';\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            optionValue = option.name;\n        } else {\n            optionValue = option.id;\n        }\n        return optionValue;\n    }\n\n    private isSearchedField(field: FormFieldModel, fieldToFind: string): boolean {\n        let formattedFieldName = this.removeLabel(field, fieldToFind);\n        return field.id ? field.id.toUpperCase() === formattedFieldName.toUpperCase() : false;\n    }\n\n    private removeLabel(field: FormFieldModel, fieldToFind): string {\n        let formattedFieldName = fieldToFind || '';\n        if (field.fieldType === 'RestFieldRepresentation' && fieldToFind.indexOf('_LABEL') > 0) {\n            formattedFieldName = fieldToFind.substring(0, fieldToFind.length - 6);\n        }\n        return formattedFieldName;\n    }\n\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]) {\n        return this.getFormVariableValue(form, name) ||\n            this.getProcessVariableValue(name, processVarList);\n    }\n\n    private getFormVariableValue(form: FormModel, name: string) {\n        if (form.json.variables) {\n            let formVariable = form.json.variables.find((formVar) => formVar.name === name);\n            return formVariable ? formVariable.value : formVariable;\n        }\n    }\n\n    private getProcessVariableValue(name: string, processVarList: TaskProcessVariableModel[]) {\n        if (this.processVarList) {\n            let processVariable = this.processVarList.find((variable) => variable.id === name);\n            return processVariable ? processVariable.value : processVariable;\n        }\n    }\n\n    evaluateLogicalOperation(logicOp, previousValue, newValue): boolean {\n        switch (logicOp) {\n            case 'and':\n                return previousValue && newValue;\n            case 'or' :\n                return previousValue || newValue;\n            case 'and-not':\n                return previousValue && !newValue;\n            case 'or-not':\n                return previousValue || !newValue;\n            default:\n                this.logService.error('NO valid operation! wrong op request : ' + logicOp);\n                break;\n        }\n    }\n\n    evaluateCondition(leftValue, rightValue, operator): boolean {\n        switch (operator) {\n            case '==':\n                return leftValue + '' === rightValue + '';\n            case '<':\n                return leftValue < rightValue;\n            case '!=':\n                return leftValue + '' !== rightValue + '';\n            case '>':\n                return leftValue > rightValue;\n            case '>=':\n                return leftValue >= rightValue;\n            case '<=':\n                return leftValue <= rightValue;\n            case 'empty':\n                return leftValue ? leftValue === '' : true;\n            case '!empty':\n                return leftValue ? leftValue !== '' : false;\n            default:\n                this.logService.error('NO valid operation!');\n                break;\n        }\n        return;\n    }\n\n    cleanProcessVariable() {\n        this.processVarList = [];\n    }\n\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]> {\n        return from(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId))\n            .pipe(\n                map((res) => {\n                    let jsonRes = this.toJson(res);\n                    this.processVarList = <TaskProcessVariableModel[]> jsonRes;\n                    return jsonRes;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    toJson(res: any) {\n        return res || {};\n    }\n\n    private handleError(err) {\n        this.logService.error('Error while performing a call');\n        return throwError('Error while performing a call - Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable */\nimport {\n    Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit,\n    Output, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { FormErrorEvent, FormEvent } from './../events/index';\nimport { EcmModelService } from './../services/ecm-model.service';\nimport { FormService } from './../services/form.service';\nimport { NodeService } from './../services/node.service';\nimport { ContentLinkModel } from './widgets/core/content-link.model';\nimport {\n    FormFieldModel, FormModel, FormOutcomeEvent, FormOutcomeModel,\n    FormValues, FormFieldValidator\n} from './widgets/core/index';\nimport { Observable, of } from 'rxjs';\nimport { WidgetVisibilityService } from './../services/widget-visibility.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ValidateFormEvent } from './../events/validate-form.event';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'adf-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent implements OnInit, OnChanges, OnDestroy {\n\n    static SAVE_OUTCOME_ID: string = '$save';\n    static COMPLETE_OUTCOME_ID: string = '$complete';\n    static START_PROCESS_OUTCOME_ID: string = '$startProcess';\n    static CUSTOM_OUTCOME_ID: string = '$custom';\n    static COMPLETE_BUTTON_COLOR: string = 'primary';\n    static COMPLETE_OUTCOME_NAME: string = 'COMPLETE';\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Content Services node ID for the form metadata. */\n    @Input()\n    nodeId: string;\n\n    /** The id of the form definition to load and display with custom values. */\n    @Input()\n    formId: number;\n\n    /** Name of the form definition to load and display with custom values. */\n    @Input()\n    formName: string;\n\n    /** Toggle saving of form metadata. */\n    @Input()\n    saveMetadata: boolean = false;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: FormValues;\n\n    /** Path of the folder where the metadata will be stored. */\n    @Input()\n    path: string;\n\n    /** Name to assign to the new node where the metadata are stored. */\n    @Input()\n    nameNode: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Complete` outcome button. */\n    @Input()\n    showCompleteButton: boolean = true;\n\n    /** If true then the `Complete` outcome button is shown but it will be disabled. */\n    @Input()\n    disableCompleteButton: boolean = false;\n\n    /** If true then the `Start Process` outcome button is shown but it will be disabled. */\n    @Input()\n    disableStartProcessButton: boolean = false;\n\n    /** Toggle rendering of the `Save` outcome button. */\n    @Input()\n    showSaveButton: boolean = true;\n\n    /** Toggle debug options. */\n    @Input()\n    showDebugButton: boolean = false;\n\n    /** Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Toggle rendering of the validation icon next to the form title. */\n    @Input()\n    showValidationIcon: boolean = true;\n\n    /** Contains a list of form field validator instances. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the supplied form values have a validation error.*/\n    @Output()\n    formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /**\n     * Emitted when any error occurs.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    debugMode: boolean = false;\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService,\n                private ecmModelService: EcmModelService,\n                private nodeService: NodeService) {\n    }\n\n    hasForm(): boolean {\n        return this.form ? true : false;\n    }\n\n    isTitleEnabled(): boolean {\n        if (this.showTitle) {\n            if (this.form && this.form.taskName) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getColorForOutcome(outcomeName: string): string {\n        return outcomeName === FormComponent.COMPLETE_OUTCOME_NAME ? FormComponent.COMPLETE_BUTTON_COLOR : '';\n    }\n\n    isOutcomeButtonEnabled(outcome: FormOutcomeModel): boolean {\n        if (this.form.readOnly) {\n            return false;\n        }\n\n        if (outcome) {\n            // Make 'Save' button always available\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return true;\n            }\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.disableCompleteButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return this.disableStartProcessButton ? false : this.form.isValid;\n            }\n            return this.form.isValid;\n        }\n        return false;\n    }\n\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.name) {\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.showCompleteButton;\n            }\n            if (isFormReadOnly) {\n                return outcome.isSelected;\n            }\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.showSaveButton;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content: ContentLinkModel) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getFormByTaskId(taskId.currentValue);\n            return;\n        }\n\n        let formId = changes['formId'];\n        if (formId && formId.currentValue) {\n            this.getFormDefinitionByFormId(formId.currentValue);\n            return;\n        }\n\n        let formName = changes['formName'];\n        if (formName && formName.currentValue) {\n            this.getFormDefinitionByFormName(formName.currentValue);\n            return;\n        }\n\n        let nodeId = changes['nodeId'];\n        if (nodeId && nodeId.currentValue) {\n            this.loadFormForEcmNode(nodeId.currentValue);\n            return;\n        }\n\n        let data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks outcome button.\n     * @param outcome Form outcome model\n     */\n    onOutcomeClicked(outcome: FormOutcomeModel): boolean {\n        if (!this.readOnly && outcome && this.form) {\n\n            if (!this.onExecuteOutcome(outcome)) {\n                return false;\n            }\n\n            if (outcome.isSystem) {\n                if (outcome.id === FormComponent.SAVE_OUTCOME_ID) {\n                    this.saveTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormComponent.COMPLETE_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormComponent.START_PROCESS_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormComponent.CUSTOM_OUTCOME_ID) {\n                    this.onTaskSaved(this.form);\n                    this.storeFormAsMetadata();\n                    return true;\n                }\n            } else {\n                // Note: Activiti is using NAME field rather than ID for outcomes\n                if (outcome.name) {\n                    this.onTaskSaved(this.form);\n                    this.completeTaskForm(outcome.name);\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.taskId) {\n            this.getFormByTaskId(this.taskId);\n            return;\n        }\n\n        if (this.formId) {\n            this.getFormDefinitionByFormId(this.formId);\n            return;\n        }\n\n        if (this.formName) {\n            this.getFormDefinitionByFormName(this.formName);\n            return;\n        }\n    }\n\n    findProcessVariablesByTaskId(taskId: string): Observable<any> {\n        return this.formService.getTask(taskId).pipe(\n            switchMap((task: any) => {\n                if (this.isAProcessTask(task)) {\n                    return this.visibilityService.getTaskProcessVariable(taskId);\n                } else {\n                    return of({});\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation) {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(taskId: string): Promise<FormModel> {\n        return new Promise<FormModel>((resolve, reject) => {\n            this.findProcessVariablesByTaskId(taskId).subscribe((processVariables) => {\n                this.formService\n                    .getTaskForm(taskId)\n                    .subscribe(\n                        form => {\n                            const parsedForm = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(parsedForm);\n                            parsedForm.validateForm();\n                            this.form = parsedForm;\n                            this.onFormLoaded(this.form);\n                            resolve(this.form);\n                        },\n                        error => {\n                            this.handleError(error);\n                            // reject(error);\n                            resolve(null);\n                        }\n                    );\n            });\n        });\n    }\n\n    getFormDefinitionByFormId(formId: number) {\n        this.formService\n            .getFormDefinitionById(formId)\n            .subscribe(\n                form => {\n                    this.formName = form.name;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    getFormDefinitionByFormName(formName: string) {\n        this.formService\n            .getFormDefinitionByName(formName)\n            .subscribe(\n                id => {\n                    this.formService.getFormDefinitionById(id).subscribe(\n                        form => {\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                        }\n                    );\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .saveTaskForm(this.form.taskId, this.form.values)\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    error => this.onTaskSavedError(this.form, error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .completeTaskForm(this.form.taskId, this.form.values, outcome)\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    error => this.onTaskCompletedError(this.form, error)\n                );\n        }\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    parseForm(json: any): FormModel {\n        if (json) {\n            let form = new FormModel(json, this.data, this.readOnly, this.formService);\n            if (!json.fields) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(form, { id: '$custom', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.form.json);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    private loadFormForEcmNode(nodeId: string): void {\n        this.nodeService.getNodeMetadata(nodeId).subscribe(data => {\n                this.data = data.metadata;\n                this.loadFormFromActiviti(data.nodeType);\n            },\n            this.handleError);\n    }\n\n    loadFormFromActiviti(nodeType: string): any {\n        this.formService.searchFrom(nodeType).subscribe(\n            form => {\n                if (!form) {\n                    this.formService.createFormFromANode(nodeType).subscribe(formMetadata => {\n                        this.loadFormFromFormId(formMetadata.id);\n                    });\n                } else {\n                    this.loadFormFromFormId(form.id);\n                }\n            },\n            (error) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private loadFormFromFormId(formId: number) {\n        this.formId = formId;\n        this.loadForm();\n    }\n\n    private storeFormAsMetadata() {\n        if (this.saveMetadata) {\n            this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe(type => {\n                    this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, EcmModelService.MODEL_NAMESPACE, this.form.values, this.path, this.nameNode);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n        }\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n        this.formService.formLoaded.next(new FormEvent(form));\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n        this.formService.formDataRefreshed.next(new FormEvent(form));\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n        this.formService.taskSaved.next(new FormEvent(form));\n    }\n\n    protected onTaskSavedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskSavedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.formService.taskCompleted.next(new FormEvent(form));\n    }\n\n    protected onTaskCompletedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskCompletedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        let args = new FormOutcomeEvent(outcome);\n\n        this.formService.executeOutcome.next(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../services/form.service';\n\n@Component({\n    selector: 'adf-form-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormListComponent implements OnChanges {\n\n    /** The array that contains the information to show inside the list. */\n    @Input()\n    forms: any [] = [];\n\n    constructor(protected formService: FormService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.getForms();\n    }\n\n    isEmpty(): boolean {\n        return this.forms && this.forms.length === 0;\n    }\n\n    getForms() {\n        this.formService.getForms().subscribe((forms) => {\n            this.forms.push(...forms);\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): any {\n        return this.apiService.getInstance().activiti.contentApi;\n    }\n\n    /**\n     * Create temporary related content from an uploaded file.\n     * @param file File to use for content\n     * @returns The created content data\n     */\n    createTemporaryRawRelatedContent(file: any): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.createTemporaryRawRelatedContent(file))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the metadata for a related content item.\n     * @param contentId ID of the content item\n     * @returns Metadata for the content\n     */\n    getFileContent(contentId: number): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.getContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets raw binary content data for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the related content\n     */\n    getFileRawContent(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getRawContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the preview for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the content preview\n     */\n    getContentPreview(contentId: number): Observable<Blob> {\n        return new Observable((observer) => {\n            this.contentApi.getContentPreview(contentId).then(\n                (result) => {\n                    observer.next(result);\n                    observer.complete();\n                },\n                () => {\n                    this.contentApi.getRawContent(contentId).then(\n                        (data) => {\n                            observer.next(data);\n                            observer.complete();\n                        },\n                        (err) => {\n                            observer.error(err);\n                            observer.complete();\n                        }\n                    );\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL for direct access to a related content file.\n     * @param contentId ID of the related content\n     * @returns URL to access the content\n     */\n    getFileRawContentUrl(contentId: number): string {\n        return this.contentApi.getRawContentUrl(contentId);\n    }\n\n    /**\n     * Gets the thumbnail for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the thumbnail image\n     */\n    getContentThumbnail(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getContentThumbnail(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a task instance.\n     * @param taskId ID of the target task\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getTaskRelatedContent(taskId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForTask(taskId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a process instance.\n     * @param processId ID of the target process\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getProcessRelatedContent(processId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForProcessInstance(processId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Deletes related content.\n     * @param contentId Identifier of the content to delete\n     * @returns Null response that notifies when the deletion is complete\n     */\n    deleteRelatedContent(contentId: number): Observable<any> {\n        return from(this.contentApi.deleteContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param content File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createProcessRelatedContent(processInstanceId: string, content: any, opts?: any): Observable<any> {\n        return from(this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, content, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a task instance.\n     * @param taskId ID of the target task\n     * @param file File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createTaskRelatedContent(taskId: string, file: any, opts?: any) {\n        return from(this.contentApi.createRelatedContentOnTask(taskId, file, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Creates a JSON representation of data.\n     * @param res Object representing data\n     * @returns JSON object\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of data.\n     * @param res Object representing data\n     * @returns JSON array object\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Callback when an error occurs\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = ProcessContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ProcessContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService } from '../../../../services/content.service';\nimport { LogService } from '../../../../services/log.service';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { FormService } from './../../../services/form.service';\n\n@Component({\n    selector: 'adf-content',\n    templateUrl: './content.widget.html',\n    styleUrls: ['./content.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentWidgetComponent implements OnChanges {\n\n    /** The content id to show. */\n    @Input()\n    id: string;\n\n    /** Toggles showing document content. */\n    @Input()\n    showDocumentContent: boolean = true;\n\n    /** Emitted when the content is clicked. */\n    @Output()\n    contentClick = new EventEmitter();\n\n    /** Emitted when the thumbnail has loaded. */\n    @Output()\n    thumbnailLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the content has loaded. */\n    @Output()\n    contentLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    content: ContentLinkModel;\n\n    constructor(protected formService: FormService,\n                private logService: LogService,\n                private contentService: ContentService,\n                private processContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const contentId = changes['id'];\n        if (contentId && contentId.currentValue) {\n            this.loadContent(contentId.currentValue);\n        }\n    }\n\n    loadContent(id: number) {\n        this.processContentService\n            .getFileContent(id)\n            .subscribe(\n                (response: ContentLinkModel) => {\n                    this.content = new ContentLinkModel(response);\n                    this.contentLoaded.emit(this.content);\n                    this.loadThumbnailUrl(this.content);\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    loadThumbnailUrl(content: ContentLinkModel) {\n        if (this.content.isThumbnailSupported()) {\n            let observable: Observable<any>;\n\n            if (this.content.isTypeImage()) {\n                observable = this.processContentService.getFileRawContent(content.id);\n            } else {\n                observable = this.processContentService.getContentThumbnail(content.id);\n            }\n\n            if (observable) {\n                observable.subscribe(\n                    (response: Blob) => {\n                        this.content.thumbnailUrl = this.contentService.createTrustedUrl(response);\n                        this.thumbnailLoaded.emit(this.content.thumbnailUrl);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n\n                    }\n                );\n            }\n        }\n    }\n\n    openViewer(content: ContentLinkModel): void {\n        let fetch = this.processContentService.getContentPreview(content.id);\n        if (content.isTypeImage() || content.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(content.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.contentClick.emit(content);\n                this.logService.info('Content clicked' + content.id);\n                this.formService.formContentClicked.next(content);\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n\n    /**\n     * Invoke content download.\n     */\n    download(content: ContentLinkModel): void {\n        this.processContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { FormService } from './../services/form.service';\nimport { WidgetVisibilityService } from './../services/widget-visibility.service';\nimport { FormComponent } from './form.component';\nimport { ContentLinkModel } from './widgets/core/content-link.model';\nimport { FormOutcomeModel } from './widgets/core/index';\nimport { ValidateFormEvent } from './../events/validate-form.event';\n\n@Component({\n    selector: 'adf-start-form',\n    templateUrl: './start-form.component.html',\n    styleUrls: ['./form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartFormComponent extends FormComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** Definition ID of the process to start. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Process ID of the process to start. */\n    @Input()\n    processId: string;\n\n    /** Should form outcome buttons be shown? */\n    @Input()\n    showOutcomeButtons: boolean = true;\n\n    /** Should the refresh button be shown? */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Is the form read-only (ie, can't be edited)? */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Emitted when the user clicks one of the outcome buttons that completes the form. */\n    @Output()\n    outcomeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a field of the form is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    @ViewChild('outcomesContainer', {})\n    outcomesContainer: ElementRef = null;\n\n    constructor(formService: FormService,\n                visibilityService: WidgetVisibilityService) {\n        super(formService, visibilityService, null, null);\n        this.showTitle = false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let processDefinitionId = changes['processDefinitionId'];\n        if (processDefinitionId && processDefinitionId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(processDefinitionId.currentValue);\n            return;\n        }\n\n        let processId = changes['processId'];\n        if (processId && processId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(processId.currentValue);\n            return;\n        }\n    }\n\n    loadStartForm(processId: string) {\n        this.formService.getProcessInstance(processId)\n            .subscribe((instance: any) => {\n                this.formService\n                    .getStartFormInstance(processId)\n                    .subscribe(\n                        (form) => {\n                            this.formName = form.name;\n                            if (instance.variables) {\n                                form.processVariables = instance.variables;\n                            }\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.form.readOnly = this.readOnlyForm;\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => this.handleError(error)\n                    );\n            });\n    }\n\n    getStartFormDefinition(processId: string) {\n        this.formService\n            .getStartFormDefinition(processId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.processDefinitionName;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.form.readOnly = this.readOnlyForm;\n                    this.onFormLoaded(this.form);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    /** @override */\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.isSystem && (outcome.name === FormOutcomeModel.SAVE_ACTION ||\n            outcome.name === FormOutcomeModel.COMPLETE_ACTION)) {\n            return false;\n        } else if (outcome && outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n            return true;\n        }\n        return super.isOutcomeButtonVisible(outcome, isFormReadOnly);\n    }\n\n    /** @override */\n    saveTaskForm() {\n        // do nothing\n    }\n\n    /** @override */\n    onRefreshClicked() {\n        if (this.processDefinitionId) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n        } else if (this.processId) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(this.processId);\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        this.outcomeClick.emit(outcome);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../services/form.service';\nimport { FormFieldModel } from './core/index';\n\nexport const baseHost = {\n    '(click)': 'event($event)',\n    '(blur)': 'event($event)',\n    '(change)': 'event($event)',\n    '(focus)': 'event($event)',\n    '(focusin)': 'event($event)',\n    '(focusout)': 'event($event)',\n    '(input)': 'event($event)',\n    '(invalid)': 'event($event)',\n    '(select)': 'event($event)'\n};\n\n/**\n * Base widget component.\n */\n@Component({\n    selector: 'base-widget',\n    template: '',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class WidgetComponent implements AfterViewInit {\n\n    static DEFAULT_HYPERLINK_URL: string = '#';\n    static DEFAULT_HYPERLINK_SCHEME: string = 'http://';\n\n    /** Does the widget show a read-only value? (ie, can't be edited) */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Data to be displayed in the field */\n    @Input()\n    field: FormFieldModel;\n\n    /**\n     * Emitted when a field value changes.\n     */\n    @Output()\n    fieldChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    constructor(public formService?: FormService) {\n    }\n\n    hasField() {\n        return this.field ? true : false;\n    }\n\n    // Note for developers:\n    // returns <any> object to be able binding it to the <element required=\"required\"> attribute\n    isRequired(): any {\n        if (this.field && this.field.required) {\n            return true;\n        }\n        return null;\n    }\n\n    isValid(): boolean {\n        return this.field.validationSummary ? true : false;\n    }\n\n    hasValue(): boolean {\n        return this.field &&\n            this.field.value !== null &&\n            this.field.value !== undefined;\n    }\n\n    isInvalidFieldRequired() {\n        return !this.field.isValid && !this.field.validationSummary && this.isRequired();\n    }\n\n    ngAfterViewInit() {\n        this.fieldChanged.emit(this.field);\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    onFieldChanged(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    protected getHyperlinkUrl(field: FormFieldModel) {\n        let url = WidgetComponent.DEFAULT_HYPERLINK_URL;\n        if (field && field.hyperlinkUrl) {\n            url = field.hyperlinkUrl;\n            if (!/^https?:\\/\\//i.test(url)) {\n                url = `${WidgetComponent.DEFAULT_HYPERLINK_SCHEME}${url}`;\n            }\n        }\n        return url;\n    }\n\n    protected getHyperlinkText(field: FormFieldModel) {\n        if (field) {\n            return field.displayText || field.hyperlinkUrl;\n        }\n        return null;\n    }\n\n    event(event: Event): void {\n        this.formService.formEvents.next(event);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ContainerColumnModel } from './../core/container-column.model';\nimport { ContainerModel } from './../core/container.model';\nimport { FormFieldTypes } from './../core/form-field-types';\nimport { FormFieldModel } from './../core/form-field.model';\n\nexport class ContainerWidgetComponentModel extends ContainerModel {\n\n    columns: ContainerColumnModel[] = [];\n    isExpanded: boolean = true;\n    rowspan: number = 1;\n    colspan: number = 1;\n\n    isGroup(): boolean {\n        return this.type === FormFieldTypes.GROUP;\n    }\n\n    isCollapsible(): boolean {\n        let allowCollapse = false;\n\n        if (this.isGroup() && this.field.params['allowCollapse']) {\n            allowCollapse = <boolean> this.field.params['allowCollapse'];\n        }\n\n        return allowCollapse;\n    }\n\n    isCollapsedByDefault(): boolean {\n        let collapseByDefault = false;\n\n        if (this.isCollapsible() && this.field.params['collapseByDefault']) {\n            collapseByDefault = <boolean> this.field.params['collapseByDefault'];\n        }\n\n        return collapseByDefault;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field);\n\n        if (this.field) {\n            this.columns = this.field.columns || [];\n            this.isExpanded = !this.isCollapsedByDefault();\n            this.colspan = field.colspan;\n            this.rowspan = field.rowspan;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { ContainerWidgetComponentModel } from './container.widget.model';\n\n@Component({\n    selector: 'container-widget',\n    templateUrl: './container.widget.html',\n    styleUrls: ['./container.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContainerWidgetComponent extends WidgetComponent implements OnInit, AfterViewInit {\n\n    content: ContainerWidgetComponentModel;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    onExpanderClicked() {\n        if (this.content && this.content.isCollapsible()) {\n            this.content.isExpanded = !this.content.isExpanded;\n        }\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new ContainerWidgetComponentModel(this.field);\n        }\n    }\n\n    /**\n     * Serializes column fields\n     */\n    get fields(): FormFieldModel[] {\n        const fields = [];\n\n        let rowContainsElement = true,\n            rowIndex = 0;\n\n        while (rowContainsElement) {\n            rowContainsElement = false;\n            for (let i = 0; i < this.content.columns.length; i++ ) {\n                let field = this.content.columns[i].fields[rowIndex];\n                if (field) {\n                    rowContainsElement = true;\n                }\n\n                fields.push(field);\n            }\n            rowIndex++;\n        }\n\n        return fields;\n    }\n\n    /**\n     * Calculate the column width based on the numberOfColumns and current field's colspan property\n     *\n     * @param field\n     */\n    getColumnWith(field: FormFieldModel): string {\n        const colspan = field ? field.colspan : 1;\n        return (100 / this.content.json.numberOfColumns) * colspan + '%';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentChecked, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormFieldModel, TabModel } from './../core/index';\n\n@Component({\n    selector: 'tabs-widget',\n    templateUrl: './tabs.widget.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsWidgetComponent implements AfterContentChecked {\n\n    @Input()\n    tabs: TabModel[] = [];\n\n    @Output()\n    formTabChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    visibleTabs: TabModel[] = [];\n\n    hasTabs() {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    ngAfterContentChecked() {\n        this.filterVisibleTabs();\n    }\n\n    filterVisibleTabs() {\n        this.visibleTabs = this.tabs.filter((tab) => {\n            return tab.isVisible;\n        });\n    }\n\n    tabChanged(field: FormFieldModel) {\n        this.formTabChanged.emit(field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'unknown-widget',\n    template: `\n            <mat-list class=\"adf-unknown-widget\">\n                <mat-list-item>\n                     <mat-icon class=\"mat-24\">error_outline</mat-icon>\n                     <span class=\"adf-unknown-text\">Unknown type: {{field.type}}</span>\n                </mat-list-item>\n            </mat-list>\n\n    `,\n    styleUrls: ['./unknown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UnknownWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'amount-widget',\n    templateUrl: './amount.widget.html',\n    styleUrls: ['./amount.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AmountWidgetComponent extends WidgetComponent implements OnInit {\n\n    static DEFAULT_CURRENCY: string = '$';\n\n    currency: string = AmountWidgetComponent.DEFAULT_CURRENCY;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.currency) {\n            this.currency = this.field.currency;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'checkbox-widget',\n    templateUrl: './checkbox.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date.widget.html',\n    styleUrls: ['./date.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'DD/MM/YYYY');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'DD/MM/YYYY');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'display-text-widget',\n    templateUrl: './display-text.widget.html',\n    styleUrls: ['./display-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DisplayTextWidgetComponentComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'adf-form-document-widget',\n    templateUrl: 'document.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentWidgetComponent extends WidgetComponent implements OnInit {\n\n    fileId: string = null;\n    hasFile: boolean = false;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const file = this.field.value;\n\n            if (file) {\n                this.fileId = file.id;\n                this.hasFile = true;\n            } else {\n                this.fileId = null;\n                this.hasFile = false;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'dropdown-widget',\n    templateUrl: './dropdown.widget.html',\n    styleUrls: ['./dropdown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getValuesByTaskId();\n            } else {\n                this.getValuesByProcessDefinitionId();\n            }\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    let options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    let options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string {\n        let optionValue: string = '';\n        if (option.id === 'empty' || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class DateCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Date'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            let value = row.value[column.id];\n            let dateValue = moment(value, 'D-M-YYYY');\n            if (!dateValue.isValid()) {\n                if (summary) {\n                    summary.isValid = false;\n                    summary.message = `Invalid '${column.name}' format.`;\n                }\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ErrorMessageModel } from '../core/index';\n\nexport class DynamicRowValidationSummary extends ErrorMessageModel {\n\n    isValid: boolean;\n\n    constructor(json?: any) {\n        super(json);\n        this.isValid = json.isValid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class NumberCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Number',\n        'Amount'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            let value = row.value[column.id];\n            if (value === null ||\n                value === undefined ||\n                value === '' ||\n                this.isNumber(value)) {\n                return true;\n            }\n\n            if (summary) {\n                summary.isValid = false;\n                summary.message = `Field '${column.name}' must be a number.`;\n            }\n            return false;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class RequiredCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'String',\n        'Number',\n        'Amount',\n        'Date',\n        'Dropdown'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n        if (this.isSupported(column)) {\n            let value = row.value[column.id];\n            if (column.required) {\n                if (value === null || value === undefined || value === '') {\n                    if (summary) {\n                        summary.isValid = false;\n                        summary.message = `Field '${column.name}' is required.`;\n                    }\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { ValidateDynamicTableRowEvent } from '../../../events/validate-dynamic-table-row.event';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { FormWidgetModel } from './../core/form-widget.model';\nimport { CellValidator } from './cell-validator.model';\nimport { DateCellValidator } from './date-cell-validator-model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { NumberCellValidator } from './number-cell-validator.model';\nimport { RequiredCellValidator } from './required-cell-validator.model';\n\nexport class DynamicTableModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n    columns: DynamicTableColumn[] = [];\n    visibleColumns: DynamicTableColumn[] = [];\n    rows: DynamicTableRow[] = [];\n\n    private _selectedRow: DynamicTableRow;\n    private _validators: CellValidator[] = [];\n\n    get selectedRow(): DynamicTableRow {\n        return this._selectedRow;\n    }\n\n    set selectedRow(value: DynamicTableRow) {\n        if (this._selectedRow && this._selectedRow === value) {\n            this._selectedRow.selected = false;\n            this._selectedRow = null;\n            return;\n        }\n\n        this.rows.forEach((row) => row.selected = false);\n\n        this._selectedRow = value;\n\n        if (value) {\n            this._selectedRow.selected = true;\n        }\n    }\n\n    constructor(field: FormFieldModel, private formService: FormService) {\n        super(field.form, field.json);\n        this.field = field;\n\n        if (field.json) {\n            const columns = this.getColumns(field);\n            if (columns) {\n                this.columns = columns;\n                this.visibleColumns = this.columns.filter((col) => col.visible);\n            }\n\n            if (field.json.value) {\n                this.rows = field.json.value.map((obj) => <DynamicTableRow> {selected: false, value: obj});\n            }\n        }\n\n        this._validators = [\n            new RequiredCellValidator(),\n            new DateCellValidator(),\n            new NumberCellValidator()\n        ];\n    }\n\n    private getColumns(field: FormFieldModel): DynamicTableColumn[] {\n        if (field && field.json) {\n            let definitions = field.json.columnDefinitions;\n            if (!definitions && field.json.params && field.json.params.field) {\n                definitions = field.json.params.field.columnDefinitions;\n            }\n\n            if (definitions) {\n                return definitions.map((obj) => <DynamicTableColumn> obj);\n            }\n        }\n        return null;\n    }\n\n    flushValue() {\n        if (this.field) {\n            this.field.value = this.rows.map((r) => r.value);\n            this.field.updateForm();\n        }\n    }\n\n    moveRow(row: DynamicTableRow, offset: number) {\n        let oldIndex = this.rows.indexOf(row);\n        if (oldIndex > -1) {\n            let newIndex = (oldIndex + offset);\n\n            if (newIndex < 0) {\n                newIndex = 0;\n            } else if (newIndex >= this.rows.length) {\n                newIndex = this.rows.length;\n            }\n\n            let arr = this.rows.slice();\n            arr.splice(oldIndex, 1);\n            arr.splice(newIndex, 0, row);\n            this.rows = arr;\n\n            this.flushValue();\n        }\n    }\n\n    deleteRow(row: DynamicTableRow) {\n        if (row) {\n            if (this.selectedRow === row) {\n                this.selectedRow = null;\n            }\n            let idx = this.rows.indexOf(row);\n            if (idx > -1) {\n                this.rows.splice(idx, 1);\n                this.flushValue();\n            }\n        }\n    }\n\n    addRow(row: DynamicTableRow) {\n        if (row) {\n            this.rows.push(row);\n            // this.selectedRow = row;\n        }\n    }\n\n    validateRow(row: DynamicTableRow): DynamicRowValidationSummary {\n        const summary = new DynamicRowValidationSummary( {\n            isValid: true,\n            message: null\n        });\n\n        const event = new ValidateDynamicTableRowEvent(this.form, this.field, row, summary);\n        this.formService.validateDynamicTableRow.next(event);\n\n        if (event.defaultPrevented || !summary.isValid) {\n            return summary;\n        }\n\n        if (row) {\n            for (let col of this.columns) {\n                for (let validator of this._validators) {\n                    if (!validator.validate(row, col, summary)) {\n                        return summary;\n                    }\n                }\n            }\n        }\n\n        return summary;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        let rowValue = row.value[column.id];\n\n        if (column.type === 'Dropdown') {\n            if (rowValue) {\n                return rowValue.name;\n            }\n        }\n\n        if (column.type === 'Boolean') {\n            return rowValue ? true : false;\n        }\n\n        if (column.type === 'Date') {\n            if (rowValue) {\n                return moment(rowValue.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');\n            }\n        }\n\n        return rowValue || '';\n    }\n\n    getDisplayText(column: DynamicTableColumn): string {\n        let columnName = column.name;\n        if (column.type === 'Amount') {\n            let currency = column.amountCurrency || '$';\n            columnName = `${column.name} (${currency})`;\n        }\n        return columnName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetVisibilityService } from '../../../services/widget-visibility.service';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { DynamicTableModel } from './dynamic-table.widget.model';\n\n@Component({\n    selector: 'dynamic-table-widget',\n    templateUrl: './dynamic-table.widget.html',\n    styleUrls: ['./dynamic-table.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DynamicTableWidgetComponent extends WidgetComponent implements OnInit {\n\n    ERROR_MODEL_NOT_FOUND = 'Table model not found';\n\n    content: DynamicTableModel;\n\n    editMode: boolean = false;\n    editRow: DynamicTableRow = null;\n\n    private selectArrayCode = [32, 0, 13];\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef,\n                private visibilityService: WidgetVisibilityService,\n                private logService: LogService,\n                private cd: ChangeDetectorRef) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new DynamicTableModel(this.field, this.formService);\n            this.visibilityService.refreshVisibility(this.field.form);\n        }\n    }\n\n    forceFocusOnAddButton() {\n        if (this.content) {\n            this.cd.detectChanges();\n            let buttonAddRow = <HTMLButtonElement> this.elementRef.nativeElement.querySelector('#' + this.content.id + '-add-row');\n            if (this.isDynamicTableReady(buttonAddRow)) {\n                buttonAddRow.focus();\n            }\n        }\n    }\n\n    private isDynamicTableReady(buttonAddRow) {\n        return this.field && !this.editMode && buttonAddRow;\n    }\n\n    isValid() {\n        let valid = true;\n\n        if (this.content && this.content.field) {\n            valid = this.content.field.isValid;\n        }\n\n        return valid;\n    }\n\n    onRowClicked(row: DynamicTableRow) {\n        if (this.content) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    onKeyPressed($event: KeyboardEvent, row: DynamicTableRow) {\n        if (this.content && this.isEnterOrSpacePressed($event.keyCode)) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    private isEnterOrSpacePressed(keyCode) {\n        return this.selectArrayCode.indexOf(keyCode) !== -1;\n    }\n\n    hasSelection(): boolean {\n        return !!(this.content && this.content.selectedRow);\n    }\n\n    moveSelectionUp(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, -1);\n            return true;\n        }\n        return false;\n    }\n\n    moveSelectionDown(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, 1);\n            return true;\n        }\n        return false;\n    }\n\n    deleteSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.deleteRow(this.content.selectedRow);\n            return true;\n        }\n        return false;\n    }\n\n    addNewRow(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = <DynamicTableRow> {\n                isNew: true,\n                selected: false,\n                value: {}\n            };\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    editSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = this.copyRow(this.content.selectedRow);\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        if (this.content) {\n            let cellValue = this.content.getCellValue(row, column);\n            if (column.type === 'Amount') {\n                return (column.amountCurrency || '$') + ' ' + (cellValue || 0);\n            }\n            return cellValue;\n        }\n        return null;\n    }\n\n    onSaveChanges() {\n        if (this.content) {\n            if (this.editRow.isNew) {\n                let row = this.copyRow(this.editRow);\n                this.content.selectedRow = null;\n                this.content.addRow(row);\n                this.editRow.isNew = false;\n            } else {\n                this.content.selectedRow.value = this.copyObject(this.editRow.value);\n            }\n            this.content.flushValue();\n        } else {\n            this.logService.error(this.ERROR_MODEL_NOT_FOUND);\n        }\n        this.editMode = false;\n        this.forceFocusOnAddButton();\n    }\n\n    onCancelChanges() {\n        this.editMode = false;\n        this.editRow = null;\n        this.forceFocusOnAddButton();\n    }\n\n    copyRow(row: DynamicTableRow): DynamicTableRow {\n        return <DynamicTableRow> {\n            value: this.copyObject(row.value)\n        };\n    }\n\n    private copyObject(obj: any): any {\n        let result = obj;\n\n        if (typeof obj === 'object' && obj !== null && obj !== undefined) {\n            result = Object.assign({}, obj);\n            Object.keys(obj).forEach((key) => {\n                if (typeof obj[key] === 'object') {\n                    result[key] = this.copyObject(obj[key]);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-boolean-editor',\n    templateUrl: './boolean.editor.html',\n    styleUrls: ['./boolean.editor.scss']\n})\nexport class BooleanEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: boolean = (<HTMLInputElement> event).checked;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-date-editor',\n    templateUrl: './date.editor.html',\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    styleUrls: ['./date.editor.scss']\n})\nexport class DateEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'DD-MM-YYYY';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), 'YYYY-MM-DD');\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            let momentDate = moment(newDateValue.value, this.DATE_FORMAT, true);\n\n            if (!momentDate.isValid()) {\n                this.row.value[this.column.id] = '';\n            } else {\n                this.row.value[this.column.id] = `${momentDate.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                this.table.flushValue();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\n\n@Component({\n    selector: 'adf-datetime-editor',\n    templateUrl: './datetime.editor.html',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    styleUrls: ['./datetime.editor.scss']\n})\nexport class DateTimeEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'D-M-YYYY hh:mm A';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_FORMAT);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const newValue = moment(newDateValue.value, this.DATE_FORMAT);\n            this.row.value[this.column.id] = newDateValue.value.format(this.DATE_FORMAT);\n            this.value = newValue;\n            this.table.flushValue();\n        } else if (newDateValue) {\n            const newValue = moment(newDateValue, this.DATE_FORMAT);\n            this.value = newValue;\n            this.row.value[this.column.id] = newDateValue;\n            this.table.flushValue();\n        } else {\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../../../services/log.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormService } from './../../../../../services/form.service';\nimport { DynamicTableColumnOption } from './../../dynamic-table-column-option.model';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-dropdown-editor',\n    templateUrl: './dropdown.editor.html',\n    styleUrls: ['./dropdown.editor.scss']\n})\nexport class DropdownEditorComponent implements OnInit {\n\n    value: any = null;\n    options: DynamicTableColumnOption[] = [];\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        let field = this.table.field;\n        if (field) {\n            if (this.column.optionType === 'rest') {\n                if (this.table.form && this.table.form.taskId) {\n                    this.getValuesByTaskId(field);\n                } else {\n                    this.getValuesByProcessDefinitionId(field);\n                }\n            } else {\n                this.options = this.column.options || [];\n                this.value = this.table.getCellValue(this.row, this.column);\n            }\n        }\n    }\n\n    getValuesByTaskId(field) {\n        this.formService\n            .getRestFieldValuesColumn(\n                field.form.taskId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId(field) {\n        this.formService\n            .getRestFieldValuesColumnByProcessId(\n                field.form.processDefinitionId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event).value;\n        value = column.options.find((opt) => opt.name === value);\n        row.value[column.id] = value;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './../dynamic-table-column.model';\nimport { DynamicTableRow } from './../dynamic-table-row.model';\nimport { DynamicTableModel } from './../dynamic-table.widget.model';\n\n@Component({\n    selector: 'row-editor',\n    templateUrl: './row.editor.html',\n    styleUrls: ['./row.editor.css']\n})\nexport class RowEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    @Output()\n    save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n\n    validationSummary: DynamicRowValidationSummary;\n\n    constructor() {\n        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });\n    }\n\n    onCancelChanges() {\n        this.cancel.emit({\n            table: this.table,\n            row: this.row,\n            column: this.column\n        });\n    }\n\n    onSaveChanges() {\n        this.validate();\n        if (this.isValid()) {\n            this.save.emit({\n                table: this.table,\n                row: this.row,\n                column: this.column\n            });\n        }\n    }\n\n    private isValid(): boolean {\n        return this.validationSummary && this.validationSummary.isValid;\n    }\n\n    private validate() {\n        this.validationSummary = this.table.validateRow(this.row);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-text-editor',\n    templateUrl: './text.editor.html',\n    styleUrls: ['./text.editor.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    displayName: string;\n\n    ngOnInit() {\n        this.displayName = this.table.getDisplayText(this.column);\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event.target).value;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ErrorMessageModel } from '../core/index';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'error-widget',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n            transition('void => enter', [\n                style({opacity: 0, transform: 'translateY(-100%)'}),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ErrorWidgetComponent extends WidgetComponent implements OnChanges {\n\n    @Input()\n    error: ErrorMessageModel;\n\n    @Input()\n    required: string;\n\n    translateParameters: any = null;\n\n    _subscriptAnimationState: string = '';\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['required']) {\n            this.required = changes.required.currentValue;\n            this._subscriptAnimationState = 'enter';\n        }\n        if (changes['error'] && changes['error'].currentValue) {\n            if (changes.error.currentValue.isActive()) {\n                this.error = changes.error.currentValue;\n                this.translateParameters = this.error.getAttributesAsJsonObj();\n                this._subscriptAnimationState = 'enter';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from './../core/group.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'functional-group-widget',\n    templateUrl: './functional-group.widget.html',\n    styleUrls: ['./functional-group.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunctionalGroupWidgetComponent extends WidgetComponent implements OnInit {\n\n    value: string;\n    oldValue: string;\n    groups: GroupModel[] = [];\n    minTermLength: number = 1;\n    groupId: string;\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            let group = this.field.value;\n            if (group) {\n                this.value = group.name;\n            }\n\n            let params = this.field.params;\n            if (params && params['restrictWithGroup']) {\n                let restrictWithGroup = <GroupModel> params['restrictWithGroup'];\n                this.groupId = restrictWithGroup.id;\n            }\n\n            // Load auto-completion for previously saved value\n            if (this.value) {\n                this.formService\n                    .getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((groupModel: GroupModel[]) => this.groups = groupModel || []);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.length >= this.minTermLength  && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                this.oldValue = this.value;\n                this.formService.getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((group: GroupModel[]) => {\n                        this.groups = group || [];\n                    });\n            }\n        }\n    }\n\n    flushValue() {\n        let option = this.groups.find((item) => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());\n\n        if (option) {\n            this.field.value = option;\n            this.value = option.name;\n        } else {\n            this.field.value = null;\n            this.value = null;\n        }\n\n        this.field.updateForm();\n    }\n\n    onItemClick(item: GroupModel, event: Event) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    onItemSelect(item: GroupModel) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'hyperlink-widget',\n    templateUrl: './hyperlink.widget.html',\n    styleUrls: ['./hyperlink.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HyperlinkWidgetComponent extends WidgetComponent implements OnInit {\n\n    linkUrl: string = WidgetComponent.DEFAULT_HYPERLINK_URL;\n    linkText: string = null;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.linkUrl = this.getHyperlinkUrl(this.field);\n            this.linkText = this.getHyperlinkText(this.field);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'multiline-text-widget',\n    templateUrl: './multiline-text.widget.html',\n    styleUrls: ['./multiline-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultilineTextWidgetComponentComponent extends WidgetComponent  {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename   */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'number-widget',\n    templateUrl: './number.widget.html',\n    styleUrls: ['./number.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about users across all tasks.\n     * @param taskId ID of the task\n     * @param searchWord Filter text to search for\n     * @returns Array of user information objects\n     */\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        let option = { excludeTaskId: taskId, filter: searchWord };\n        return from(this.getWorkflowUserApi(option))\n            .pipe(\n                map((response: any) => <UserProcessModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the profile picture URL for the specified user.\n     * @param user The target user\n     * @returns Profile picture URL\n     */\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    /**\n     * Sets a user to be involved with a task.\n     * @param taskId ID of the target task\n     * @param idToInvolve ID of the user to involve\n     * @returns Empty response when the update completes\n     */\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        let node = {userId: idToInvolve};\n        return from<UserProcessModel[]>(this.involveUserToTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Removes a user who is currently involved with a task.\n     * @param taskId ID of the target task\n     * @param idToRemove ID of the user to remove\n     * @returns Empty response when the update completes\n     */\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        let node = {userId: idToRemove};\n        return from<UserProcessModel[]>(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { PeopleProcessService } from '../../../../services/people-process.service';\nimport { UserProcessModel } from '../../../../models';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from '../core/group.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport {\n    catchError,\n    distinctUntilChanged,\n    map,\n    switchMap,\n    tap\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'people-widget',\n    templateUrl: './people.widget.html',\n    styleUrls: ['./people.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleWidgetComponent extends WidgetComponent implements OnInit {\n\n    @ViewChild('inputValue')\n    input: ElementRef;\n\n    @Output()\n    peopleSelected: EventEmitter<number>;\n\n    groupId: string;\n    value: any;\n\n    searchTerm = new FormControl();\n    errorMsg = '';\n    searchTerms$: Observable<any> = this.searchTerm.valueChanges;\n\n    users$ = this.searchTerms$.pipe(\n        tap(() => {\n            this.errorMsg = '';\n        }),\n        distinctUntilChanged(),\n        switchMap((searchTerm) => {\n            let value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;\n            return this.formService.getWorkflowUsers(value, this.groupId)\n                .pipe(\n                    catchError((err) => {\n                        this.errorMsg = err.message;\n                        return of();\n                    })\n                );\n        }),\n        map((list: UserProcessModel[]) => {\n            let value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;\n            this.checkUserAndValidateForm(list, value);\n            return list;\n        })\n    );\n\n    constructor(public formService: FormService, public peopleProcessService: PeopleProcessService) {\n        super(formService);\n        this.peopleSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            if (this.field.value) {\n                this.searchTerm.setValue(this.field.value);\n            }\n            if (this.field.readOnly) {\n                this.searchTerm.disable();\n            }\n            let params = this.field.params;\n            if (params && params.restrictWithGroup) {\n                let restrictWithGroup = <GroupModel> params.restrictWithGroup;\n                this.groupId = restrictWithGroup.id;\n            }\n        }\n    }\n\n    checkUserAndValidateForm(list, value) {\n        const isValidUser = this.isValidUser(list, value);\n        if (isValidUser || value === '') {\n            this.field.validationSummary.message = '';\n            this.field.validate();\n            this.field.form.validateForm();\n        } else {\n            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            this.field.markAsInvalid();\n            this.field.form.markAsInvalid();\n        }\n    }\n\n    isValidUser(users: UserProcessModel[], name: string) {\n        if (users) {\n            return users.find((user) => {\n                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();\n                if (selectedUser) {\n                    this.peopleSelected.emit(user && user.id || undefined);\n                }\n                return selectedUser;\n            });\n        }\n    }\n\n    getDisplayName(model: UserProcessModel) {\n        if (model) {\n            let displayName = `${model.firstName || ''} ${model.lastName || ''}`;\n            return displayName.trim();\n        }\n        return '';\n    }\n\n    onItemSelect(item: UserProcessModel) {\n        if (item) {\n            this.field.value = item;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'radio-buttons-widget',\n    templateUrl: './radio-buttons.widget.html',\n    styleUrls: ['./radio-buttons.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getOptionsByTaskId();\n            } else {\n                this.getOptionsByProcessDefinitionId();\n            }\n        }\n    }\n\n    getOptionsByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionsByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable: component-selector no-use-before-declare no-input-rename  */\n\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    OnChanges,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputMaskDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-text-mask], [textMask]',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class InputMaskDirective implements OnChanges, ControlValueAccessor {\n\n    /** Object defining mask and \"reversed\" status. */\n    @Input('textMask') inputMask: {\n        mask: '',\n        isReversed: false\n    };\n\n    private translationMask = {\n        '0': { pattern: /\\d/ },\n        '9': { pattern: /\\d/, optional: true },\n        '#': { pattern: /\\d/, recursive: true },\n        'A': { pattern: /[a-zA-Z0-9]/ },\n        'S': { pattern: /[a-zA-Z]/ }\n    };\n\n    private byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];\n    private value;\n    private invalidCharacters = [];\n\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n\n    _onChange = (_: any) => {\n    }\n\n    _onTouched = () => {\n    }\n\n    @HostListener('input', ['$event'])\n    @HostListener('keyup', ['$event']) onTextInput(event: KeyboardEvent) {\n        if (this.inputMask && this.inputMask.mask) {\n            this.maskValue(this.el.nativeElement.value, this.el.nativeElement.selectionStart,\n                this.inputMask.mask, this.inputMask.isReversed, event.keyCode);\n        } else {\n            this._onChange(this.el.nativeElement.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['inputMask'] && changes['inputMask'].currentValue['mask']) {\n            this.inputMask = changes['inputMask'].currentValue;\n        }\n    }\n\n    writeValue(value: any) {\n        this.el.nativeElement.value = value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private maskValue(actualValue, startCaret, maskToApply, isMaskReversed, keyCode) {\n        if (this.byPassKeys.indexOf(keyCode) === -1) {\n            let value = this.getMasked(false, actualValue, maskToApply, isMaskReversed);\n            let calculatedCaret = this.calculateCaretPosition(startCaret, actualValue, keyCode);\n            this.render.setAttribute(this.el.nativeElement, 'value', value);\n            this.el.nativeElement.value = value;\n            this.setValue(value);\n            this._onChange(value);\n            this.setCaretPosition(calculatedCaret);\n        }\n    }\n\n    private setCaretPosition(caretPosition) {\n        this.el.nativeElement.moveStart = caretPosition;\n        this.el.nativeElement.moveEnd = caretPosition;\n    }\n\n    calculateCaretPosition(caretPosition, newValue, keyCode) {\n        let newValueLength = newValue.length;\n        let oldValue = this.getValue() || '';\n        let oldValueLength = oldValue.length;\n\n        if (keyCode === 8 && oldValue !== newValue) {\n            caretPosition = caretPosition - (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n        } else if (oldValue !== newValue) {\n            if (caretPosition >= oldValueLength) {\n                caretPosition = newValueLength;\n            } else {\n                caretPosition = caretPosition + (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n            }\n        }\n        return caretPosition;\n    }\n\n    getMasked(skipMaskChars, val, mask, isReversed = false) {\n        let buf = [],\n            value = val,\n            maskIndex = 0,\n            maskLen = mask.length,\n            valueIndex = 0,\n            valueLength = value.length,\n            offset = 1,\n            addMethod = 'push',\n            resetPos = -1,\n            lastMaskChar,\n            lastUntranslatedMaskChar,\n            check;\n\n        if (isReversed) {\n            addMethod = 'unshift';\n            offset = -1;\n            lastMaskChar = 0;\n            maskIndex = maskLen - 1;\n            valueIndex = valueLength - 1;\n        } else {\n            lastMaskChar = maskLen - 1;\n        }\n        check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        while (check) {\n            let maskDigit = mask.charAt(maskIndex),\n                valDigit = value.charAt(valueIndex),\n                translation = this.translationMask[maskDigit];\n\n            if (translation) {\n                if (valDigit.match(translation.pattern)) {\n                    buf[addMethod](valDigit);\n                    if (translation.recursive) {\n                        if (resetPos === -1) {\n                            resetPos = maskIndex;\n                        } else if (maskIndex === lastMaskChar) {\n                            maskIndex = resetPos - offset;\n                        }\n                        if (lastMaskChar === resetPos) {\n                            maskIndex -= offset;\n                        }\n                    }\n                    maskIndex += offset;\n                } else if (valDigit === lastUntranslatedMaskChar) {\n                    lastUntranslatedMaskChar = undefined;\n                } else if (translation.optional) {\n                    maskIndex += offset;\n                    valueIndex -= offset;\n                } else {\n                    this.invalidCharacters.push({\n                        index: valueIndex,\n                        digit: valDigit,\n                        translated: translation.pattern\n                    });\n                }\n                valueIndex += offset;\n            } else {\n                if (!skipMaskChars) {\n                    buf[addMethod](maskDigit);\n                }\n                if (valDigit === maskDigit) {\n                    valueIndex += offset;\n                } else {\n                    lastUntranslatedMaskChar = maskDigit;\n                }\n                maskIndex += offset;\n            }\n            check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        }\n\n        let lastMaskCharDigit = mask.charAt(lastMaskChar);\n        if (maskLen === valueLength + 1 && !this.translationMask[lastMaskCharDigit]) {\n            buf.push(lastMaskCharDigit);\n        }\n\n        return buf.join('');\n    }\n\n    private isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength) {\n        let check = false;\n        if (isReversed) {\n            check = (maskIndex > -1) && (valueIndex > -1);\n        } else {\n            check = (maskIndex < maskLen) && (valueIndex < valueLength);\n        }\n        return check;\n    }\n\n    private setValue(value) {\n        this.value = value;\n    }\n\n    private getValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'text-widget',\n    templateUrl: './text.widget.html',\n    styleUrls: ['./text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TextWidgetComponent extends WidgetComponent implements OnInit {\n\n    mask: string;\n    placeholder: string;\n    isMaskReversed: boolean;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.params) {\n            this.mask = this.field.params['inputMask'];\n            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;\n            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'typeahead-widget',\n    templateUrl: './typeahead.widget.html',\n    styleUrls: ['./typeahead.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeaheadWidgetComponent extends WidgetComponent implements OnInit {\n\n    minTermLength: number = 1;\n    value: string;\n    oldValue: string;\n    options: FormFieldOption[] = [];\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.form.taskId && this.field.restUrl) {\n            this.getValuesByTaskId();\n        } else if (this.field.form.processDefinitionId && this.field.restUrl) {\n            this.getValuesByProcessDefinitionId();\n        }\n        if (this.isReadOnlyType()) {\n            this.value = this.field.value;\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n            this.field.form.taskId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                let options = formFieldOption || [];\n                this.field.options = options;\n\n                let fieldValue = this.field.value;\n                if (fieldValue) {\n                    let toSelect = options.find((item) => item.id === fieldValue || item.name.toLocaleLowerCase() === fieldValue.toLocaleLowerCase());\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n            this.field.form.processDefinitionId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                let options = formFieldOption || [];\n                this.field.options = options;\n\n                let fieldValue = this.field.value;\n                if (fieldValue) {\n                    let toSelect = options.find((item) => item.id === fieldValue);\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getOptions(): FormFieldOption[] {\n        let val = this.value.trim().toLocaleLowerCase();\n        return this.field.options.filter((item) => {\n            let name = item.name.toLocaleLowerCase();\n            return name.indexOf(val) > -1;\n        });\n    }\n\n    isValidOptionName(optionName: string): boolean {\n        let option = this.field.options.find((item) => item.name && item.name.toLocaleLowerCase() === optionName.toLocaleLowerCase());\n        return option ? true : false;\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.trim().length >= this.minTermLength && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                if (this.value.length >= this.minTermLength) {\n                    this.options = this.getOptions();\n                    this.oldValue = this.value;\n                    if (this.isValidOptionName(this.value)) {\n                        this.field.value = this.options[0].id;\n                    }\n                }\n            }\n        }\n        if (this.isValueDefined() && this.value.trim().length === 0) {\n            this.oldValue = this.value;\n            this.options = [];\n        }\n    }\n\n    onItemSelect(item: FormFieldOption) {\n        if (item) {\n            this.field.value = item.id;\n            this.value = item.name;\n            this.onFieldChanged(this.field);\n        }\n    }\n\n    validate() {\n        this.field.value = this.value;\n    }\n\n    isValueDefined() {\n        return this.value !== null && this.value !== undefined;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ThumbnailService } from '../../../../services/thumbnail.service';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormService } from '../../../services/form.service';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'upload-widget',\n    templateUrl: './upload.widget.html',\n    styleUrls: ['./upload.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(public formService: FormService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService,\n                public processContentService: ProcessContentService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        let files = event.target.files;\n        let filesSaved = [];\n\n        if (this.field.json.value) {\n            filesSaved = [...this.field.json.value];\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap((file) => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => filesSaved.push(res),\n                    () => this.logService.error('Error uploading file. See console output for more details.'),\n                    () => {\n                        this.field.value = filesSaved;\n                        this.field.json.value = filesSaved;\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private uploadRawContent(file): Observable<any> {\n        return this.processContentService.createTemporaryRawRelatedContent(file)\n            .pipe(\n                map((response: any) => {\n                    this.logService.info(response);\n                    response.contentBlob = file;\n                    return response;\n                })\n            );\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    private removeElementFromList(file) {\n        let index = this.field.value.indexOf(file);\n\n        if (index !== -1) {\n            this.field.value.splice(index, 1);\n            this.field.json.value = this.field.value;\n            this.field.updateForm();\n        }\n\n        this.hasFile = this.field.value.length > 0;\n\n        this.resetFormValueWithNoFiles();\n    }\n\n    private resetFormValueWithNoFiles() {\n        if (this.field.value.length === 0) {\n            this.field.value = [];\n            this.field.json.value = [];\n        }\n    }\n\n    getIcon(mimeType) {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    fileClicked(contentLinkModel: any): void {\n        const file = new ContentLinkModel(contentLinkModel);\n        let fetch = this.processContentService.getContentPreview(file.id);\n        if (file.isTypeImage() || file.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(file.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                file.contentBlob = blob;\n                this.formService.formContentClicked.next(file);\n            },\n            () => {\n                this.logService.error('Unable to send event for file ' + file.name);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { FormService } from './../../../services/form.service';\nimport { WidgetComponent } from './../widget.component';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'date-time-widget',\n    templateUrl: './date-time.widget.html',\n    styleUrls: ['./date-time.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTimeWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContainerWidgetComponent } from './container/container.widget';\nimport { TabsWidgetComponent } from './tabs/tabs.widget';\nimport { UnknownWidgetComponent } from './unknown/unknown.widget';\n\nimport { AmountWidgetComponent } from './amount/amount.widget';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.widget';\nimport { DateWidgetComponent } from './date/date.widget';\nimport { DisplayTextWidgetComponentComponent } from './display-text/display-text.widget';\nimport { DocumentWidgetComponent } from './document/document.widget';\nimport { DropdownWidgetComponent } from './dropdown/dropdown.widget';\nimport { DynamicTableWidgetComponent } from './dynamic-table/dynamic-table.widget';\nimport { BooleanEditorComponent } from './dynamic-table/editors/boolean/boolean.editor';\nimport { DateEditorComponent } from './dynamic-table/editors/date/date.editor';\nimport { DateTimeEditorComponent } from './dynamic-table/editors/datetime/datetime.editor';\nimport { DropdownEditorComponent } from './dynamic-table/editors/dropdown/dropdown.editor';\nimport { RowEditorComponent } from './dynamic-table/editors/row.editor';\nimport { TextEditorComponent } from './dynamic-table/editors/text/text.editor';\nimport { ErrorWidgetComponent } from './error/error.component';\nimport { FunctionalGroupWidgetComponent } from './functional-group/functional-group.widget';\nimport { HyperlinkWidgetComponent } from './hyperlink/hyperlink.widget';\nimport { MultilineTextWidgetComponentComponent } from './multiline-text/multiline-text.widget';\nimport { NumberWidgetComponent } from './number/number.widget';\nimport { PeopleWidgetComponent } from './people/people.widget';\nimport { RadioButtonsWidgetComponent } from './radio-buttons/radio-buttons.widget';\nimport { InputMaskDirective } from './text/text-mask.component';\nimport { TextWidgetComponent } from './text/text.widget';\nimport { TypeaheadWidgetComponent } from './typeahead/typeahead.widget';\nimport { UploadWidgetComponent } from './upload/upload.widget';\nimport { DateTimeWidgetComponent } from './date-time/date-time.widget';\n\n// core\nexport * from './widget.component';\nexport * from './core/index';\n\n// containers\nexport * from './tabs/tabs.widget';\nexport * from './container/container.widget';\n\n// primitives\nexport * from './unknown/unknown.widget';\nexport * from './text/text.widget';\nexport * from './number/number.widget';\nexport * from './checkbox/checkbox.widget';\nexport * from './multiline-text/multiline-text.widget';\nexport * from './dropdown/dropdown.widget';\nexport * from './hyperlink/hyperlink.widget';\nexport * from './radio-buttons/radio-buttons.widget';\nexport * from './display-text/display-text.widget';\nexport * from './upload/upload.widget';\nexport * from './typeahead/typeahead.widget';\nexport * from './functional-group/functional-group.widget';\nexport * from './people/people.widget';\nexport * from './date/date.widget';\nexport * from './amount/amount.widget';\nexport * from './dynamic-table/dynamic-table.widget';\nexport * from './error/error.component';\nexport * from './document/document.widget';\nexport * from './date-time/date-time.widget';\n\n// editors (dynamic table)\nexport * from './dynamic-table/dynamic-table.widget.model';\nexport * from './dynamic-table/editors/row.editor';\nexport * from './dynamic-table/editors/date/date.editor';\nexport * from './dynamic-table/editors/dropdown/dropdown.editor';\nexport * from './dynamic-table/editors/boolean/boolean.editor';\nexport * from './dynamic-table/editors/text/text.editor';\nexport * from './dynamic-table/editors/datetime/datetime.editor';\nexport * from './text/text-mask.component';\n\nexport const WIDGET_DIRECTIVES: any[] = [\n    UnknownWidgetComponent,\n    TabsWidgetComponent,\n    ContainerWidgetComponent,\n    TextWidgetComponent,\n    NumberWidgetComponent,\n    CheckboxWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    DropdownWidgetComponent,\n    HyperlinkWidgetComponent,\n    RadioButtonsWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    UploadWidgetComponent,\n    TypeaheadWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    PeopleWidgetComponent,\n    DateWidgetComponent,\n    AmountWidgetComponent,\n    DynamicTableWidgetComponent,\n    DateEditorComponent,\n    DropdownEditorComponent,\n    BooleanEditorComponent,\n    TextEditorComponent,\n    RowEditorComponent,\n    ErrorWidgetComponent,\n    DocumentWidgetComponent,\n    DateTimeWidgetComponent,\n    DateTimeEditorComponent\n];\n\nexport const MASK_DIRECTIVE: any[] = [\n    InputMaskDirective\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\nimport { Injectable, Type } from '@angular/core';\n\nimport {\n    AmountWidgetComponent,\n    CheckboxWidgetComponent,\n    ContainerWidgetComponent,\n    DateWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    DocumentWidgetComponent,\n    DropdownWidgetComponent,\n    DynamicTableWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    HyperlinkWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    NumberWidgetComponent,\n    PeopleWidgetComponent,\n    RadioButtonsWidgetComponent,\n    TextWidgetComponent,\n    TypeaheadWidgetComponent,\n    UnknownWidgetComponent,\n    UploadWidgetComponent,\n    DateTimeWidgetComponent\n} from './../components/widgets/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormRenderingService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = UnknownWidgetComponent;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'string': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'integer': DynamicComponentResolver.fromType(NumberWidgetComponent),\n        'multi-line-text': DynamicComponentResolver.fromType(MultilineTextWidgetComponentComponent),\n        'boolean': DynamicComponentResolver.fromType(CheckboxWidgetComponent),\n        'dropdown': DynamicComponentResolver.fromType(DropdownWidgetComponent),\n        'date': DynamicComponentResolver.fromType(DateWidgetComponent),\n        'amount': DynamicComponentResolver.fromType(AmountWidgetComponent),\n        'radio-buttons': DynamicComponentResolver.fromType(RadioButtonsWidgetComponent),\n        'hyperlink': DynamicComponentResolver.fromType(HyperlinkWidgetComponent),\n        'readonly-text': DynamicComponentResolver.fromType(DisplayTextWidgetComponentComponent),\n        'typeahead': DynamicComponentResolver.fromType(TypeaheadWidgetComponent),\n        'people': DynamicComponentResolver.fromType(PeopleWidgetComponent),\n        'functional-group': DynamicComponentResolver.fromType(FunctionalGroupWidgetComponent),\n        'dynamic-table': DynamicComponentResolver.fromType(DynamicTableWidgetComponent),\n        'container': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'group': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'document': DynamicComponentResolver.fromType(DocumentWidgetComponent),\n        'upload':  DynamicComponentResolver.fromType(UploadWidgetComponent),\n        'datetime':  DynamicComponentResolver.fromType(DateTimeWidgetComponent)\n    };\n\n    constructor() {\n        super();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiCompatibility, MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ActivitiContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]> {\n        let apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        let accountShortId = accountId.replace('alfresco-', '');\n        return from(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of all the repositories configured\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoRepositories(tenantId: number, includeAccount: boolean): Observable<any> {\n        let apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const opts = {\n            tenantId: tenantId,\n            includeAccounts: includeAccount\n        };\n        return from(apiService.activiti.alfrescoApi.getRepositories(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param node\n     * @param siteId\n     */\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent({\n            link: true,\n            name: node.title,\n            simpleType: node.simpleType,\n            source: accountId,\n            sourceId: node.id + '@' + siteId\n        }))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    applyAlfrescoNode(node: MinimalNode, siteId: string, accountId: string) {\n        let apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const currentSideId = siteId ? siteId : this.getSiteNameFromNodePath(node);\n        const params: RelatedContentRepresentation = {\n            source: accountId,\n            mimeType: node.content.mimeType,\n            sourceId: node.id + ';' + node.properties['cm:versionLabel'] + '@' + currentSideId,\n            name: node.name,\n            link: false\n        };\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent(params))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getSiteNameFromNodePath(node: MinimalNode): string {\n        let siteName = '';\n        if (node.path) {\n            const foundNode = node.path\n                .elements.find((pathNode: MinimalNode) =>\n                    pathNode.nodeType === 'st:site' &&\n                    pathNode.name !== 'Sites');\n            siteName = foundNode ? foundNode.name : '';\n        }\n        return siteName.toLocaleLowerCase();\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    handleError(error: any): Observable<any> {\n        let errMsg = ActivitiContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ActivitiContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-form-custom-button], [form-custom-button]' }) export class StartFormCustomButtonDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Compiler,\n    Component, ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { FormRenderingService } from './../../services/form-rendering.service';\nimport { WidgetVisibilityService } from './../../services/widget-visibility.service';\nimport { FormFieldModel } from './../widgets/core/form-field.model';\nimport { WidgetComponent } from './../widgets/widget.component';\n\ndeclare var adf: any;\n\n@Component({\n    selector: 'adf-form-field',\n    template: `\n        <div [id]=\"'field-'+field?.id+'-container'\"\n            [hidden]=\"!field?.isVisible\"\n            [class.adf-focus]=\"focus\"\n            (focusin)=\"focusToggle()\"\n            (focusout)=\"focusToggle()\">\n            <div #container></div>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n\n    @ViewChild('container', { read: ViewContainerRef })\n    container: ViewContainerRef;\n\n    /** Contains all the necessary data needed to determine what UI Widget\n     * to use when rendering the field in the form. You would typically not\n     * create this data manually but instead create the form in APS and export\n     * it to get to all the `FormFieldModel` definitions.\n     */\n    @Input()\n    field: FormFieldModel = null;\n\n    componentRef: ComponentRef<{}>;\n\n    focus: boolean = false;\n\n    constructor(private formRenderingService: FormRenderingService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private visibilityService: WidgetVisibilityService,\n                private compiler: Compiler) {\n    }\n\n    ngOnInit() {\n        const w: any = window;\n        if (w.adf === undefined) {\n            w.adf = {};\n        }\n        let originalField = this.getField();\n        if (originalField) {\n            let customTemplate = this.field.form.customFieldTemplates[originalField.type];\n            if (customTemplate && this.hasController(originalField.type)) {\n                let factory = this.getComponentFactorySync(originalField.type, customTemplate);\n                this.componentRef = this.container.createComponent(factory);\n                let instance: any = this.componentRef.instance;\n                if (instance) {\n                    instance.field = originalField;\n                }\n            } else {\n                let componentType = this.formRenderingService.resolveComponentType(originalField);\n                if (componentType) {\n                    let factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n                    this.componentRef = this.container.createComponent(factory);\n                    let instance = <WidgetComponent> this.componentRef.instance;\n                    instance.field = this.field;\n                    instance.fieldChanged.subscribe((field) => {\n                        if (field && this.field.form) {\n                            this.visibilityService.refreshVisibility(field.form);\n                            field.form.onFormFieldChanged(field);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private getField(): FormFieldModel {\n        if (this.field && this.field.params) {\n            const wrappedField = this.field.params.field;\n            if (wrappedField && wrappedField.type) {\n                return wrappedField;\n            }\n        }\n        return this.field;\n    }\n\n    private hasController(type: string): boolean {\n        return (adf && adf.components && adf.components[type]);\n    }\n\n    private getComponentFactorySync(type: string, template: string): ComponentFactory<any> {\n        let componentInfo = adf.components[type];\n\n        if (componentInfo.factory) {\n            return componentInfo.factory;\n        }\n\n        let metadata = {\n            selector: `runtime-component-${type}`,\n            template: template\n        };\n\n        let factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);\n        componentInfo.factory = factory;\n        return factory;\n    }\n\n    private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass: any): ComponentFactory<any> {\n        const cmpClass = componentClass || class RuntimeComponent {\n        };\n        const decoratedCmp = Component(metadata)(cmpClass);\n\n        @NgModule({ imports: [], declarations: [decoratedCmp] })\n        class RuntimeComponentModule {\n        }\n\n        let module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n        return module.componentFactories.find((x) => x.componentType === decoratedCmp);\n    }\n\n    focusToggle() {\n        this.focus = !this.focus;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from '../material.module';\n\nimport { MASK_DIRECTIVE, WIDGET_DIRECTIVES } from './components/widgets/index';\n\nimport { StartFormCustomButtonDirective } from './components/form-custom-button.directive';\n\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormListComponent } from './components/form-list.component';\nimport { FormComponent } from './components/form.component';\nimport { StartFormComponent } from './components/start-form.component';\nimport { ContentWidgetComponent } from './components/widgets/content/content.widget';\nimport { WidgetComponent } from './components/widgets/widget.component';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DataTableModule,\n        HttpClientModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        PipeModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormComponent,\n        FormListComponent,\n        StartFormComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES,\n        ...MASK_DIRECTIVE,\n        WidgetComponent\n    ],\n    entryComponents: [\n        ...WIDGET_DIRECTIVES\n    ],\n    exports: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormComponent,\n        FormListComponent,\n        StartFormComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES\n    ]\n})\nexport class FormModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-content'\n})\nexport class SidenavLayoutContentDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-header'\n})\nexport class SidenavLayoutHeaderDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-navigation'\n})\nexport class SidenavLayoutNavigationDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChild, Input, Output, OnInit, AfterViewInit, ViewChild, OnDestroy, TemplateRef, EventEmitter } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n    selector: 'adf-sidenav-layout',\n    templateUrl: './sidenav-layout.component.html',\n    styleUrls: ['./sidenav-layout.component.scss']\n})\nexport class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    static STEP_OVER = 600;\n\n    /** The side that the drawer is attached to. Possible values are 'start' and 'end'. */\n    @Input() position = 'start';\n\n    /** Minimum size of the navigation region. */\n    @Input() sidenavMin: number;\n\n    /** Maximum size of the navigation region. */\n    @Input() sidenavMax: number;\n\n    /** Screen size at which display switches from small screen to large screen configuration. */\n    @Input() stepOver: number;\n\n    /** Toggles showing/hiding the navigation region. */\n    @Input() hideSidenav = false;\n\n    /** Should the navigation region be expanded initially? */\n    @Input() expandedSidenav = true;\n\n    /** Emitted when the menu toggle and the collapsed/expanded state of the sideNav changes. */\n    @Output() expanded = new EventEmitter<boolean>();\n\n    @ContentChild(SidenavLayoutHeaderDirective) headerDirective: SidenavLayoutHeaderDirective;\n    @ContentChild(SidenavLayoutNavigationDirective) navigationDirective: SidenavLayoutNavigationDirective;\n    @ContentChild(SidenavLayoutContentDirective) contentDirective: SidenavLayoutContentDirective;\n\n    private menuOpenStateSubject: BehaviorSubject<boolean>;\n    public menuOpenState$: Observable<boolean>;\n\n    @ViewChild('container') container: any;\n    @ViewChild('emptyTemplate') emptyTemplate: any;\n\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized;\n\n    templateContext = {\n        toggleMenu: () => {},\n        isMenuMinimized: () => this.isMenuMinimized\n    };\n\n    constructor(private mediaMatcher: MediaMatcher) {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        const initialMenuState = !this.expandedSidenav;\n\n        this.menuOpenStateSubject = new BehaviorSubject<boolean>(initialMenuState);\n        this.menuOpenState$ = this.menuOpenStateSubject.asObservable();\n\n        const stepOver = this.stepOver || SidenavLayoutComponent.STEP_OVER;\n        this.isMenuMinimized = initialMenuState;\n\n        this.mediaQueryList = this.mediaMatcher.matchMedia(`(max-width: ${stepOver}px)`);\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n    }\n\n    ngAfterViewInit() {\n        this.templateContext.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu() {\n        if (!this.mediaQueryList.matches) {\n            this.isMenuMinimized = !this.isMenuMinimized;\n        } else {\n            this.isMenuMinimized = false;\n        }\n\n        this.container.toggleMenu();\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n\n    get isMenuMinimized() {\n        return this._isMenuMinimized;\n    }\n\n    set isMenuMinimized(menuState: boolean) {\n        this._isMenuMinimized = menuState;\n        this.menuOpenStateSubject.next(!menuState);\n    }\n\n    get isHeaderInside() {\n        return this.mediaQueryList.matches;\n    }\n\n    get headerTemplate(): TemplateRef<any> {\n        return this.headerDirective && this.headerDirective.template || this.emptyTemplate;\n    }\n\n    get navigationTemplate(): TemplateRef<any> {\n        return this.navigationDirective && this.navigationDirective.template || this.emptyTemplate;\n    }\n\n    get contentTemplate(): TemplateRef<any> {\n        return this.contentDirective && this.contentDirective.template || this.emptyTemplate;\n    }\n\n    onMediaQueryChange() {\n        this.isMenuMinimized = false;\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trigger, transition, animate, style, state, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const sidenavAnimation: AnimationTriggerMetadata = trigger('sidenavAnimation', [\n    state('expanded', style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    state('compact',  style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationLeft: AnimationTriggerMetadata = trigger('contentAnimationLeft', [\n    state('expanded', style({ 'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationRight: AnimationTriggerMetadata = trigger('contentAnimationRight', [\n    state('expanded', style({ 'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { sidenavAnimation, contentAnimationLeft, contentAnimationRight } from '../../helpers/animations';\n\n@Component({\n    selector: 'adf-layout-container',\n    templateUrl: './layout-container.component.html',\n    styleUrls: ['./layout-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [sidenavAnimation, contentAnimationLeft, contentAnimationRight]\n})\nexport class LayoutContainerComponent implements OnInit, OnDestroy {\n    @Input() sidenavMin: number;\n    @Input() sidenavMax: number;\n\n    // \" | any\", because Safari throws an error otherwise...\n    @Input() mediaQueryList: MediaQueryList | any;\n\n    @Input() hideSidenav = false;\n    @Input() expandedSidenav = true;\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n    sidenavAnimationState: any;\n    contentAnimationState: any;\n\n    SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n    CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n\n    constructor() {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };\n\n        this.CONTENT_STATES.MOBILE = { value: 'expanded', params: { margin: 0 } };\n        this.CONTENT_STATES.EXPANDED = { value: 'expanded', params: { margin: this.sidenavMin } };\n        this.CONTENT_STATES.COMPACT = { value: 'compact', params: { margin: this.sidenavMax } };\n\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        if (this.isMobileScreenSize) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;\n            this.contentAnimationState = this.CONTENT_STATES.MOBILE;\n        } else if (this.expandedSidenav) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n            this.contentAnimationState = this.CONTENT_STATES.COMPACT;\n        } else {\n            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;\n            this.contentAnimationState = this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu(): void {\n        if (this.isMobileScreenSize) {\n            this.sidenav.toggle();\n        } else {\n            this.sidenavAnimationState = this.toggledSidenavAnimation;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    private get toggledSidenavAnimation() {\n        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED\n            ? this.SIDENAV_STATES.COMPACT\n            : this.SIDENAV_STATES.EXPANDED;\n    }\n\n    private get toggledContentAnimation() {\n        if (this.isMobileScreenSize) {\n            return this.CONTENT_STATES.MOBILE;\n        }\n\n        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {\n            return this.CONTENT_STATES.COMPACT;\n        } else {\n            return this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    get isMobileScreenSize(): boolean {\n        return this.mediaQueryList.matches;\n    }\n\n    private onMediaQueryChange() {\n        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n        this.contentAnimationState = this.toggledContentAnimation;\n    }\n\n    getContentAnimationStateLeft() {\n        if (this.position === 'start') {\n            return this.contentAnimationState;\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n\n    getContentAnimationStateRight() {\n        if (this.position === 'end') {\n            return this.contentAnimationState;\n\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-sidebar-action-menu',\n    templateUrl: './sidebar-action-menu.component.html',\n    styleUrls: ['./sidebar-action-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sidebar-action-menu' }\n})\n\nexport class SidebarActionMenuComponent {\n\n    /** The title of the sidebar action. */\n    @Input()\n    title: string;\n\n    /** Toggle the sidebar action menu on expand. */\n    @Input()\n    expanded: boolean;\n\n    /** Width in pixels for sidebar action menu options. */\n    @Input()\n    width: number = 272;\n\n    isExpanded(): boolean {\n        return this.expanded;\n    }\n}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' }) export class SidebarMenuDirective {}\n@Directive({ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' }) export class SidebarMenuTitleIconDirective { }\n@Directive({ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' }) export class SidebarMenuExpandIconDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'adf-layout-header',\n    templateUrl: './header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-layout-header' }\n})\nexport class HeaderLayoutComponent implements OnInit {\n    /** Title of the application. */\n    @Input() title: string;\n\n    /** Path to an image file for the application logo. */\n    @Input() logo: string;\n\n    /** The router link for the application logo, when clicked. */\n    @Input() redirectUrl: string | any[] = '/';\n\n    /** The tooltip text for the application logo. */\n    @Input() tooltip: string;\n\n    /**\n     * Background color for the header. It can be any hex color code or one\n     * of the Material theme colors: 'primary', 'accent' or 'warn'.\n     */\n    @Input() color: string;\n\n    /**\n     * Toggles whether the sidenav button will be displayed in the header\n     * or not.\n     */\n    @Input() showSidenavToggle: boolean = true;\n\n    /** Emitted when the sidenav button is clicked. */\n    @Output() clicked = new EventEmitter<any>();\n\n    /** The side of the page that the drawer is attached to (can be 'start' or 'end') */\n    @Input() position = 'start';\n\n    toggleMenu() {\n        this.clicked.emit(true);\n    }\n\n    ngOnInit() {\n        if (!this.logo) {\n            this.logo = './assets/images/logo.png';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';\nimport { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';\nimport { LayoutContainerComponent } from './components/layout-container/layout-container.component';\nimport { SidebarActionMenuComponent, SidebarMenuDirective,\n    SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';\nimport { HeaderLayoutComponent } from './components/header/header.component';\nimport { TranslateModule } from '@ngx-translate/core';\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        RouterModule,\n        TranslateModule.forChild()\n    ],\n    exports: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ],\n    declarations: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ]\n})\nexport class LayoutModule {}\nexport { LayoutModule as SidenavLayoutModule };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CommentModel } from '../models/comment.model';\nimport { EcmUserService } from '../userinfo/services/ecm-user.service';\nimport { PeopleProcessService } from '../services/people-process.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-comment-list',\n    templateUrl: './comment-list.component.html',\n    styleUrls: ['./comment-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class CommentListComponent {\n\n    /** The comments data used to populate the list. */\n    @Input()\n    comments: CommentModel[];\n\n    /** Emitted when the user clicks on one of the comment rows. */\n    @Output()\n    clickRow: EventEmitter<CommentModel> = new EventEmitter<CommentModel>();\n\n    selectedComment: CommentModel;\n\n    currentLocale;\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                public ecmUserService: EcmUserService,\n                public userPreferenceService: UserPreferencesService) {\n        userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.currentLocale = locale;\n        });\n    }\n\n    selectComment(comment: CommentModel): void {\n        if (this.selectedComment) {\n            this.selectedComment.isSelected = false;\n        }\n        comment.isSelected = true;\n        this.selectedComment = comment;\n        this.clickRow.emit(this.selectedComment);\n    }\n\n    getUserShortName(user: any): string {\n        let shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n\n    isPictureDefined(user: any): boolean {\n        return user.pictureId || user.avatarId;\n    }\n\n    getUserImage(user: any): string {\n        if (this.isAContentUsers(user)) {\n            return this.ecmUserService.getUserProfileImage(user.avatarId);\n        } else {\n            return this.peopleProcessService.getUserImage(user);\n        }\n    }\n\n    private isAContentUsers(user: any): boolean {\n        return user.avatarId;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class CommentModel {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: any;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ? obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from '@alfresco/js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number;\n    externalId?: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.id = input.id;\n            this.email = input.email || null;\n            this.firstName = input.firstName || null;\n            this.lastName = input.lastName || null;\n            this.pictureId = input.pictureId || null;\n            this.externalId = input.externalId || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a task.\n     * @param taskId ID of the target task\n     * @param message Text for the comment\n     * @returns Details about the comment\n     */\n    addTaskComment(taskId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().activiti.taskApi.addTaskComment({ message: message }, taskId))\n            .pipe(\n                map((response: CommentModel) => {\n                    return new CommentModel({\n                        id: response.id,\n                        message: response.message,\n                        created: response.created,\n                        createdBy: response.createdBy\n                    });\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a task.\n     * @param taskId ID of the target task\n     * @returns Details for each comment\n     */\n    getTaskComments(taskId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .pipe(\n                map((response: any) => {\n                    let comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        let user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @returns Details for each comment\n     */\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .pipe(\n                map((response: any) => {\n                    let comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        let user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a comment to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel> {\n        return from(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({ message: message }, processInstanceId)\n        ).pipe(\n            map((response: CommentModel) => {\n                return new CommentModel({\n                    id: response.id,\n                    message: response.message,\n                    created: response.created,\n                    createdBy: response.createdBy\n                });\n            }),\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { LogService } from '../services/log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentContentService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a node.\n     * @param nodeId ID of the target node\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addNodeComment(nodeId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().core.commentsApi.addComment(nodeId, {content: message}))\n            .pipe(\n                map((response: any) => {\n                    return new CommentModel({\n                        id: response.entry.id,\n                        message: response.entry.content,\n                        created: response.entry.createdAt,\n                        createdBy: response.entry.createdBy\n                    });\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a node.\n     * @param nodeId ID of the target node\n     * @returns Details for each comment\n     */\n    getNodeComments(nodeId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().core.commentsApi.getComments(nodeId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.list.entries.forEach((comment: any) => {\n                        comments.push(new CommentModel({\n                            id: comment.entry.id,\n                            message: comment.entry.content,\n                            created: comment.entry.createdAt,\n                            createdBy: comment.entry.createdBy\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentProcessService } from '../services/comment-process.service';\nimport { CommentContentService } from '../services/comment-content.service';\nimport { CommentModel } from '../models/comment.model';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnChanges {\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string;\n\n    /** The numeric ID of the node. */\n    @Input()\n    nodeId: string;\n\n    /** Are the comments read only? */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when an error occurs while displaying/adding a comment. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService, private commentContentService: CommentContentService) {\n        this.comment$ = new Observable<CommentModel>((observer) => this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.taskId = null;\n        this.nodeId = null;\n\n        this.taskId = changes['taskId'] ? changes['taskId'].currentValue : null;\n        this.nodeId = changes['nodeId'] ? changes['nodeId'].currentValue : null;\n\n        if (this.taskId || this.nodeId) {\n            this.getComments();\n        } else {\n            this.resetComments();\n        }\n    }\n\n    private getComments(): void {\n        this.resetComments();\n        if (this.isATask()) {\n            this.commentProcessService.getTaskComments(this.taskId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            let date1 = new Date(comment1.created);\n                            let date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((currentComment) => {\n                            this.commentObserver.next(currentComment);\n                        });\n                    }\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n\n        if (this.isANode()) {\n            this.commentContentService.getNodeComments(this.nodeId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            const comment = this.sanitize(this.message);\n\n            this.beingAdded = true;\n            if (this.isATask()) {\n                this.commentProcessService.addTaskComment(this.taskId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n\n            if (this.isANode()) {\n                this.commentContentService.addNodeComment(this.nodeId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    isATask(): boolean {\n        return this.taskId ? true : false;\n    }\n\n    isANode(): boolean {\n        return this.nodeId ? true : false;\n    }\n\n    private sanitize(input: string) {\n        return input.replace(/<[^>]+>/g, '')\n            .replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '')\n            .replace(/\\r?\\n/g, '<br/>');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\n\n@NgModule({\n    imports: [\n        PipeModule,\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        CommentListComponent,\n        CommentsComponent\n    ]\n})\nexport class CommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { MatMenuItem } from '@angular/material';\n\n@Component({\n    selector: 'adf-buttons-action-menu',\n    templateUrl: './buttons-menu.component.html',\n    styleUrls: ['./buttons-menu.component.scss']\n})\n\nexport class ButtonsMenuComponent implements  AfterContentInit {\n\n    @ContentChildren(MatMenuItem) buttons: QueryList<MatMenuItem>;\n\n    isMenuEmpty: boolean;\n\n    ngAfterContentInit() {\n        if (this.buttons.length > 0) {\n            this.isMenuEmpty = false;\n        } else {\n            this.isMenuEmpty = true;\n        }\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ButtonsMenuComponent } from './buttons-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule\n    ],\n    declarations: [\n        ButtonsMenuComponent\n    ],\n    exports: [\n        ButtonsMenuComponent\n    ]\n})\nexport class ButtonsMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-sorting-picker',\n    templateUrl: './sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sorting-picker' }\n})\nexport class SortingPickerComponent {\n\n    /** Available sorting options */\n    @Input()\n    options: Array<{key: string, label: string}> = [];\n\n    /** Currently selected option key */\n    @Input()\n    selected: string;\n\n    /** Current sorting direction */\n    @Input()\n    ascending = true;\n\n    /** Raised each time sorting key gets changed. */\n    @Output()\n    valueChange = new EventEmitter<string>();\n\n    /** Raised each time direction gets changed. */\n    @Output()\n    sortingChange = new EventEmitter<boolean>();\n\n    onOptionChanged(event: MatSelectChange) {\n        this.selected = event.value;\n        this.valueChange.emit(this.selected);\n    }\n\n    toggleSortDirection() {\n        this.ascending = !this.ascending;\n        this.sortingChange.emit(this.ascending);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { SortingPickerComponent } from './sorting-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        SortingPickerComponent\n    ],\n    exports: [\n        SortingPickerComponent\n    ]\n})\nexport class SortingPickerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewEncapsulation,\n    OnInit,\n    AfterContentChecked\n} from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-error-content',\n    templateUrl: './error-content.component.html',\n    styleUrls: ['./error-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-error-content' }\n})\nexport class ErrorContentComponent implements OnInit, AfterContentChecked {\n\n    /** Target URL for the secondary button. */\n    @Input()\n    secondaryButtonUrl: string = 'report-issue';\n\n    /** Target URL for the return button. */\n    @Input()\n    returnButtonUrl: string = '/';\n\n    /** Error code associated with this error. */\n    @Input()\n    errorCode: string = 'UNKNOWN';\n\n    hasSecondButton: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                if (params['id']) {\n                    this.errorCode = params['id'];\n                }\n            });\n        }\n    }\n\n    getTranslations() {\n        this.hasSecondButton = this.translateService.instant(\n            'ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;\n    }\n\n    ngAfterContentChecked() {\n        this.getTranslations();\n    }\n\n    onSecondButton() {\n        this.router.navigate(['/' + this.secondaryButtonUrl]);\n    }\n\n    onReturnButton() {\n        this.router.navigate(['/' + this.returnButtonUrl]);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-content',\n    templateUrl: './empty-content.component.html',\n    styleUrls: ['./empty-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-empty-content' }\n})\nexport class EmptyContentComponent {\n\n    /** Material Icon to use. */\n    @Input()\n    icon = 'cake';\n\n    /** String or Resource Key for the title. */\n    @Input()\n    title = '';\n\n    /** String or Resource Key for the subtitle. */\n    @Input()\n    subtitle = '';\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ErrorContentComponent } from './error-content/error-content.component';\nimport { EmptyContentComponent } from './empty-content/empty-content.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ],\n    exports: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ]\n})\nexport class TemplateModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, CanActivate,\n    CanActivateChild, RouterStateSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n    constructor(private authService: AuthenticationService,\n                private router: Router,\n                private appConfigService: AppConfigService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const redirectUrl = state.url;\n        return this.checkLogin(redirectUrl);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        let withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        if (this.authService.isLoggedIn() || withCredentialsMode) {\n            return true;\n        }\n        if (!this.authService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.authService.setRedirect({ provider: 'ALL', url: redirectUrl });\n\n            const pathToLogin = this.getRouteDestinationForLogin();\n            this.router.navigate(['/' + pathToLogin]);\n        }\n\n        return false;\n    }\n\n    isOAuthWithoutSilentLogin() {\n        let oauth: OauthConfigModel = this.appConfigService.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n        return this.authService.isOauth() && oauth.silentLogin === false;\n    }\n\n    public getRouteDestinationForLogin(): string {\n        return this.appConfigService &&\n        this.appConfigService.get<string>(AppConfigValues.LOGIN_ROUTE) ?\n            this.appConfigService.get<string>(AppConfigValues.LOGIN_ROUTE) : 'login';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardEcm implements CanActivate {\n\n    constructor(private authService: AuthenticationService,\n                private router: Router,\n                private appConfigService: AppConfigService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.checkLogin(state.url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        let withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        if (this.authService.isEcmLoggedIn() || withCredentialsMode) {\n            return true;\n        }\n\n        if (!this.authService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.authService.setRedirect({ provider: 'ECM', url: redirectUrl });\n            const pathToLogin = this.getRouteDestinationForLogin();\n            this.router.navigate(['/' + pathToLogin]);\n        }\n\n        return false;\n    }\n\n    isOAuthWithoutSilentLogin() {\n        let oauth: OauthConfigModel = this.appConfigService.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n        return this.authService.isOauth() && oauth.silentLogin === false;\n    }\n\n    private getRouteDestinationForLogin(): string {\n        return this.appConfigService &&\n        this.appConfigService.get<string>(AppConfigValues.LOGIN_ROUTE) ?\n            this.appConfigService.get<string>(AppConfigValues.LOGIN_ROUTE) : 'login';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot, Router } from '@angular/router';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { AuthenticationService } from './authentication.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardBpm implements CanActivate, CanActivateChild {\n\n    constructor(private authService: AuthenticationService, private router: Router, private appConfigService: AppConfigService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.checkLogin(state.url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        let withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        if (this.authService.isBpmLoggedIn() || withCredentialsMode) {\n            return true;\n        }\n\n        if (!this.authService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.authService.setRedirect({ provider: 'BPM', url: redirectUrl });\n            const pathToLogin = this.getRouteDestinationForLogin();\n            this.router.navigate(['/' + pathToLogin]);\n        }\n\n        return false;\n    }\n\n    isOAuthWithoutSilentLogin() {\n        let oauth: OauthConfigModel = this.appConfigService.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n        return this.authService.isOauth() && oauth.silentLogin === false;\n    }\n\n    private getRouteDestinationForLogin(): string {\n        return this.appConfigService && this.appConfigService.get<string>(AppConfigValues.LOGIN_ROUTE) ? this.appConfigService.get<string>(AppConfigValues.LOGIN_ROUTE) : 'login';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of deployed apps for this user.\n     * @returns The list of deployed apps\n     */\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation[]> response.data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of deployed apps for this user, where the app name is `name`.\n     * @param name Name of the app\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation> response.data.find((app) => app.name === name)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a specific app ID number.\n     * @param appId ID of the target app\n     * @returns Details of the app\n     */\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => response.data.find((app) => app.id === appId)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { TranslationService } from './translation.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageTitleService {\n\n    private originalTitle: string = '';\n    private translatedTitle: string = '';\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService,\n        private translationService: TranslationService) {\n        translationService.translate.onLangChange.subscribe(() => this.onLanguageChanged());\n        translationService.translate.onTranslationChange.subscribe(() => this.onLanguageChanged());\n    }\n\n    /**\n     * Sets the page title.\n     * @param value The new title\n     */\n    setTitle(value: string = '') {\n        this.originalTitle = value;\n        this.translatedTitle = this.translationService.instant(value);\n\n        this.updateTitle();\n    }\n\n    private onLanguageChanged() {\n        this.translatedTitle = this.translationService.instant(this.originalTitle);\n        this.updateTitle();\n    }\n\n    private updateTitle() {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n\n        const title = this.translatedTitle ? `${this.translatedTitle} - ${name}` : `${name}`;\n        this.titleService.setTitle(title);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { Observable, from, interval, empty } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { concatMap, switchMap, takeWhile, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the first available rendition found for a node.\n     * @param nodeId ID of the target node\n     * @returns Information object for the rendition\n     */\n    getAvailableRenditionForNode(nodeId: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId)).pipe(\n            map((availableRenditions: RenditionPaging) => {\n                let renditionsAvailable: RenditionEntry[] = availableRenditions.list.entries.filter(\n                    (rendition) => (rendition.entry.id === 'pdf' || rendition.entry.id === 'imgpreview'));\n                let existingRendition = renditionsAvailable.find((rend) => rend.entry.status === 'CREATED');\n                return existingRendition ? existingRendition : renditionsAvailable[0];\n            }));\n    }\n\n    /**\n     * Generates a rendition for a node using the first available encoding.\n     * @param nodeId ID of the target node\n     * @returns Null response to indicate completion\n     */\n    generateRenditionForNode(nodeId: string): Observable<any> {\n        return this.getAvailableRenditionForNode(nodeId).pipe(\n            map((rendition: RenditionEntry) => {\n                if (rendition.entry.status !== 'CREATED') {\n                    return from(this.apiService.renditionsApi.createRendition(nodeId, { id: rendition.entry.id }));\n                } else {\n                    return empty();\n                }\n            })\n        );\n    }\n\n    /**\n     * Checks if the specified rendition is available for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the rendition is available, false otherwise\n     */\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Checks if the node can be converted using the specified rendition.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the node can be converted, false otherwise\n     */\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL linking to the specified rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns URL string\n     */\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, encoding);\n    }\n\n    /**\n     * Gets information about a rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Information object about the rendition\n     */\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    /**\n     * Gets a list of all renditions for a node.\n     * @param nodeId ID of the target node\n     * @returns Paged list of rendition details\n     */\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    /**\n     * Creates a rendition for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Null response to indicate completion\n     */\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return from(this.apiService.renditionsApi.createRendition(nodeId, { id: encoding }));\n    }\n\n    /**\n     * Repeatedly attempts to create a rendition, through to success or failure.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @param pollingInterval Time interval (in milliseconds) between checks for completion\n     * @param retries Number of attempts to make before declaring failure\n     * @returns True if the rendition was created, false otherwise\n     */\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000, retries: number = 5) {\n        return this.createRendition(nodeId, encoding)\n            .pipe(\n                concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval, retries))\n            );\n    }\n\n    private pollRendition(nodeId: string, encoding: string, intervalSize: number = 1000, retries: number = 5) {\n        let attempts = 0;\n        return interval(intervalSize)\n            .pipe(\n                switchMap(() => this.getRendition(nodeId, encoding)),\n                takeWhile((renditionEntry: RenditionEntry) => {\n                    attempts += 1;\n                    if (attempts > retries) {\n                        return false;\n                    }\n                    return (renditionEntry.entry.status.toString() !== 'CREATED');\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { TranslationService } from './translation.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    static DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    constructor(private snackBar: MatSnackBar,\n                private translationService: TranslationService) {\n    }\n\n    /**\n     * Opens a SnackBar notification to show a message.\n     * @param message The message (or resource key) to show.\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessage(message: string, config: number | MatSnackBarConfig = NotificationService.DEFAULT_DURATION_MESSAGE): MatSnackBarRef<any> {\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, null, config);\n    }\n\n    /**\n     * Opens a SnackBar notification with a message and a response button.\n     * @param message The message (or resource key) to show.\n     * @param action Caption for the response button\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessageAction(message: string, action: string, config: number | MatSnackBarConfig = NotificationService.DEFAULT_DURATION_MESSAGE): MatSnackBarRef<any> {\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, action, config);\n    }\n\n    /**\n     *  dismiss the notification snackbar\n     */\n    dismissSnackMessageAction() {\n        return this.snackBar.dismiss();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, forkJoin, throwError, of } from 'rxjs';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { map, catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslateLoaderService implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n    private defaultLang: string = 'en';\n\n    constructor(private http: HttpClient) {\n    }\n\n    setDefaultLang(value: string) {\n        this.defaultLang = value || 'en';\n    }\n\n    registerProvider(name: string, path: string) {\n        let registered = this.providers.find((provider) => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find((x) => x.name === name) ? true : false;\n    }\n\n    fetchLanguageFile(lang: string, component: ComponentTranslationModel, fallbackUrl?: string): Observable<void> {\n        const translationUrl = fallbackUrl || `${component.path}/${this.prefix}/${lang}${this.suffix}?v=${Date.now()}`;\n\n        return this.http.get(translationUrl).pipe(\n            map((res: Response) => {\n                component.json[lang] = res;\n            }),\n            retry(3),\n            catchError(() => {\n                if (!fallbackUrl && lang.includes('-')) {\n                    const [langId] = lang.split('-');\n\n                    if (langId && langId !== this.defaultLang) {\n                        const url = `${component.path}/${this.prefix}/${langId}${this.suffix}?v=${Date.now()}`;\n\n                        return this.fetchLanguageFile(lang, component, url);\n                    }\n                }\n                return throwError(`Failed to load ${translationUrl}`);\n            })\n        );\n    }\n\n    getComponentToFetch(lang: string): Array<Observable<any>> {\n        const observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                observableBatch.push(\n                    this.fetchLanguageFile(lang, component)\n                );\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find((x) => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach((model) => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let hasFailures = false;\n        const batch = [\n            ...this.getComponentToFetch(lang).map((observable) => {\n                return observable.pipe(\n                    catchError((error) => {\n                        console.warn(error);\n                        hasFailures = true;\n                        return of(error);\n                    })\n                );\n            })\n        ];\n\n        return new Observable((observer) => {\n\n            if (batch.length > 0) {\n                forkJoin(batch).subscribe(\n                    () => {\n                        let fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        if (hasFailures) {\n                            observer.error('Failed to load some resources');\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    (err) => {\n                        observer.error('Failed to load some resources');\n                    });\n            } else {\n                let fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                    observer.complete();\n                }\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Minimatch } from 'minimatch-browser';\nimport { Subject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport {\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    FileUploadErrorEvent,\n    FileUploadEvent\n} from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UploadService {\n\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private excludedFileList: string[] = [];\n    private matchingOptions: any = null;\n\n    activeTask: Promise<any> = null;\n    queue: FileModel[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(protected apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     * @returns True if a file is uploading, false otherwise\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Gets the file Queue\n     * @returns Array of files that form the queue\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Adds files to the uploading queue to be uploaded\n     * @param files One or more separate parameters or an array of files to queue\n     * @returns Array of files that were not blocked from upload by the ignore list\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter((currentFile) => this.filterElement(currentFile));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n\n        this.excludedFileList = <string[]> this.appConfigService.get('files.excluded');\n        if (this.excludedFileList) {\n\n            this.matchingOptions = this.appConfigService.get('files.match-options');\n\n            isAllowed = this.excludedFileList.filter((pattern) => {\n                let minimatch = new Minimatch(pattern, this.matchingOptions);\n                return minimatch.match(file.name);\n            }).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Finds all the files in the queue that are not yet uploaded and uploads them into the directory folder.\n     * @param emitter Emitter to invoke on file status change\n     */\n    uploadFilesInTheQueue(emitter?: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            let file = this.queue.find((currentFile) => currentFile.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                let next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    /**\n     * Cancels uploading of files.\n     * @param files One or more separate parameters or an array of files specifying uploads to cancel\n     */\n    cancelUpload(...files: FileModel[]) {\n        files.forEach((file) => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    /** Clears the upload queue */\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    /**\n     * Gets an upload promise for a file.\n     * @param file The target file\n     * @returns Promise that is resolved if the upload is successful or error otherwise\n     */\n    getUploadPromise(file: FileModel): any {\n        let opts: any = {\n            renditions: 'doclib',\n            include: ['allowableOperations']\n        };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = file.options.majorVersion;\n            opts.comment = file.options.comment;\n            opts.name = file.name;\n        } else {\n            opts.autoRename = true;\n        }\n\n        if (file.options.nodeType) {\n            opts.nodeType = file.options.nodeType;\n        }\n\n        if (file.id) {\n            return this.apiService.getInstance().node.updateNodeContent(\n                file.id,\n                file.file,\n                opts\n            );\n        } else {\n            return this.apiService.getInstance().upload.uploadFile(\n                file.file,\n                file.options.path,\n                file.options.parentId,\n                file.options,\n                opts\n            );\n        }\n    }\n\n    private beginUpload(file: FileModel, emitter: EventEmitter<any>): any {\n\n        let promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n            .on('abort', () => {\n                this.onUploadAborted(file);\n                if (emitter) {\n                    emitter.emit({ value: 'File aborted' });\n                }\n            })\n            .on('error', (err) => {\n                this.onUploadError(file, err);\n                if (emitter) {\n                    emitter.emit({ value: 'Error file uploaded' });\n                }\n            })\n            .on('success', (data) => {\n                this.onUploadComplete(file, data);\n                if (emitter) {\n                    emitter.emit({ value: data });\n                }\n            })\n            .catch((err) => {\n            });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.errorCode = ( error || {} ).status;\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\n\nimport { NodePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    /**\n     * Gets a list of nodes in the trash.\n     * @param options Options for JS-API call\n     * @returns List of nodes in the trash\n     */\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.nodesApi.getDeletedNodes(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoritesApiService {\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = this\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    /**\n     * Gets the favorites for a user.\n     * @param personId ID of the user\n     * @param options Options supported by JS-API\n     * @returns List of favorites\n     */\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(this.remapFavoritesData);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, MinimalNode, NodePaging } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: NodeEntry) {\n        return entity.entry;\n    }\n\n    /**\n     * Gets the stored information about a node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Node information\n     */\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Gets the items contained in a folder node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns List of child items from the folder\n     */\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new document node inside a folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new node\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new node\n     */\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder node inside a parent folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new folder\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new folder\n     */\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    /**\n     * Updates the information about a node.\n     * @param nodeId ID of the target node\n     * @param nodeBody New data for the node\n     * @param options Optional parameters supported by JS-API\n     * @returns Updated node information\n     */\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n\n        const promise = this.nodesApi\n            .updateNode(nodeId, nodeBody, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Moves a node to the trashcan.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Empty result that notifies when the deletion is complete\n     */\n    deleteNode(nodeId: string, options: any = {}): Observable<any> {\n        const promise = this.nodesApi.deleteNode(nodeId, options);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Restores a node previously moved to the trashcan.\n     * @param nodeId ID of the node to restore\n     * @returns Details of the restored node\n     */\n    restoreNode(nodeId: string): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .restoreNode(nodeId)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param personId ID of the target user\n     * @returns User information\n     */\n    getPerson(personId: string): Observable<any> {\n        const promise = this.peopleApi.getPerson(personId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Gets information about the user who is currently logged in.\n     * @returns User information\n     */\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '../interface/search-configuration.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    /**\n     * Generates a QueryBody object with custom search parameters.\n     * @param searchTerm Term text to search for\n     * @param maxResults Maximum number of search results to show in a page\n     * @param skipCount The offset of the start of the page within the results list\n     * @returns Query body defined by the parameters\n     */\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        let defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `'${searchTerm}*' OR name:'${searchTerm}*'` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, QueryBody } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n\n    dataLoaded: Subject<NodePaging> = new Subject();\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchConfigurationService: SearchConfigurationService) {\n    }\n\n    /**\n     * Gets a list of nodes that match the given search criteria.\n     * @param term Term to search for\n     * @param options Options for delivery of the search results\n     * @returns List of nodes resulting from the search\n     */\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().core.queriesApi.findNodes(term, options);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search.\n     * @param searchTerm Term to search for\n     * @param maxResults Maximum number of items in the list of results\n     * @param skipCount Number of higher-ranked items to skip over in the list\n     * @returns List of search results\n     */\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<NodePaging> {\n        const searchQuery = Object.assign(this.searchConfigurationService.generateQueryBody(searchTerm, maxResults, skipCount));\n        const promise = this.apiService.getInstance().search.searchApi.search(searchQuery);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search with its parameters supplied by a QueryBody object.\n     * @param queryBody Object containing the search parameters\n     * @returns List of search results\n     */\n    searchByQueryBody(queryBody: QueryBody): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().search.searchApi.search(queryBody);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    /** The number of entities that exist in the collection before those included in this list. */\n    skipCount?: number;\n\n    /** The maximum number of items to return in the list. */\n    maxItems?: number;\n\n    /** The id of the node to start the search from. Supports the aliases -my-, -root- and -shared-. */\n    rootNodeId?: string;\n\n    /** Restrict the returned results to only those of the given node type and its sub-types. */\n    nodeType?: string;\n\n    /**\n     * Return additional information about the node. The available optional fields are:\n     * `allowableOperations`, `aspectNames`, `isLink`, `isLocked`, `path` and `properties`.\n     */\n    include?: string[];\n\n    /**\n     * String to control the order of the entities returned in a list. You can use this\n     * parameter to sort the list by one or more fields. Each field has a default sort order,\n     * which is normally ascending order (but see the JS-API docs to check if any fields used\n     * in a method have a descending default search order). To sort the entities in a specific\n     * order, you can use the \"ASC\" and \"DESC\" keywords for any field.\n     */\n    orderBy?: string;\n\n    /**\n     * List of field names. You can use this parameter to restrict the fields returned within\n     * a response if, for example, you want to save on overall bandwidth. The list applies to a\n     * returned individual entity or entries within a collection. If the API method also supports\n     * the `include` parameter, then the fields specified in the include parameter are returned in\n     * addition to those specified in the fields parameter.\n     */\n    fields?: string[];\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, SharedLinkEntry } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedLinksApiService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n    }\n\n    private get sharedLinksApi() {\n        return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    /**\n     * Gets shared links available to the current user.\n     * @param options Options supported by JS-API\n     * @returns List of shared links\n     */\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: ['properties', 'allowableOperations']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = this.sharedLinksApi.findSharedLinks(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Creates a shared link available to the current user.\n     * @param nodeId ID of the node to link to\n     * @param options Options supported by JS-API\n     * @returns The shared link just created\n     */\n    createSharedLinks(nodeId: string, options: any = {}): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.addSharedLink({ nodeId: nodeId });\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Deletes a shared link.\n     * @param sharedId ID of the link to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSharedLink(sharedId: string): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.deleteSharedLink(sharedId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SitesService {\n\n    constructor(\n        private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets a list of all sites in the repository.\n     * @param opts Options supported by JS-API\n     * @returns List of sites\n     */\n    getSites(opts: any = {}): Observable<SitePaging> {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return from(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a site.\n     * @param siteId ID of the target site\n     * @param opts Options supported by JS-API\n     * @returns Information about the site\n     */\n    getSite(siteId: string, opts?: any): Observable<SiteEntry | {}> {\n        return from(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a site.\n     * @param siteId Site to delete\n     * @param permanentFlag True: deletion is permanent; False: site is moved to the trash\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSite(siteId: string, permanentFlag: boolean = true): Observable<any> {\n        let options: any = {};\n        options.permanent = permanentFlag;\n        return from(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a site's content.\n     * @param siteId ID of the target site\n     * @returns Site content\n     */\n    getSiteContent(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    /**\n     * Gets a list of all a site's members.\n     * @param siteId ID of the target site\n     * @returns Site members\n     */\n    getSiteMembers(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    /**\n     * Gets the username of the user currently logged into ACS.\n     * @returns Username string\n     */\n    getEcmCurrentLoggedUserName(): string {\n        return this.apiService.getInstance().getEcmUsername();\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { LoginDialogComponent } from '../login/components/login-dialog.component';\nimport { LoginDialogComponentData } from '../login/components/login-dialog-component-data.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param actionName Name of the action to show in the title\n     * @param title Title for the dialog\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(actionName: string, title: string): Observable<string> {\n        const logged = new Subject<string>();\n        logged.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: LoginDialogComponentData = {\n            title,\n            actionName,\n            logged\n        };\n\n        this.openLoginDialog(data, 'adf-login-dialog', '630px');\n        return logged;\n    }\n\n    private openLoginDialog(data: LoginDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(LoginDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApiCompatibility,\n    ContentApi,\n    Core\n} from '@alfresco/js-api';\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExternalAlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    init(ecmHost: string, contextRoot: string) {\n\n        let domainPrefix = this.createPrefixFromHost(ecmHost);\n\n        const config = {\n            provider: 'ECM',\n            hostEcm: ecmHost,\n            authType: 'BASIC',\n            contextRoot: contextRoot,\n            domainPrefix\n        };\n        this.initAlfrescoApi(config);\n    }\n\n    protected initAlfrescoApi(config) {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n    }\n\n    private createPrefixFromHost(url: string): string {\n        let match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n        let result = null;\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\n            result = match[2];\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { LogService } from '../services/log.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable()\nexport class ClipboardService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private logService: LogService,\n        private notificationService: NotificationService) {}\n\n    isTargetValid(target: HTMLInputElement | HTMLTextAreaElement) {\n        if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n            return !target.hasAttribute('disabled');\n        }\n\n        this.logService.error(`${target} should be input or textarea`);\n        return false;\n    }\n\n    copyToClipboard(target: HTMLInputElement | HTMLTextAreaElement, message?: string) {\n        if (this.isTargetValid(target)) {\n            try {\n                target.select();\n                target.setSelectionRange(0, target.value.length);\n                this.document.execCommand('copy');\n                this.notify(message);\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private notify(message) {\n        if (message) {\n            this.notificationService.openSnackMessage(message);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    selector: '[adf-clipboard]',\n    exportAs: 'adfClipboard'\n})\nexport class ClipboardDirective {\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-clipboard') target: HTMLInputElement | HTMLTextAreaElement;\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('clipboard-notification') message: string;\n\n    @HostListener('click', ['$event'])\n    handleClickEvent(event: MouseEvent) {\n        event.preventDefault();\n        this.copyToClipboard();\n    }\n\n    constructor(private clipboardService: ClipboardService) {}\n\n    private copyToClipboard() {\n        const isValidTarget = this.clipboardService.isTargetValid(this.target);\n\n        if (isValidTarget) {\n            this.clipboardService.copyToClipboard(this.target, this.message);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClipboardDirective } from './clipboard.directive';\nimport { ClipboardService } from './clipboard.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ClipboardService\n    ],\n    declarations: [\n        ClipboardDirective\n    ],\n    exports: [\n        ClipboardDirective\n    ]\n})\n\nexport class ClipboardModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PipeModule } from '../pipes/pipe.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material';\n\n@Component({\n    selector: 'adf-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-icon' }\n})\nexport class IconComponent {\n    private _value = '';\n    private _isCustom = false;\n\n    /** Theme color palette for the component. */\n    @Input()\n    color: ThemePalette;\n\n    get value(): string {\n        return this._value;\n    }\n\n    /** Icon value, which can be either a ligature name or a custom icon in the format `[namespace]:[name]`. */\n    @Input()\n    set value(value: string) {\n        this._value = value || 'settings';\n        this._isCustom = this._value.includes(':');\n    }\n\n    get isCustom(): boolean {\n        return this._isCustom;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { IconComponent } from './icon.component';\nimport { MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    declarations: [\n        IconComponent\n    ],\n    exports: [\n        IconComponent\n    ],\n    providers: [\n        ThumbnailService\n    ]\n})\nexport class IconModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EcmCompanyModel {\n      organization: string;\n      address1: string;\n      address2: string;\n      address3: string;\n      postcode: string;\n      telephone: string;\n      fax: string;\n      email: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the user redirection guard.*\n */\n\nexport class RedirectionModel {\n    provider: string;\n    url?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.provider = obj.provider;\n            this.url = obj.url || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class PaginationModel extends Pagination {\n    merge?: boolean;\n\n    constructor(input?: any) {\n        super(input);\n        if (input) {\n            this.count = input.count;\n            this.hasMoreItems = input.hasMoreItems ? input.hasMoreItems : false;\n            this.merge = input.merge ? input.merge : false;\n            this.totalItems = input.totalItems;\n            this.skipCount = input.skipCount;\n            this.maxItems = input.maxItems;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RequestPaginationModel {\n\n    skipCount?: number;\n\n    maxItems?: number;\n\n    merge?: boolean = false;\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:adf-file-name  */\nexport class AlfrescoApiMock {\n\n    login(username: string, password: string) {\n        return new Promise((resolve) => {\n            resolve('TICKET_4479f4d3bb155195879bfbb8d5206f433488a1b1');\n        });\n    }\n\n    logout() {\n        return new Promise((resolve) => {\n            resolve('logout');\n        });\n    }\n\n    changeConfig() {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AppConfigServiceMock extends AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent'\n    };\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    load(): Promise<any> {\n        return new Promise((resolve) => {\n            this.onLoadSubject.next(this.config);\n            resolve(this.config);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { RedirectionModel } from '../models/redirection.model';\n\n// TODO: should be extending AuthenticationService\nexport class AuthenticationMock /*extends AuthenticationService*/ {\n    private redirectUrl: RedirectionModel = null;\n\n    setRedirectUrl(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string|null {\n        return this.redirectUrl ? this.redirectUrl.url : null;\n    }\n\n    // TODO: real auth service returns Observable<string>\n    login(username: string, password: string): Observable<{ type: string, ticket: any }> {\n        if (username === 'fake-username' && password === 'fake-password') {\n            return of({ type: 'type', ticket: 'ticket'});\n        }\n\n        if (username === 'fake-username-CORS-error' && password === 'fake-password') {\n            return throwError({\n                error: {\n                    crossDomain: true,\n                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'\n                }\n            });\n        }\n\n        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: Invalid CSRF-token', status: 403});\n        }\n\n        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403});\n        }\n\n        return throwError('Fake server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeBpmUserNoImage = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: undefined,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmUser = {\n    apps: [],\n    capabilities: null,\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-bpm-first-name',\n    lastName: 'fake-bpm-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 12,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmEditedUser = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 'src/assets/images/bpmImg.gif',\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\n\nexport let fakeUser1 = { id: 1, email: 'fake-email@dom.com', firstName: 'firstName', lastName: 'lastName' };\n\nexport let fakeUser2 = { id: 1001, email: 'some-one@somegroup.com', firstName: 'some', lastName: 'one' };\n\nexport let fakeTasksComment = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, message: 'fake-message-1', created: '', createdBy: fakeUser1\n        },\n        {\n            id: 2, message: 'fake-message-2', created: '', createdBy: fakeUser1\n        }\n    ]\n};\n\nexport let fakeProcessComment = new CommentModel({id: 1, message: 'Test', created: new Date('2016-11-10T03:37:30.010+0000'), createdBy: new UserProcessModel({\n    id: 13,\n    firstName: 'Wilbur',\n    lastName: 'Adams',\n    email: 'wilbur@app.com'\n})});\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CookieService } from '../services/cookie.service';\n\nexport class CookieServiceMock extends CookieService {\n\n    /** @override */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getItem(key: string): string | null {\n        return this[key] && this[key].data || null;\n    }\n\n    /** @override */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        this[key] = {data, expiration, path};\n    }\n\n    /** @override */\n    clear() {\n        Object.keys(this).forEach((key) => {\n            if (this.hasOwnProperty(key) && typeof(this[key]) !== 'function') {\n                this[key] = undefined;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EventMock {\n\n    static keyDown(key: any) {\n        let event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keydown');\n        document.dispatchEvent(event);\n    }\n\n    static keyUp(key: any) {\n        let event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keyup');\n        document.dispatchEvent(event);\n    }\n\n    static resizeMobileView() {\n        // todo: no longer compiles with TS 2.0.2 as innerWidth/innerHeight are readonly fields\n        /*\n        window.innerWidth = 320;\n        window.innerHeight = 568;\n        */\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeSearch = {\n    list: {\n        pagination: {\n            count: 1,\n            hasMoreItems: false,\n            totalItems: 1,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: '123',\n                    name: 'MyDoc',\n                    content: {\n                        mimetype: 'text/plain'\n                    },\n                    createdByUser: {\n                        displayName: 'John Doe'\n                    },\n                    modifiedByUser: {\n                        displayName: 'John Doe'\n                    }\n                }\n            }\n        ]\n    }\n};\n\nexport let mockError = {\n    error: {\n        errorKey: 'Search failed',\n        statusCode: 400,\n        briefSummary: '08220082 search failed',\n        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',\n        descriptionURL: 'https://api-explorer.alfresco.com'\n    }\n};\n\nexport let searchMockApi = {\n    core: {\n        queriesApi: {\n            findNodes: (term, opts) => Promise.resolve(fakeSearch)\n        }\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationService } from '../services/translation.service';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport class TranslationMock implements TranslationService {\n\n    defaultLang: string = 'en';\n    userLang: string;\n    customLoader: any;\n\n    translate: any = {\n        onLangChange: new EventEmitter<LangChangeEvent>()\n    };\n\n    addTranslationFolder() {}\n\n    onTranslationChanged() {}\n\n    use(): any {}\n\n    loadTranslation() {}\n\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return of(key);\n    }\n\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\n\n/* tslint:disable:adf-file-name */\n@Injectable()\nexport class AlfrescoApiServiceMock extends AlfrescoApiService {\n\n    constructor(protected appConfig: AppConfigService,\n                protected storage: StorageService) {\n        super(appConfig, storage);\n        if (!this.alfrescoApi) {\n            this.initAlfrescoApi();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel, FormValues } from '../../form/components/widgets/core/index';\n\nexport let formTest = new FormModel({});\n\nexport let fakeTaskProcessVariableModels = [\n    {id: 'TEST_VAR_1', type: 'string', value: 'test_value_1'},\n    {id: 'TEST_VAR_2', type: 'string', value: 'test_value_2'},\n    {id: 'TEST_VAR_3', type: 'string', value: 'test_value_3'}\n];\n\nexport let formValues: FormValues = {\n    'test_1': 'value_1',\n    'test_2': 'value_2',\n    'test_3': 'value_1',\n    'test_4': 'dropdown_id',\n    'test_5': 'dropdown_label',\n    'dropdown': {'id': 'dropdown_id', 'name': 'dropdown_label'}\n};\n\nexport let fakeFormJson = {\n    id: '9999',\n    name: 'FORM_VISIBILITY',\n    processDefinitionId: 'PROCESS_TEST:9:9999',\n    processDefinitionName: 'PROCESS_TEST',\n    processDefinitionKey: 'PROCESS_TEST',\n    taskId: '999',\n    taskName: 'TEST',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '000000000000000000',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_TEST',\n                        name: 'FIELD_TEST',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_WITH_CONDITION',\n                        name: 'FIELD_WITH_CONDITION',\n                        type: 'text',\n                        value: 'field_with_condition_value',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'LEFT_FORM_FIELD_ID',\n                        name: 'LEFT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'LEFT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'RIGHT_FORM_FIELD_ID',\n                        name: 'RIGHT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ]\n            }\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TestBed, TestModuleMetadata } from '@angular/core/testing';\n\ninterface DoneFn extends Function {\n    (): void;\n    fail: (message?: Error | string) => void;\n}\n\ndeclare function beforeAll(action: (done: DoneFn) => void, timeout?: number): void;\ndeclare function afterAll(action: (done: DoneFn) => void, timeout?: number): void;\n\nconst resetTestingModule = TestBed.resetTestingModule;\nconst preventAngularFromResetting = () => (TestBed.resetTestingModule = () => TestBed);\nconst allowAngularToReset = () => (TestBed.resetTestingModule = resetTestingModule);\n\nexport const setupTestBed = (moduleDef: TestModuleMetadata) => {\n    beforeAll((done) =>\n        (async () => {\n            localStorage.clear();\n            sessionStorage.clear();\n            resetTestingModule();\n            preventAngularFromResetting();\n            TestBed.configureTestingModule(moduleDef);\n            await TestBed.compileComponents();\n\n            // prevent Angular from resetting testing module\n            TestBed.resetTestingModule = () => TestBed;\n        })()\n            .then(done)\n            .catch(done.fail)\n    );\n\n    afterAll(() => allowAngularToReset());\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport function startupServiceFactory(alfrescoApiService: AlfrescoApiService): Function {\n    return () => alfrescoApiService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader, TranslateStore, TranslateService } from '@ngx-translate/core';\n\nimport { MaterialModule } from './material.module';\nimport { AboutModule } from './about/about.module';\nimport { AppConfigModule } from './app-config/app-config.module';\nimport { CardViewModule } from './card-view/card-view.module';\nimport { ContextMenuModule } from './context-menu/context-menu.module';\nimport { DataColumnModule } from './data-column/data-column.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { InfoDrawerModule } from './info-drawer/info-drawer.module';\nimport { LanguageMenuModule } from './language-menu/language-menu.module';\nimport { LoginModule } from './login/login.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { HostSettingsModule } from './settings/host-settings.module';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { UserInfoModule } from './userinfo/userinfo.module';\nimport { ViewerModule } from './viewer/viewer.module';\nimport { FormModule } from './form/form.module';\nimport { SidenavLayoutModule } from './layout/layout.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { ButtonsMenuModule } from './buttons-menu/buttons-menu.module';\nimport { TemplateModule } from './templates/template.module';\nimport { ClipboardModule } from './clipboard/clipboard.module';\n\nimport { DirectiveModule } from './directives/directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { PipeModule } from './pipes/pipe.module';\n\nimport { AlfrescoApiService } from './services/alfresco-api.service';\nimport { TranslationService } from './services/translation.service';\nimport { startupServiceFactory } from './services/startup-service-factory';\nimport { SortingPickerModule } from './sorting-picker/sorting-picker.module';\nimport { IconModule } from './icon/icon.module';\nimport { TranslateLoaderService } from './services/translate-loader.service';\n\n@NgModule({\n    imports: [\n        TranslateModule,\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        IconModule,\n        SortingPickerModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule,\n        IconModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                TranslateStore,\n                TranslateService,\n                { provide: TranslateLoader, useClass: TranslateLoaderService },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: startupServiceFactory,\n                    deps: [\n                        AlfrescoApiService\n                    ],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule\n        };\n    }\n\n    constructor(translation: TranslationService) {\n        translation.addTranslationFolder('adf-core', 'assets/adf-core');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeApps = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, defaultAppId: null, name: 'Sales-Fakes-App', description: 'desc-fake1', modelId: 22,\n            theme: 'theme-1-fake', icon: 'glyphicon-asterisk', 'deploymentId': '111', 'tenantId': null\n        },\n        {\n            id: 2, defaultAppId: null, name: 'health-care-Fake', description: 'desc-fake2', modelId: 33,\n            theme: 'theme-2-fake', icon: 'glyphicon-asterisk', 'deploymentId': '444', 'tenantId': null\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EcmCompanyModel } from '../models/ecm-company.model';\n\nexport let fakeEcmCompany: EcmCompanyModel = {\n    organization: 'company-fake-name',\n    address1: 'fake-address-1',\n    address2: 'fake-address-2',\n    address3: 'fake-address-3',\n    postcode: 'fAk1',\n    telephone: '00000000',\n    fax: '11111111',\n    email: 'fakeCompany@fake.com'\n};\n\nexport let fakeEcmUser = {\n    id: 'fake-id',\n    firstName: 'fake-ecm-first-name',\n    lastName: 'fake-ecm-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'job-ecm-test',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmUserNoImage = {\n    id: 'fake-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: null,\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: null,\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmEditedUser = {\n    id: 'fake-id',\n    firstName: null,\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'test job',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeRendition = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'NOT_CREATED'\n    }\n};\n\nexport let fakeRenditionCreated = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'CREATED'\n    }\n};\n\nexport let fakeRenditionsList = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            }\n        ]\n    }\n};\n\nexport let fakeRenditionsListWithACreated = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'CREATED'\n                }\n            }\n        ]\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeForm = {\n    id: 1001,\n    name: 'ISSUE_FORM',\n    processDefinitionId: 'ISSUE_APP:1:2504',\n    processDefinitionName: 'ISSUE_APP',\n    processDefinitionKey: 'ISSUE_APP',\n    taskId: '7506',\n    taskDefinitionKey: 'sid-F67A2996-1684-4774-855A-4591490081FD',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212398417',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'label',\n                        name: 'Label',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'test1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'test2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'test3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio',\n                        name: 'radio',\n                        type: 'radio-buttons',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: [\n                            {\n                                id: 'option_1',\n                                name: 'Option 1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'Option 2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'Option 3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 2,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212413062',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefinitionTwoTextFields = {\n    id: 20,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:1:153',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '159',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507044399260',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'firstname',\n                        name: 'firstName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'lastname',\n                        name: 'lastName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionDropdownField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionRequiredField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formReadonlyTwoTextFields = {\n    id: 22,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:3:182',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '188',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n      {\n        fieldType: 'ContainerRepresentation',\n        id: '1507044399260',\n        name: 'Label',\n        type: 'container',\n        value: null,\n        required: false,\n        readOnly: false,\n        overrideId: false,\n        colspan: 1,\n        placeholder: null,\n        minLength: 0,\n        maxLength: 0,\n        minValue: null,\n        maxValue: null,\n        regexPattern: null,\n        optionType: null,\n        hasEmptyValue: null,\n        options: null,\n        restUrl: null,\n        restResponsePath: null,\n        restIdProperty: null,\n        restLabelProperty: null,\n        tab: null,\n        className: null,\n        dateDisplayFormat: null,\n        layout: null,\n        sizeX: 2,\n        sizeY: 1,\n        row: -1,\n        col: -1,\n        visibilityCondition: null,\n        numberOfColumns: 2,\n        fields: {\n          '1': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'firstname',\n              name: 'firstName',\n              type: 'readonly',\n              value: 'fakeFirstName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 2,\n                field: {\n                  id: 'firstname',\n                  name: 'firstName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ],\n          '2': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'lastname',\n              name: 'lastName',\n              type: 'readonly',\n              value: 'fakeLastName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 1,\n                field: {\n                  id: 'lastname',\n                  name: 'lastName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ]\n        }\n      }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefVisibilitiFieldDependsOnNextOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefVisibilitiFieldDependsOnPreviousOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let startFormDateWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormNumberWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'number',\n                        name: 'number widget',\n                        type: 'integer',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormAmountWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'amount',\n                        name: 'amount widget',\n                        type: 'amount',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormRadioButtonWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio-but',\n                        name: 'radio-buttons',\n                        type: 'radio-buttons',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormTextDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'mocktext',\n                        name: 'mockText',\n                        type: 'text',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormDropdownDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'mockTypeDropDown',\n                        name: 'mock DropDown',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'opt1',\n                                name: 'Option-1'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-2'\n                            },\n                            {\n                                id: 'opt3',\n                                name: 'Option-3'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-3'\n                            }\n                        ]\n                    }]}\n        }]\n};\n\nexport let startMockForm = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        },\n        {\n            id: 'start_process',\n            name: 'Start Process'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n\nexport let startMockFormWithTab = {\n    id: 4,\n    taskName: 'Mock Title',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [\n        {\n            id: 'form1',\n            name: 'Tab 1'\n        },\n        {\n            id: 'form2',\n            name: 'Tab 2'\n        }\n    ],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formModelTabs = {\n    id: 16,\n    name: 'start event',\n    description: '',\n    version: 2,\n    lastUpdatedBy: 4,\n    lastUpdatedByFullName: 'User Test',\n    lastUpdated: '2017-10-04T13:00:03.030+0000',\n    stencilSetId: null,\n    referenceId: null,\n    formDefinition: {\n      tabs: [],\n      fields: [\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037668653',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'AmountFieldRepresentation',\n                id: 'label',\n                name: 'Label',\n                type: 'amount',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null,\n                enableFractions: false,\n                currency: null\n              }\n            ],\n            '2': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label1',\n                name: 'Label1',\n                type: 'date',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 1\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ]\n          }\n        },\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037670167',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label2',\n                name: 'Label2',\n                type: 'boolean',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ],\n            '2': []\n          }\n        }\n      ],\n      outcomes: [],\n      javascriptEvents: [],\n      className: '',\n      style: '',\n      customFieldTemplates: {},\n      metadata: {},\n      variables: [],\n      customFieldsValueInfo: {},\n      gridsterForm: false\n    }\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let mockToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ' +\n    'zdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJnaXZ' +\n    'lbl9uYW1lIjoiSm9obiIsImFkbWluIjp0cnVlLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwicHJ' +\n    'lZmVycmVkX3VzZXJuYW1lIjoiam9obkRvZTEiLCJqdGkiOiI2MmQ3YjA4NS1hNTJjLTRjZmEtYjA2Zi1' +\n    'hODFhN2IwNjRjZDIiLCJpYXQiOjE1NDM0MTA0NzcsImV4cCI6MTU0MzQxNTIxM30.pSP86kmX3keuU5E3ndaOUq2TzKdJRsuMnBdFz3Y-UEU';\n"]}